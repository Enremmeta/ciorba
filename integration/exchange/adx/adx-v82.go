// Code generated by protoc-gen-go.
// source: adx-v82.proto
// DO NOT EDIT!

/*
Package adx_v82 is a generated protocol buffer package.

It is generated from these files:
	adx-v82.proto

It has these top-level messages:
	BidRequest
	BidResponse
*/
package adx

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

// Reasons for constrained usage treatment of user data (google_user_id,
// hosted_match_data, IDFA, etc).
type BidRequest_UserDataTreatment int32

const (
	BidRequest_TAG_FOR_CHILD_DIRECTED_TREATMENT BidRequest_UserDataTreatment = 0
)

var BidRequest_UserDataTreatment_name = map[int32]string{
	0: "TAG_FOR_CHILD_DIRECTED_TREATMENT",
}
var BidRequest_UserDataTreatment_value = map[string]int32{
	"TAG_FOR_CHILD_DIRECTED_TREATMENT": 0,
}

func (x BidRequest_UserDataTreatment) Enum() *BidRequest_UserDataTreatment {
	p := new(BidRequest_UserDataTreatment)
	*p = x
	return p
}
func (x BidRequest_UserDataTreatment) String() string {
	return proto.EnumName(BidRequest_UserDataTreatment_name, int32(x))
}
func (x *BidRequest_UserDataTreatment) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_UserDataTreatment_value, data, "BidRequest_UserDataTreatment")
	if err != nil {
		return err
	}
	*x = BidRequest_UserDataTreatment(value)
	return nil
}
func (BidRequest_UserDataTreatment) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0}
}

// Publisher type of the inventory where the ad will be shown. For an AdX
// publisher, its inventory can be either owned and operated (O&O),
// represented by the publisher, or of unknown status. AdSense and AdMob
// inventory is represented by Google.
type BidRequest_PublisherType int32

const (
	BidRequest_UNKNOWN_PUBLISHER_TYPE           BidRequest_PublisherType = 0
	BidRequest_ADX_PUBLISHER_OWNED_AND_OPERATED BidRequest_PublisherType = 1
	BidRequest_ADX_PUBLISHER_REPRESENTED        BidRequest_PublisherType = 2
	BidRequest_GOOGLE_REPRESENTED               BidRequest_PublisherType = 3
)

var BidRequest_PublisherType_name = map[int32]string{
	0: "UNKNOWN_PUBLISHER_TYPE",
	1: "ADX_PUBLISHER_OWNED_AND_OPERATED",
	2: "ADX_PUBLISHER_REPRESENTED",
	3: "GOOGLE_REPRESENTED",
}
var BidRequest_PublisherType_value = map[string]int32{
	"UNKNOWN_PUBLISHER_TYPE":           0,
	"ADX_PUBLISHER_OWNED_AND_OPERATED": 1,
	"ADX_PUBLISHER_REPRESENTED":        2,
	"GOOGLE_REPRESENTED":               3,
}

func (x BidRequest_PublisherType) Enum() *BidRequest_PublisherType {
	p := new(BidRequest_PublisherType)
	*p = x
	return p
}
func (x BidRequest_PublisherType) String() string {
	return proto.EnumName(BidRequest_PublisherType_name, int32(x))
}
func (x *BidRequest_PublisherType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_PublisherType_value, data, "BidRequest_PublisherType")
	if err != nil {
		return err
	}
	*x = BidRequest_PublisherType(value)
	return nil
}
func (BidRequest_PublisherType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

type BidRequest_UserDemographic_Gender int32

const (
	BidRequest_UserDemographic_UNKNOWN BidRequest_UserDemographic_Gender = 0
	BidRequest_UserDemographic_MALE    BidRequest_UserDemographic_Gender = 1
	BidRequest_UserDemographic_FEMALE  BidRequest_UserDemographic_Gender = 2
)

var BidRequest_UserDemographic_Gender_name = map[int32]string{
	0: "UNKNOWN",
	1: "MALE",
	2: "FEMALE",
}
var BidRequest_UserDemographic_Gender_value = map[string]int32{
	"UNKNOWN": 0,
	"MALE":    1,
	"FEMALE":  2,
}

func (x BidRequest_UserDemographic_Gender) Enum() *BidRequest_UserDemographic_Gender {
	p := new(BidRequest_UserDemographic_Gender)
	*p = x
	return p
}
func (x BidRequest_UserDemographic_Gender) String() string {
	return proto.EnumName(BidRequest_UserDemographic_Gender_name, int32(x))
}
func (x *BidRequest_UserDemographic_Gender) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_UserDemographic_Gender_value, data, "BidRequest_UserDemographic_Gender")
	if err != nil {
		return err
	}
	*x = BidRequest_UserDemographic_Gender(value)
	return nil
}
func (BidRequest_UserDemographic_Gender) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 2, 0}
}

// The type of device on which the ad will be shown.
type BidRequest_Device_DeviceType int32

const (
	BidRequest_Device_UNKNOWN_DEVICE    BidRequest_Device_DeviceType = 0
	BidRequest_Device_HIGHEND_PHONE     BidRequest_Device_DeviceType = 1
	BidRequest_Device_TABLET            BidRequest_Device_DeviceType = 2
	BidRequest_Device_PERSONAL_COMPUTER BidRequest_Device_DeviceType = 3
	BidRequest_Device_CONNECTED_TV      BidRequest_Device_DeviceType = 4
	BidRequest_Device_GAME_CONSOLE      BidRequest_Device_DeviceType = 5
)

var BidRequest_Device_DeviceType_name = map[int32]string{
	0: "UNKNOWN_DEVICE",
	1: "HIGHEND_PHONE",
	2: "TABLET",
	3: "PERSONAL_COMPUTER",
	4: "CONNECTED_TV",
	5: "GAME_CONSOLE",
}
var BidRequest_Device_DeviceType_value = map[string]int32{
	"UNKNOWN_DEVICE":    0,
	"HIGHEND_PHONE":     1,
	"TABLET":            2,
	"PERSONAL_COMPUTER": 3,
	"CONNECTED_TV":      4,
	"GAME_CONSOLE":      5,
}

func (x BidRequest_Device_DeviceType) Enum() *BidRequest_Device_DeviceType {
	p := new(BidRequest_Device_DeviceType)
	*p = x
	return p
}
func (x BidRequest_Device_DeviceType) String() string {
	return proto.EnumName(BidRequest_Device_DeviceType_name, int32(x))
}
func (x *BidRequest_Device_DeviceType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_Device_DeviceType_value, data, "BidRequest_Device_DeviceType")
	if err != nil {
		return err
	}
	*x = BidRequest_Device_DeviceType(value)
	return nil
}
func (BidRequest_Device_DeviceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 5, 0}
}

type BidRequest_Device_ScreenOrientation int32

const (
	BidRequest_Device_UNKNOWN_ORIENTATION BidRequest_Device_ScreenOrientation = 0
	BidRequest_Device_PORTRAIT            BidRequest_Device_ScreenOrientation = 1
	BidRequest_Device_LANDSCAPE           BidRequest_Device_ScreenOrientation = 2
)

var BidRequest_Device_ScreenOrientation_name = map[int32]string{
	0: "UNKNOWN_ORIENTATION",
	1: "PORTRAIT",
	2: "LANDSCAPE",
}
var BidRequest_Device_ScreenOrientation_value = map[string]int32{
	"UNKNOWN_ORIENTATION": 0,
	"PORTRAIT":            1,
	"LANDSCAPE":           2,
}

func (x BidRequest_Device_ScreenOrientation) Enum() *BidRequest_Device_ScreenOrientation {
	p := new(BidRequest_Device_ScreenOrientation)
	*p = x
	return p
}
func (x BidRequest_Device_ScreenOrientation) String() string {
	return proto.EnumName(BidRequest_Device_ScreenOrientation_name, int32(x))
}
func (x *BidRequest_Device_ScreenOrientation) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_Device_ScreenOrientation_value, data, "BidRequest_Device_ScreenOrientation")
	if err != nil {
		return err
	}
	*x = BidRequest_Device_ScreenOrientation(value)
	return nil
}
func (BidRequest_Device_ScreenOrientation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 5, 1}
}

type BidRequest_Mobile_MobileDeviceType int32

const (
	BidRequest_Mobile_UNKNOWN       BidRequest_Mobile_MobileDeviceType = 0
	BidRequest_Mobile_HIGHEND_PHONE BidRequest_Mobile_MobileDeviceType = 1
	BidRequest_Mobile_TABLET        BidRequest_Mobile_MobileDeviceType = 2
)

var BidRequest_Mobile_MobileDeviceType_name = map[int32]string{
	0: "UNKNOWN",
	1: "HIGHEND_PHONE",
	2: "TABLET",
}
var BidRequest_Mobile_MobileDeviceType_value = map[string]int32{
	"UNKNOWN":       0,
	"HIGHEND_PHONE": 1,
	"TABLET":        2,
}

func (x BidRequest_Mobile_MobileDeviceType) Enum() *BidRequest_Mobile_MobileDeviceType {
	p := new(BidRequest_Mobile_MobileDeviceType)
	*p = x
	return p
}
func (x BidRequest_Mobile_MobileDeviceType) String() string {
	return proto.EnumName(BidRequest_Mobile_MobileDeviceType_name, int32(x))
}
func (x *BidRequest_Mobile_MobileDeviceType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_Mobile_MobileDeviceType_value, data, "BidRequest_Mobile_MobileDeviceType")
	if err != nil {
		return err
	}
	*x = BidRequest_Mobile_MobileDeviceType(value)
	return nil
}
func (BidRequest_Mobile_MobileDeviceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 7, 0}
}

type BidRequest_Mobile_ScreenOrientation int32

const (
	BidRequest_Mobile_SCREEN_ORIENTATION_UNKNOWN   BidRequest_Mobile_ScreenOrientation = 0
	BidRequest_Mobile_SCREEN_ORIENTATION_PORTRAIT  BidRequest_Mobile_ScreenOrientation = 1
	BidRequest_Mobile_SCREEN_ORIENTATION_LANDSCAPE BidRequest_Mobile_ScreenOrientation = 2
)

var BidRequest_Mobile_ScreenOrientation_name = map[int32]string{
	0: "SCREEN_ORIENTATION_UNKNOWN",
	1: "SCREEN_ORIENTATION_PORTRAIT",
	2: "SCREEN_ORIENTATION_LANDSCAPE",
}
var BidRequest_Mobile_ScreenOrientation_value = map[string]int32{
	"SCREEN_ORIENTATION_UNKNOWN":   0,
	"SCREEN_ORIENTATION_PORTRAIT":  1,
	"SCREEN_ORIENTATION_LANDSCAPE": 2,
}

func (x BidRequest_Mobile_ScreenOrientation) Enum() *BidRequest_Mobile_ScreenOrientation {
	p := new(BidRequest_Mobile_ScreenOrientation)
	*p = x
	return p
}
func (x BidRequest_Mobile_ScreenOrientation) String() string {
	return proto.EnumName(BidRequest_Mobile_ScreenOrientation_name, int32(x))
}
func (x *BidRequest_Mobile_ScreenOrientation) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_Mobile_ScreenOrientation_value, data, "BidRequest_Mobile_ScreenOrientation")
	if err != nil {
		return err
	}
	*x = BidRequest_Mobile_ScreenOrientation(value)
	return nil
}
func (BidRequest_Mobile_ScreenOrientation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 7, 1}
}

// Describes where the video ad will play.
type BidRequest_Video_Placement int32

const (
	BidRequest_Video_UNKNOWN_PLACEMENT BidRequest_Video_Placement = 0
	// Instream means the ad plays before, during, or after other video
	// content. This is similar to a traditional TV commercial. The video
	// content the user is watching does not play while the ad is playing.
	BidRequest_Video_INSTREAM BidRequest_Video_Placement = 1
	// Interstitial means the video ad plays in front of non-video content,
	// (e.g. a news article or video game). The ad covers all or nearly all of
	// the space on the screen occupied by the content and the user is not
	// able to proceed to the content until the ad has finished or been
	// skipped.
	BidRequest_Video_INTERSTITIAL BidRequest_Video_Placement = 2
)

var BidRequest_Video_Placement_name = map[int32]string{
	0: "UNKNOWN_PLACEMENT",
	1: "INSTREAM",
	2: "INTERSTITIAL",
}
var BidRequest_Video_Placement_value = map[string]int32{
	"UNKNOWN_PLACEMENT": 0,
	"INSTREAM":          1,
	"INTERSTITIAL":      2,
}

func (x BidRequest_Video_Placement) Enum() *BidRequest_Video_Placement {
	p := new(BidRequest_Video_Placement)
	*p = x
	return p
}
func (x BidRequest_Video_Placement) String() string {
	return proto.EnumName(BidRequest_Video_Placement_name, int32(x))
}
func (x *BidRequest_Video_Placement) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_Video_Placement_value, data, "BidRequest_Video_Placement")
	if err != nil {
		return err
	}
	*x = BidRequest_Video_Placement(value)
	return nil
}
func (BidRequest_Video_Placement) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 8, 0}
}

// Describes how the video ad will be played. The playback method is
// determined to be auto-play or click-to-play based on the best measurement
// available. This includes things like how recently the user interacted
// with a web page. For auto-play, ads can start playing with the sound on
// or off. Some ads (e.g. in-feed ads) are muted until the user interacts
// with the ad. Alternatively, if an ad would normally play with the sound
// on but the device is muted then the value will be set to sound off. For
// devices where it is not possible to determine if the device is muted
// (e.g. desktop), we assume that sound is on.
type BidRequest_Video_VideoPlaybackMethod int32

const (
	BidRequest_Video_METHOD_UNKNOWN      BidRequest_Video_VideoPlaybackMethod = 0
	BidRequest_Video_AUTO_PLAY_SOUND_ON  BidRequest_Video_VideoPlaybackMethod = 1
	BidRequest_Video_AUTO_PLAY_SOUND_OFF BidRequest_Video_VideoPlaybackMethod = 2
	BidRequest_Video_CLICK_TO_PLAY       BidRequest_Video_VideoPlaybackMethod = 3
)

var BidRequest_Video_VideoPlaybackMethod_name = map[int32]string{
	0: "METHOD_UNKNOWN",
	1: "AUTO_PLAY_SOUND_ON",
	2: "AUTO_PLAY_SOUND_OFF",
	3: "CLICK_TO_PLAY",
}
var BidRequest_Video_VideoPlaybackMethod_value = map[string]int32{
	"METHOD_UNKNOWN":      0,
	"AUTO_PLAY_SOUND_ON":  1,
	"AUTO_PLAY_SOUND_OFF": 2,
	"CLICK_TO_PLAY":       3,
}

func (x BidRequest_Video_VideoPlaybackMethod) Enum() *BidRequest_Video_VideoPlaybackMethod {
	p := new(BidRequest_Video_VideoPlaybackMethod)
	*p = x
	return p
}
func (x BidRequest_Video_VideoPlaybackMethod) String() string {
	return proto.EnumName(BidRequest_Video_VideoPlaybackMethod_name, int32(x))
}
func (x *BidRequest_Video_VideoPlaybackMethod) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_Video_VideoPlaybackMethod_value, data, "BidRequest_Video_VideoPlaybackMethod")
	if err != nil {
		return err
	}
	*x = BidRequest_Video_VideoPlaybackMethod(value)
	return nil
}
func (BidRequest_Video_VideoPlaybackMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 8, 1}
}

// Does the publisher allow/require/block skippable video ads?
type BidRequest_Video_SkippableBidRequestType int32

const (
	BidRequest_Video_ALLOW_SKIPPABLE   BidRequest_Video_SkippableBidRequestType = 0
	BidRequest_Video_REQUIRE_SKIPPABLE BidRequest_Video_SkippableBidRequestType = 1
	BidRequest_Video_BLOCK_SKIPPABLE   BidRequest_Video_SkippableBidRequestType = 2
)

var BidRequest_Video_SkippableBidRequestType_name = map[int32]string{
	0: "ALLOW_SKIPPABLE",
	1: "REQUIRE_SKIPPABLE",
	2: "BLOCK_SKIPPABLE",
}
var BidRequest_Video_SkippableBidRequestType_value = map[string]int32{
	"ALLOW_SKIPPABLE":   0,
	"REQUIRE_SKIPPABLE": 1,
	"BLOCK_SKIPPABLE":   2,
}

func (x BidRequest_Video_SkippableBidRequestType) Enum() *BidRequest_Video_SkippableBidRequestType {
	p := new(BidRequest_Video_SkippableBidRequestType)
	*p = x
	return p
}
func (x BidRequest_Video_SkippableBidRequestType) String() string {
	return proto.EnumName(BidRequest_Video_SkippableBidRequestType_name, int32(x))
}
func (x *BidRequest_Video_SkippableBidRequestType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_Video_SkippableBidRequestType_value, data, "BidRequest_Video_SkippableBidRequestType")
	if err != nil {
		return err
	}
	*x = BidRequest_Video_SkippableBidRequestType(value)
	return nil
}
func (BidRequest_Video_SkippableBidRequestType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 8, 2}
}

// The video file formats that are allowed for this request. The response
// should support at least one of them.
type BidRequest_Video_VideoFormat int32

const (
	BidRequest_Video_VIDEO_FLV BidRequest_Video_VideoFormat = 0
	BidRequest_Video_VIDEO_MP4 BidRequest_Video_VideoFormat = 1
	BidRequest_Video_YT_HOSTED BidRequest_Video_VideoFormat = 2
	// on youtube.com.
	BidRequest_Video_VPAID_FLASH BidRequest_Video_VideoFormat = 3
	BidRequest_Video_VPAID_JS    BidRequest_Video_VideoFormat = 4
)

var BidRequest_Video_VideoFormat_name = map[int32]string{
	0: "VIDEO_FLV",
	1: "VIDEO_MP4",
	2: "YT_HOSTED",
	3: "VPAID_FLASH",
	4: "VPAID_JS",
}
var BidRequest_Video_VideoFormat_value = map[string]int32{
	"VIDEO_FLV":   0,
	"VIDEO_MP4":   1,
	"YT_HOSTED":   2,
	"VPAID_FLASH": 3,
	"VPAID_JS":    4,
}

func (x BidRequest_Video_VideoFormat) Enum() *BidRequest_Video_VideoFormat {
	p := new(BidRequest_Video_VideoFormat)
	*p = x
	return p
}
func (x BidRequest_Video_VideoFormat) String() string {
	return proto.EnumName(BidRequest_Video_VideoFormat_name, int32(x))
}
func (x *BidRequest_Video_VideoFormat) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_Video_VideoFormat_value, data, "BidRequest_Video_VideoFormat")
	if err != nil {
		return err
	}
	*x = BidRequest_Video_VideoFormat(value)
	return nil
}
func (BidRequest_Video_VideoFormat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 8, 3}
}

// End cap support. When enabled, the companion ad can be picked to be
// rendered as an end cap (info card) in the video slot after the video
// ad finishes playing. If multiple companion ads are returned, IMA SDK
// chooses one which best matches the device screen size. End cap is
// supported only on mobile video interstitial inventory. As of August 2015,
// END_CAP_FORBIDDEN and END_CAP_REQUIRED are not supported.
type BidRequest_Video_EndCapSupport int32

const (
	BidRequest_Video_END_CAP_NOT_ENABLED BidRequest_Video_EndCapSupport = 0
	BidRequest_Video_END_CAP_OPTIONAL    BidRequest_Video_EndCapSupport = 1
	// eligible companion banner, but companion
	// banner is not required.
	BidRequest_Video_END_CAP_FORBIDDEN BidRequest_Video_EndCapSupport = 2
	BidRequest_Video_END_CAP_REQUIRED  BidRequest_Video_EndCapSupport = 3
)

var BidRequest_Video_EndCapSupport_name = map[int32]string{
	0: "END_CAP_NOT_ENABLED",
	1: "END_CAP_OPTIONAL",
	2: "END_CAP_FORBIDDEN",
	3: "END_CAP_REQUIRED",
}
var BidRequest_Video_EndCapSupport_value = map[string]int32{
	"END_CAP_NOT_ENABLED": 0,
	"END_CAP_OPTIONAL":    1,
	"END_CAP_FORBIDDEN":   2,
	"END_CAP_REQUIRED":    3,
}

func (x BidRequest_Video_EndCapSupport) Enum() *BidRequest_Video_EndCapSupport {
	p := new(BidRequest_Video_EndCapSupport)
	*p = x
	return p
}
func (x BidRequest_Video_EndCapSupport) String() string {
	return proto.EnumName(BidRequest_Video_EndCapSupport_name, int32(x))
}
func (x *BidRequest_Video_EndCapSupport) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_Video_EndCapSupport_value, data, "BidRequest_Video_EndCapSupport")
	if err != nil {
		return err
	}
	*x = BidRequest_Video_EndCapSupport(value)
	return nil
}
func (BidRequest_Video_EndCapSupport) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 8, 4}
}

// The type of inventory from which request is sent.
// Deprecated but will continue to be filled in until January 2017.
// Use the placement field to determine if inventory is interstitial or
// instream.  Use Device.device_type to determine if the request comes from
// a mobile device and Mobile.is_app to determine if the request comes from
// an app.
// WEB_VIDEO is INSTREAM placements from web browsers.
// GAMES consists of INTERSTITIAL placements from both apps and web
// browsers.
// MOBILE_INTERSTITIAL is INTERSTITIAL placements from apps only.
// This inventory also allows display ads. You can tell if an adslot allows
// display ads if adslot->excluded_attributes does not contain 21
// (CreativeType: Html)
// MOBILE_APP_VIDEO is INSTREAM placement from apps only.
type BidRequest_Video_InventoryType int32

const (
	BidRequest_Video_WEB_VIDEO           BidRequest_Video_InventoryType = 0
	BidRequest_Video_GAMES               BidRequest_Video_InventoryType = 1
	BidRequest_Video_MOBILE_INTERSTITIAL BidRequest_Video_InventoryType = 2
	BidRequest_Video_MOBILE_APP_VIDEO    BidRequest_Video_InventoryType = 3
)

var BidRequest_Video_InventoryType_name = map[int32]string{
	0: "WEB_VIDEO",
	1: "GAMES",
	2: "MOBILE_INTERSTITIAL",
	3: "MOBILE_APP_VIDEO",
}
var BidRequest_Video_InventoryType_value = map[string]int32{
	"WEB_VIDEO":           0,
	"GAMES":               1,
	"MOBILE_INTERSTITIAL": 2,
	"MOBILE_APP_VIDEO":    3,
}

func (x BidRequest_Video_InventoryType) Enum() *BidRequest_Video_InventoryType {
	p := new(BidRequest_Video_InventoryType)
	*p = x
	return p
}
func (x BidRequest_Video_InventoryType) String() string {
	return proto.EnumName(BidRequest_Video_InventoryType_name, int32(x))
}
func (x *BidRequest_Video_InventoryType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_Video_InventoryType_value, data, "BidRequest_Video_InventoryType")
	if err != nil {
		return err
	}
	*x = BidRequest_Video_InventoryType(value)
	return nil
}
func (BidRequest_Video_InventoryType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 8, 5}
}

// These are the formats of the creatives allowed in this companion ad
// slot.
type BidRequest_Video_CompanionSlot_CreativeFormat int32

const (
	BidRequest_Video_CompanionSlot_IMAGE_CREATIVE BidRequest_Video_CompanionSlot_CreativeFormat = 0
	BidRequest_Video_CompanionSlot_FLASH_CREATIVE BidRequest_Video_CompanionSlot_CreativeFormat = 1
	BidRequest_Video_CompanionSlot_HTML_CREATIVE  BidRequest_Video_CompanionSlot_CreativeFormat = 2
)

var BidRequest_Video_CompanionSlot_CreativeFormat_name = map[int32]string{
	0: "IMAGE_CREATIVE",
	1: "FLASH_CREATIVE",
	2: "HTML_CREATIVE",
}
var BidRequest_Video_CompanionSlot_CreativeFormat_value = map[string]int32{
	"IMAGE_CREATIVE": 0,
	"FLASH_CREATIVE": 1,
	"HTML_CREATIVE":  2,
}

func (x BidRequest_Video_CompanionSlot_CreativeFormat) Enum() *BidRequest_Video_CompanionSlot_CreativeFormat {
	p := new(BidRequest_Video_CompanionSlot_CreativeFormat)
	*p = x
	return p
}
func (x BidRequest_Video_CompanionSlot_CreativeFormat) String() string {
	return proto.EnumName(BidRequest_Video_CompanionSlot_CreativeFormat_name, int32(x))
}
func (x *BidRequest_Video_CompanionSlot_CreativeFormat) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_Video_CompanionSlot_CreativeFormat_value, data, "BidRequest_Video_CompanionSlot_CreativeFormat")
	if err != nil {
		return err
	}
	*x = BidRequest_Video_CompanionSlot_CreativeFormat(value)
	return nil
}
func (BidRequest_Video_CompanionSlot_CreativeFormat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 8, 0, 0}
}

// Visibility information for the slot.
type BidRequest_AdSlot_SlotVisibility int32

const (
	BidRequest_AdSlot_NO_DETECTION   BidRequest_AdSlot_SlotVisibility = 0
	BidRequest_AdSlot_ABOVE_THE_FOLD BidRequest_AdSlot_SlotVisibility = 1
	BidRequest_AdSlot_BELOW_THE_FOLD BidRequest_AdSlot_SlotVisibility = 2
)

var BidRequest_AdSlot_SlotVisibility_name = map[int32]string{
	0: "NO_DETECTION",
	1: "ABOVE_THE_FOLD",
	2: "BELOW_THE_FOLD",
}
var BidRequest_AdSlot_SlotVisibility_value = map[string]int32{
	"NO_DETECTION":   0,
	"ABOVE_THE_FOLD": 1,
	"BELOW_THE_FOLD": 2,
}

func (x BidRequest_AdSlot_SlotVisibility) Enum() *BidRequest_AdSlot_SlotVisibility {
	p := new(BidRequest_AdSlot_SlotVisibility)
	*p = x
	return p
}
func (x BidRequest_AdSlot_SlotVisibility) String() string {
	return proto.EnumName(BidRequest_AdSlot_SlotVisibility_name, int32(x))
}
func (x *BidRequest_AdSlot_SlotVisibility) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_AdSlot_SlotVisibility_value, data, "BidRequest_AdSlot_SlotVisibility")
	if err != nil {
		return err
	}
	*x = BidRequest_AdSlot_SlotVisibility(value)
	return nil
}
func (BidRequest_AdSlot_SlotVisibility) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 9, 0}
}

// iFraming state of the ad slot on the webpage where it is present.
type BidRequest_AdSlot_IFramingState int32

const (
	BidRequest_AdSlot_UNKNOWN_IFRAME_STATE BidRequest_AdSlot_IFramingState = 0
	BidRequest_AdSlot_NO_IFRAME            BidRequest_AdSlot_IFramingState = 1
	BidRequest_AdSlot_SAME_DOMAIN_IFRAME   BidRequest_AdSlot_IFramingState = 2
	BidRequest_AdSlot_CROSS_DOMAIN_IFRAME  BidRequest_AdSlot_IFramingState = 3
)

var BidRequest_AdSlot_IFramingState_name = map[int32]string{
	0: "UNKNOWN_IFRAME_STATE",
	1: "NO_IFRAME",
	2: "SAME_DOMAIN_IFRAME",
	3: "CROSS_DOMAIN_IFRAME",
}
var BidRequest_AdSlot_IFramingState_value = map[string]int32{
	"UNKNOWN_IFRAME_STATE": 0,
	"NO_IFRAME":            1,
	"SAME_DOMAIN_IFRAME":   2,
	"CROSS_DOMAIN_IFRAME":  3,
}

func (x BidRequest_AdSlot_IFramingState) Enum() *BidRequest_AdSlot_IFramingState {
	p := new(BidRequest_AdSlot_IFramingState)
	*p = x
	return p
}
func (x BidRequest_AdSlot_IFramingState) String() string {
	return proto.EnumName(BidRequest_AdSlot_IFramingState_name, int32(x))
}
func (x *BidRequest_AdSlot_IFramingState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_AdSlot_IFramingState_value, data, "BidRequest_AdSlot_IFramingState")
	if err != nil {
		return err
	}
	*x = BidRequest_AdSlot_IFramingState(value)
	return nil
}
func (BidRequest_AdSlot_IFramingState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 9, 1}
}

// iFrame depth of the ad slot on the webpage where it is present.
// Currently only set for video ad requests.
type BidRequest_AdSlot_IFramingDepth int32

const (
	BidRequest_AdSlot_UNKNOWN_IFRAME_DEPTH BidRequest_AdSlot_IFramingDepth = 0
	BidRequest_AdSlot_NOT_IN_IFRAME        BidRequest_AdSlot_IFramingDepth = 1
	BidRequest_AdSlot_ONE_IFRAME           BidRequest_AdSlot_IFramingDepth = 2
	BidRequest_AdSlot_MULTIPLE_IFRAME      BidRequest_AdSlot_IFramingDepth = 3
)

var BidRequest_AdSlot_IFramingDepth_name = map[int32]string{
	0: "UNKNOWN_IFRAME_DEPTH",
	1: "NOT_IN_IFRAME",
	2: "ONE_IFRAME",
	3: "MULTIPLE_IFRAME",
}
var BidRequest_AdSlot_IFramingDepth_value = map[string]int32{
	"UNKNOWN_IFRAME_DEPTH": 0,
	"NOT_IN_IFRAME":        1,
	"ONE_IFRAME":           2,
	"MULTIPLE_IFRAME":      3,
}

func (x BidRequest_AdSlot_IFramingDepth) Enum() *BidRequest_AdSlot_IFramingDepth {
	p := new(BidRequest_AdSlot_IFramingDepth)
	*p = x
	return p
}
func (x BidRequest_AdSlot_IFramingDepth) String() string {
	return proto.EnumName(BidRequest_AdSlot_IFramingDepth_name, int32(x))
}
func (x *BidRequest_AdSlot_IFramingDepth) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_AdSlot_IFramingDepth_value, data, "BidRequest_AdSlot_IFramingDepth")
	if err != nil {
		return err
	}
	*x = BidRequest_AdSlot_IFramingDepth(value)
	return nil
}
func (BidRequest_AdSlot_IFramingDepth) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 9, 2}
}

// Whether the ad request comes directly from the publisher, or whether it
// is a "passback" impression that has already been offered to and rejected
// by another ad network or ad exchange.
type BidRequest_AdSlot_MediationStatus int32

const (
	BidRequest_AdSlot_UNKNOWN        BidRequest_AdSlot_MediationStatus = 0
	BidRequest_AdSlot_DIRECT_REQUEST BidRequest_AdSlot_MediationStatus = 1
	BidRequest_AdSlot_MEDIATED       BidRequest_AdSlot_MediationStatus = 2
)

var BidRequest_AdSlot_MediationStatus_name = map[int32]string{
	0: "UNKNOWN",
	1: "DIRECT_REQUEST",
	2: "MEDIATED",
}
var BidRequest_AdSlot_MediationStatus_value = map[string]int32{
	"UNKNOWN":        0,
	"DIRECT_REQUEST": 1,
	"MEDIATED":       2,
}

func (x BidRequest_AdSlot_MediationStatus) Enum() *BidRequest_AdSlot_MediationStatus {
	p := new(BidRequest_AdSlot_MediationStatus)
	*p = x
	return p
}
func (x BidRequest_AdSlot_MediationStatus) String() string {
	return proto.EnumName(BidRequest_AdSlot_MediationStatus_name, int32(x))
}
func (x *BidRequest_AdSlot_MediationStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_AdSlot_MediationStatus_value, data, "BidRequest_AdSlot_MediationStatus")
	if err != nil {
		return err
	}
	*x = BidRequest_AdSlot_MediationStatus(value)
	return nil
}
func (BidRequest_AdSlot_MediationStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 9, 3}
}

// Whether this request originated from a sticky ad slot that scrolls along
// with the content on the page.
type BidRequest_AdSlot_Stickiness int32

const (
	BidRequest_AdSlot_UNKNOWN_STICKINESS BidRequest_AdSlot_Stickiness = 0
	BidRequest_AdSlot_IS_STICKY          BidRequest_AdSlot_Stickiness = 1
)

var BidRequest_AdSlot_Stickiness_name = map[int32]string{
	0: "UNKNOWN_STICKINESS",
	1: "IS_STICKY",
}
var BidRequest_AdSlot_Stickiness_value = map[string]int32{
	"UNKNOWN_STICKINESS": 0,
	"IS_STICKY":          1,
}

func (x BidRequest_AdSlot_Stickiness) Enum() *BidRequest_AdSlot_Stickiness {
	p := new(BidRequest_AdSlot_Stickiness)
	*p = x
	return p
}
func (x BidRequest_AdSlot_Stickiness) String() string {
	return proto.EnumName(BidRequest_AdSlot_Stickiness_name, int32(x))
}
func (x *BidRequest_AdSlot_Stickiness) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_AdSlot_Stickiness_value, data, "BidRequest_AdSlot_Stickiness")
	if err != nil {
		return err
	}
	*x = BidRequest_AdSlot_Stickiness(value)
	return nil
}
func (BidRequest_AdSlot_Stickiness) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 9, 4}
}

// Defines who controls the environment that made the ad request and will
// render the ad. On platforms where code written by Google will handle
// the ad this field is set to GOOGLE. When this field is PUBLISHER the
// publisher has placed their own code on the device to handle playback of
// the ad. There is no technical difference in how these request are
// handled. You may use this field to differentiate between different
// environments for non-technical reasons. This field is only set for
// requests that allow VAST video ads.
type BidRequest_AdSlot_Renderer int32

const (
	BidRequest_AdSlot_UNKNOWN_RENDERER BidRequest_AdSlot_Renderer = 0
	BidRequest_AdSlot_GOOGLE           BidRequest_AdSlot_Renderer = 1
	BidRequest_AdSlot_PUBLISHER        BidRequest_AdSlot_Renderer = 2
)

var BidRequest_AdSlot_Renderer_name = map[int32]string{
	0: "UNKNOWN_RENDERER",
	1: "GOOGLE",
	2: "PUBLISHER",
}
var BidRequest_AdSlot_Renderer_value = map[string]int32{
	"UNKNOWN_RENDERER": 0,
	"GOOGLE":           1,
	"PUBLISHER":        2,
}

func (x BidRequest_AdSlot_Renderer) Enum() *BidRequest_AdSlot_Renderer {
	p := new(BidRequest_AdSlot_Renderer)
	*p = x
	return p
}
func (x BidRequest_AdSlot_Renderer) String() string {
	return proto.EnumName(BidRequest_AdSlot_Renderer_name, int32(x))
}
func (x *BidRequest_AdSlot_Renderer) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_AdSlot_Renderer_value, data, "BidRequest_AdSlot_Renderer")
	if err != nil {
		return err
	}
	*x = BidRequest_AdSlot_Renderer(value)
	return nil
}
func (BidRequest_AdSlot_Renderer) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 9, 5}
}

// The type of the deal.
type BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType int32

const (
	BidRequest_AdSlot_MatchingAdData_DirectDeal_UNKNOWN_DEAL_TYPE BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType = 0
	BidRequest_AdSlot_MatchingAdData_DirectDeal_PREFERRED_DEAL    BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType = 1
	BidRequest_AdSlot_MatchingAdData_DirectDeal_PRIVATE_AUCTION   BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType = 2
)

var BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType_name = map[int32]string{
	0: "UNKNOWN_DEAL_TYPE",
	1: "PREFERRED_DEAL",
	2: "PRIVATE_AUCTION",
}
var BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType_value = map[string]int32{
	"UNKNOWN_DEAL_TYPE": 0,
	"PREFERRED_DEAL":    1,
	"PRIVATE_AUCTION":   2,
}

func (x BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType) Enum() *BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType {
	p := new(BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType)
	*p = x
	return p
}
func (x BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType) String() string {
	return proto.EnumName(BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType_name, int32(x))
}
func (x *BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType_value, data, "BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType")
	if err != nil {
		return err
	}
	*x = BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType(value)
	return nil
}
func (BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 9, 0, 1, 0}
}

// Defines the bits used in required_fields and recommended_fields. There
// is one bit for each of the fields in BidResponse.Ad.NativeAd
type BidRequest_AdSlot_NativeAdTemplate_Fields int32

const (
	BidRequest_AdSlot_NativeAdTemplate_HEADLINE       BidRequest_AdSlot_NativeAdTemplate_Fields = 1
	BidRequest_AdSlot_NativeAdTemplate_BODY           BidRequest_AdSlot_NativeAdTemplate_Fields = 2
	BidRequest_AdSlot_NativeAdTemplate_CALL_TO_ACTION BidRequest_AdSlot_NativeAdTemplate_Fields = 4
	BidRequest_AdSlot_NativeAdTemplate_ADVERTISER     BidRequest_AdSlot_NativeAdTemplate_Fields = 8
	BidRequest_AdSlot_NativeAdTemplate_IMAGE          BidRequest_AdSlot_NativeAdTemplate_Fields = 16
	BidRequest_AdSlot_NativeAdTemplate_LOGO           BidRequest_AdSlot_NativeAdTemplate_Fields = 32
	BidRequest_AdSlot_NativeAdTemplate_APP_ICON       BidRequest_AdSlot_NativeAdTemplate_Fields = 64
	BidRequest_AdSlot_NativeAdTemplate_STAR_RATING    BidRequest_AdSlot_NativeAdTemplate_Fields = 128
	BidRequest_AdSlot_NativeAdTemplate_PRICE          BidRequest_AdSlot_NativeAdTemplate_Fields = 256
	BidRequest_AdSlot_NativeAdTemplate_STORE          BidRequest_AdSlot_NativeAdTemplate_Fields = 512
)

var BidRequest_AdSlot_NativeAdTemplate_Fields_name = map[int32]string{
	1:   "HEADLINE",
	2:   "BODY",
	4:   "CALL_TO_ACTION",
	8:   "ADVERTISER",
	16:  "IMAGE",
	32:  "LOGO",
	64:  "APP_ICON",
	128: "STAR_RATING",
	256: "PRICE",
	512: "STORE",
}
var BidRequest_AdSlot_NativeAdTemplate_Fields_value = map[string]int32{
	"HEADLINE":       1,
	"BODY":           2,
	"CALL_TO_ACTION": 4,
	"ADVERTISER":     8,
	"IMAGE":          16,
	"LOGO":           32,
	"APP_ICON":       64,
	"STAR_RATING":    128,
	"PRICE":          256,
	"STORE":          512,
}

func (x BidRequest_AdSlot_NativeAdTemplate_Fields) Enum() *BidRequest_AdSlot_NativeAdTemplate_Fields {
	p := new(BidRequest_AdSlot_NativeAdTemplate_Fields)
	*p = x
	return p
}
func (x BidRequest_AdSlot_NativeAdTemplate_Fields) String() string {
	return proto.EnumName(BidRequest_AdSlot_NativeAdTemplate_Fields_name, int32(x))
}
func (x *BidRequest_AdSlot_NativeAdTemplate_Fields) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_AdSlot_NativeAdTemplate_Fields_value, data, "BidRequest_AdSlot_NativeAdTemplate_Fields")
	if err != nil {
		return err
	}
	*x = BidRequest_AdSlot_NativeAdTemplate_Fields(value)
	return nil
}
func (BidRequest_AdSlot_NativeAdTemplate_Fields) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 9, 1, 0}
}

type BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType int32

const (
	BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_UNKNOWN_AUTO_REFRESH_TYPE BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType = 0
	BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_USER_ACTION               BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType = 1
	// as scrolling.
	BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_EVENT BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType = 2
	// when the football game score changes on the page.
	BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_TIME BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType = 3
)

var BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType_name = map[int32]string{
	0: "UNKNOWN_AUTO_REFRESH_TYPE",
	1: "USER_ACTION",
	2: "EVENT",
	3: "TIME",
}
var BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType_value = map[string]int32{
	"UNKNOWN_AUTO_REFRESH_TYPE": 0,
	"USER_ACTION":               1,
	"EVENT":                     2,
	"TIME":                      3,
}

func (x BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType) Enum() *BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType {
	p := new(BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType)
	*p = x
	return p
}
func (x BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType) String() string {
	return proto.EnumName(BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType_name, int32(x))
}
func (x *BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType_value, data, "BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType")
	if err != nil {
		return err
	}
	*x = BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType(value)
	return nil
}
func (BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 9, 2, 0, 0}
}

// This is the message that Google uses to request bids. A single BidRequest
// includes all applicable ad slots from a single impression.
//
type BidRequest struct {
	// Unique request id generated by Google. This is 16 bytes long.
	Id []byte `protobuf:"bytes,2,req,name=id" json:"id,omitempty"`
	// The first 3 bytes of the IP address in network byte order for IPv4, or the
	// first 6 bytes for IPv6. Note that the number and position of the bytes
	// included from IPv6 addresses may change later.
	Ip []byte `protobuf:"bytes,4,opt,name=ip" json:"ip,omitempty"`
	// When set, the user's cookie/id data allows only restricted usage and is not
	// available in the usual fields. Instead the data may be accessed through
	// the constrained usage fields and stricter usage policies apply. There may
	// be multiple restrictions applicable at the same time. You must only use
	// the data for use cases allowed by all restrictions.
	// You will receive the user_data_treatment value in BidRequests if there are
	// any applicable restrictions. However, you must be whitelisted in order to
	// receive the constrained usage user data fields. See
	// https://developers.google.com/ad-exchange/rtb/user_data_treatments for
	// more information.
	// The impacted fields are:
	//  * google_user_id: use constrained_usage_google_user_id
	//  * hosted_match_data: use constrained_usage_hosted_match_data
	//  * mobile.encrypted_advertising_id: use
	//    mobile.constrained_usage_encrypted_advertising_id
	//  * mobile.encrypted_hashed_idfa: use
	//    mobile.constrained_usage_encrypted_hashed_idfa
	UserDataTreatment []BidRequest_UserDataTreatment `protobuf:"varint,49,rep,name=user_data_treatment,enum=BidRequest_UserDataTreatment" json:"user_data_treatment,omitempty"`
	// The Google ID for the user as described in the documentation for the cookie
	// matching service. This field is the unpadded web-safe base64 encoded
	// version of a binary cookie id. See the "Base 64 Encoding with URL and
	// Filename Safe Alphabet" section in RFC 3548 for encoding details. This
	// field is the same as the Google ID returned by the cookie matching service.
	// Not set if there is one or more user_data_treatment value, see
	// constrained_usage_google_user_id instead.
	GoogleUserId *string `protobuf:"bytes,21,opt,name=google_user_id" json:"google_user_id,omitempty"`
	// Only set if there is one or more user_data_treatment value. If
	// constrained_usage_google_user_id is set, then google_user_id is not set.
	// You must be whitelisted for all user_data_treatments in this request in
	// order to receive this field.
	ConstrainedUsageGoogleUserId *string `protobuf:"bytes,47,opt,name=constrained_usage_google_user_id" json:"constrained_usage_google_user_id,omitempty"`
	// The version number of the google_user_id. We may sometimes change the
	// mapping from cookie to google_user_id. In this case the version will be
	// incremented.
	CookieVersion *uint32 `protobuf:"varint,20,opt,name=cookie_version" json:"cookie_version,omitempty"`
	// The time in seconds since the google_user_id was created.
	// This number may be quantized.
	CookieAgeSeconds *int32 `protobuf:"varint,31,opt,name=cookie_age_seconds" json:"cookie_age_seconds,omitempty"`
	// Match data stored for this google_user_id through the cookie matching
	// service. If a match exists, then this field holds the decoded data that
	// was passed in the google_hm parameter.
	// Not set if there is one or more user_data_treatment value, see
	// constrained_usage_hosted_match_data instead.
	HostedMatchData []byte `protobuf:"bytes,37,opt,name=hosted_match_data" json:"hosted_match_data,omitempty"`
	// Only set if there is one or more user_data_treatment value. If
	// constrained_usage_hosted_match_data is set, then hosted_match_data is not
	// set. You must be whitelisted for all user_data_treatments in this request
	// in order to receive this field.
	ConstrainedUsageHostedMatchData []byte `protobuf:"bytes,48,opt,name=constrained_usage_hosted_match_data" json:"constrained_usage_hosted_match_data,omitempty"`
	// A string that identifies the browser and type of device that sent the
	// request.
	UserAgent *string `protobuf:"bytes,6,opt,name=user_agent" json:"user_agent,omitempty"`
	// Geo information. These use a subset of the codes used in the AdWords API.
	// See the geo-table.csv table in the technical documentation for a list of
	// ids. The geo_criteria_id field replaces the deprecated country, region,
	// city, and metro fields.
	GeoCriteriaId *int32 `protobuf:"varint,39,opt,name=geo_criteria_id" json:"geo_criteria_id,omitempty"`
	// Detected postal code of the appropriate type for the country (e.g. zip code
	// if the country is "US"). The postal_code_prefix field is set when accuracy
	// is too low to imply a full code, otherwise the postal_code field is set.
	PostalCode       *string `protobuf:"bytes,33,opt,name=postal_code" json:"postal_code,omitempty"`
	PostalCodePrefix *string `protobuf:"bytes,34,opt,name=postal_code_prefix" json:"postal_code_prefix,omitempty"`
	// Hyperlocal targeting signal when available, encrypted as described at
	// https://developers.google.com/ad-exchange/rtb/response-guide/decrypt-hyperlocal
	EncryptedHyperlocalSet []byte `protobuf:"bytes,40,opt,name=encrypted_hyperlocal_set" json:"encrypted_hyperlocal_set,omitempty"`
	// Unencrypted version of encrypted_hyperlocal_set. This field is only set
	// when using an SSL connection.
	HyperlocalSet *BidRequest_HyperlocalSet `protobuf:"bytes,53,opt,name=hyperlocal_set" json:"hyperlocal_set,omitempty"`
	// The offset of the user's time from GMT in minutes. For example, GMT+10 is
	// timezone_offset = 600.
	TimezoneOffset *int32 `protobuf:"varint,25,opt,name=timezone_offset" json:"timezone_offset,omitempty"`
	// List of detected user verticals. Currently unused.
	UserVertical    []int32                     `protobuf:"varint,30,rep,packed,name=user_vertical" json:"user_vertical,omitempty"`
	UserDemographic *BidRequest_UserDemographic `protobuf:"bytes,50,opt,name=user_demographic" json:"user_demographic,omitempty"`
	UserList        []*BidRequest_UserList      `protobuf:"bytes,32,rep,name=user_list" json:"user_list,omitempty"`
	// The seller network id. See seller-network-ids.txt file in the technical
	// documentation for a list of ids. This is only set if the site is not
	// anonymous and the publisher allows site targeting.
	SellerNetworkId *int32 `protobuf:"varint,41,opt,name=seller_network_id" json:"seller_network_id,omitempty"`
	// Id for the partner that provides this inventory. This is only set when
	// seller_network_id is also set and further partner information beyond the
	// seller_network_id is also available. The value of the partner_id is not
	// meaningful beyond providing a stable identifier.
	PartnerId *uint64 `protobuf:"fixed64,52,opt,name=partner_id" json:"partner_id,omitempty"`
	// The URL of the page with parameters removed. This is only set if the site
	// is not anonymous and the publisher allows site targeting. You can use
	// anonymous_id for targeting if the inventory is anonymous. Otherwise, use
	// detected_vertical's. Only one of url or anonymous_id is ever set in the
	// same request.
	Url *string `protobuf:"bytes,11,opt,name=url" json:"url,omitempty"`
	// An id for the domain of the page. This is set when the inventory is
	// anonymous. Only one of url or anonymous_id is ever set in the same
	// request.
	AnonymousId *string `protobuf:"bytes,19,opt,name=anonymous_id" json:"anonymous_id,omitempty"`
	// Detected user languages, based on the language of the web page, the browser
	// settings, and other signals. The order is arbitrary. The codes are 2 or 5
	// letters and are documented at
	// https://developers.google.com/adwords/api/docs/appendix/languagecodes
	DetectedLanguage []string `protobuf:"bytes,12,rep,name=detected_language" json:"detected_language,omitempty"`
	// Unordered list of detected content verticals. See the
	// publisher-verticals.txt file in the technical documentation for a list of
	// ids.
	DetectedVertical []*BidRequest_Vertical `protobuf:"bytes,13,rep,name=detected_vertical" json:"detected_vertical,omitempty"`
	// List of detected content labels. See content-labels.txt file in the
	// technical documentation for a list of ids.
	DetectedContentLabel []int32                `protobuf:"varint,26,rep,packed,name=detected_content_label" json:"detected_content_label,omitempty"`
	Device               *BidRequest_Device     `protobuf:"bytes,54,opt,name=device" json:"device,omitempty"`
	KeyValue             []*BidRequest_KeyValue `protobuf:"bytes,38,rep,name=key_value" json:"key_value,omitempty"`
	Mobile               *BidRequest_Mobile     `protobuf:"bytes,28,opt,name=mobile" json:"mobile,omitempty"`
	Video                *BidRequest_Video      `protobuf:"bytes,29,opt,name=video" json:"video,omitempty"`
	// The publisher settings list id that applies to this page.
	// See the RTB Publisher Settings guide at
	// https://developers.google.com/ad-exchange/rtb/pub-settings-guide
	// for details.
	PublisherSettingsListId *uint64                           `protobuf:"fixed64,42,opt,name=publisher_settings_list_id" json:"publisher_settings_list_id,omitempty"`
	PublisherType           *BidRequest_PublisherType         `protobuf:"varint,51,opt,name=publisher_type,enum=BidRequest_PublisherType,def=0" json:"publisher_type,omitempty"`
	Adslot                  []*BidRequest_AdSlot              `protobuf:"bytes,14,rep,name=adslot" json:"adslot,omitempty"`
	BidResponseFeedback     []*BidRequest_BidResponseFeedback `protobuf:"bytes,44,rep,name=bid_response_feedback" json:"bid_response_feedback,omitempty"`
	// If true, then this is a test request. Results will not be displayed to
	// users and you will not be billed for a response even if it wins the
	// auction. You should still do regular processing since the request may be
	// used to evaluate latencies or for other testing.
	IsTest *bool `protobuf:"varint,15,opt,name=is_test,def=0" json:"is_test,omitempty"`
	// If true, then this request is intended to measure network latency. Please
	// return an empty BidResponse with only processing_time_ms set as quickly as
	// possible without executing any bidding logic.
	IsPing *bool `protobuf:"varint,17,opt,name=is_ping,def=0" json:"is_ping,omitempty"`
	// If true, then the selective callout model predicted that you will not bid
	// on this request. We send a sampled percentage of such requests so that we
	// can automatically update the model when bidding patterns change.
	IsPredictedToBeIgnored *bool `protobuf:"varint,45,opt,name=is_predicted_to_be_ignored,def=0" json:"is_predicted_to_be_ignored,omitempty"`
	// These are deprecated. Please ignore.
	DEPRECATEDProtocolVersion           *int32                        `protobuf:"varint,1,opt,name=DEPRECATED_protocol_version" json:"DEPRECATED_protocol_version,omitempty"`
	DEPRECATEDClickTrackingUrl          *string                       `protobuf:"bytes,3,opt,name=DEPRECATED_click_tracking_url" json:"DEPRECATED_click_tracking_url,omitempty"`
	DEPRECATEDCookie                    *uint64                       `protobuf:"varint,5,opt,name=DEPRECATED_cookie" json:"DEPRECATED_cookie,omitempty"`
	DEPRECATEDCountry                   *string                       `protobuf:"bytes,7,opt,name=DEPRECATED_country" json:"DEPRECATED_country,omitempty"`
	DEPRECATEDRegion                    *string                       `protobuf:"bytes,8,opt,name=DEPRECATED_region" json:"DEPRECATED_region,omitempty"`
	DEPRECATEDCity                      *string                       `protobuf:"bytes,9,opt,name=DEPRECATED_city" json:"DEPRECATED_city,omitempty"`
	DEPRECATEDMetro                     *int32                        `protobuf:"varint,10,opt,name=DEPRECATED_metro" json:"DEPRECATED_metro,omitempty"`
	DEPRECATEDHashedCookie              []byte                        `protobuf:"bytes,16,opt,name=DEPRECATED_hashed_cookie" json:"DEPRECATED_hashed_cookie,omitempty"`
	DEPRECATEDExcludedClickThroughUrl   []string                      `protobuf:"bytes,18,rep,name=DEPRECATED_excluded_click_through_url" json:"DEPRECATED_excluded_click_through_url,omitempty"`
	DEPRECATEDSellerNetwork             *string                       `protobuf:"bytes,22,opt,name=DEPRECATED_seller_network" json:"DEPRECATED_seller_network,omitempty"`
	DEPRECATEDPublisherSettingsListId   []byte                        `protobuf:"bytes,23,opt,name=DEPRECATED_publisher_settings_list_id" json:"DEPRECATED_publisher_settings_list_id,omitempty"`
	DEPRECATEDMatchingNetwork           []*BidRequest_MatchingNetwork `protobuf:"bytes,27,rep,name=DEPRECATED_matching_network" json:"DEPRECATED_matching_network,omitempty"`
	DEPRECATEDExperimentalDeadline      *bool                         `protobuf:"varint,35,opt,name=DEPRECATED_experimental_deadline,def=0" json:"DEPRECATED_experimental_deadline,omitempty"`
	DEPRECATEDSiteListId                []int32                       `protobuf:"varint,36,rep,name=DEPRECATED_site_list_id" json:"DEPRECATED_site_list_id,omitempty"`
	DEPRECATEDVerticalDictionaryVersion *int32                        `protobuf:"varint,24,opt,name=DEPRECATED_vertical_dictionary_version" json:"DEPRECATED_vertical_dictionary_version,omitempty"`
	XXX_unrecognized                    []byte                        `json:"-"`
}

func (m *BidRequest) Reset()                    { *m = BidRequest{} }
func (m *BidRequest) String() string            { return proto.CompactTextString(m) }
func (*BidRequest) ProtoMessage()               {}
func (*BidRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

const Default_BidRequest_PublisherType BidRequest_PublisherType = BidRequest_UNKNOWN_PUBLISHER_TYPE
const Default_BidRequest_IsTest bool = false
const Default_BidRequest_IsPing bool = false
const Default_BidRequest_IsPredictedToBeIgnored bool = false
const Default_BidRequest_DEPRECATEDExperimentalDeadline bool = false

func (m *BidRequest) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *BidRequest) GetIp() []byte {
	if m != nil {
		return m.Ip
	}
	return nil
}

func (m *BidRequest) GetUserDataTreatment() []BidRequest_UserDataTreatment {
	if m != nil {
		return m.UserDataTreatment
	}
	return nil
}

func (m *BidRequest) GetGoogleUserId() string {
	if m != nil && m.GoogleUserId != nil {
		return *m.GoogleUserId
	}
	return ""
}

func (m *BidRequest) GetConstrainedUsageGoogleUserId() string {
	if m != nil && m.ConstrainedUsageGoogleUserId != nil {
		return *m.ConstrainedUsageGoogleUserId
	}
	return ""
}

func (m *BidRequest) GetCookieVersion() uint32 {
	if m != nil && m.CookieVersion != nil {
		return *m.CookieVersion
	}
	return 0
}

func (m *BidRequest) GetCookieAgeSeconds() int32 {
	if m != nil && m.CookieAgeSeconds != nil {
		return *m.CookieAgeSeconds
	}
	return 0
}

func (m *BidRequest) GetHostedMatchData() []byte {
	if m != nil {
		return m.HostedMatchData
	}
	return nil
}

func (m *BidRequest) GetConstrainedUsageHostedMatchData() []byte {
	if m != nil {
		return m.ConstrainedUsageHostedMatchData
	}
	return nil
}

func (m *BidRequest) GetUserAgent() string {
	if m != nil && m.UserAgent != nil {
		return *m.UserAgent
	}
	return ""
}

func (m *BidRequest) GetGeoCriteriaId() int32 {
	if m != nil && m.GeoCriteriaId != nil {
		return *m.GeoCriteriaId
	}
	return 0
}

func (m *BidRequest) GetPostalCode() string {
	if m != nil && m.PostalCode != nil {
		return *m.PostalCode
	}
	return ""
}

func (m *BidRequest) GetPostalCodePrefix() string {
	if m != nil && m.PostalCodePrefix != nil {
		return *m.PostalCodePrefix
	}
	return ""
}

func (m *BidRequest) GetEncryptedHyperlocalSet() []byte {
	if m != nil {
		return m.EncryptedHyperlocalSet
	}
	return nil
}

func (m *BidRequest) GetHyperlocalSet() *BidRequest_HyperlocalSet {
	if m != nil {
		return m.HyperlocalSet
	}
	return nil
}

func (m *BidRequest) GetTimezoneOffset() int32 {
	if m != nil && m.TimezoneOffset != nil {
		return *m.TimezoneOffset
	}
	return 0
}

func (m *BidRequest) GetUserVertical() []int32 {
	if m != nil {
		return m.UserVertical
	}
	return nil
}

func (m *BidRequest) GetUserDemographic() *BidRequest_UserDemographic {
	if m != nil {
		return m.UserDemographic
	}
	return nil
}

func (m *BidRequest) GetUserList() []*BidRequest_UserList {
	if m != nil {
		return m.UserList
	}
	return nil
}

func (m *BidRequest) GetSellerNetworkId() int32 {
	if m != nil && m.SellerNetworkId != nil {
		return *m.SellerNetworkId
	}
	return 0
}

func (m *BidRequest) GetPartnerId() uint64 {
	if m != nil && m.PartnerId != nil {
		return *m.PartnerId
	}
	return 0
}

func (m *BidRequest) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *BidRequest) GetAnonymousId() string {
	if m != nil && m.AnonymousId != nil {
		return *m.AnonymousId
	}
	return ""
}

func (m *BidRequest) GetDetectedLanguage() []string {
	if m != nil {
		return m.DetectedLanguage
	}
	return nil
}

func (m *BidRequest) GetDetectedVertical() []*BidRequest_Vertical {
	if m != nil {
		return m.DetectedVertical
	}
	return nil
}

func (m *BidRequest) GetDetectedContentLabel() []int32 {
	if m != nil {
		return m.DetectedContentLabel
	}
	return nil
}

func (m *BidRequest) GetDevice() *BidRequest_Device {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *BidRequest) GetKeyValue() []*BidRequest_KeyValue {
	if m != nil {
		return m.KeyValue
	}
	return nil
}

func (m *BidRequest) GetMobile() *BidRequest_Mobile {
	if m != nil {
		return m.Mobile
	}
	return nil
}

func (m *BidRequest) GetVideo() *BidRequest_Video {
	if m != nil {
		return m.Video
	}
	return nil
}

func (m *BidRequest) GetPublisherSettingsListId() uint64 {
	if m != nil && m.PublisherSettingsListId != nil {
		return *m.PublisherSettingsListId
	}
	return 0
}

func (m *BidRequest) GetPublisherType() BidRequest_PublisherType {
	if m != nil && m.PublisherType != nil {
		return *m.PublisherType
	}
	return Default_BidRequest_PublisherType
}

func (m *BidRequest) GetAdslot() []*BidRequest_AdSlot {
	if m != nil {
		return m.Adslot
	}
	return nil
}

func (m *BidRequest) GetBidResponseFeedback() []*BidRequest_BidResponseFeedback {
	if m != nil {
		return m.BidResponseFeedback
	}
	return nil
}

func (m *BidRequest) GetIsTest() bool {
	if m != nil && m.IsTest != nil {
		return *m.IsTest
	}
	return Default_BidRequest_IsTest
}

func (m *BidRequest) GetIsPing() bool {
	if m != nil && m.IsPing != nil {
		return *m.IsPing
	}
	return Default_BidRequest_IsPing
}

func (m *BidRequest) GetIsPredictedToBeIgnored() bool {
	if m != nil && m.IsPredictedToBeIgnored != nil {
		return *m.IsPredictedToBeIgnored
	}
	return Default_BidRequest_IsPredictedToBeIgnored
}

func (m *BidRequest) GetDEPRECATEDProtocolVersion() int32 {
	if m != nil && m.DEPRECATEDProtocolVersion != nil {
		return *m.DEPRECATEDProtocolVersion
	}
	return 0
}

func (m *BidRequest) GetDEPRECATEDClickTrackingUrl() string {
	if m != nil && m.DEPRECATEDClickTrackingUrl != nil {
		return *m.DEPRECATEDClickTrackingUrl
	}
	return ""
}

func (m *BidRequest) GetDEPRECATEDCookie() uint64 {
	if m != nil && m.DEPRECATEDCookie != nil {
		return *m.DEPRECATEDCookie
	}
	return 0
}

func (m *BidRequest) GetDEPRECATEDCountry() string {
	if m != nil && m.DEPRECATEDCountry != nil {
		return *m.DEPRECATEDCountry
	}
	return ""
}

func (m *BidRequest) GetDEPRECATEDRegion() string {
	if m != nil && m.DEPRECATEDRegion != nil {
		return *m.DEPRECATEDRegion
	}
	return ""
}

func (m *BidRequest) GetDEPRECATEDCity() string {
	if m != nil && m.DEPRECATEDCity != nil {
		return *m.DEPRECATEDCity
	}
	return ""
}

func (m *BidRequest) GetDEPRECATEDMetro() int32 {
	if m != nil && m.DEPRECATEDMetro != nil {
		return *m.DEPRECATEDMetro
	}
	return 0
}

func (m *BidRequest) GetDEPRECATEDHashedCookie() []byte {
	if m != nil {
		return m.DEPRECATEDHashedCookie
	}
	return nil
}

func (m *BidRequest) GetDEPRECATEDExcludedClickThroughUrl() []string {
	if m != nil {
		return m.DEPRECATEDExcludedClickThroughUrl
	}
	return nil
}

func (m *BidRequest) GetDEPRECATEDSellerNetwork() string {
	if m != nil && m.DEPRECATEDSellerNetwork != nil {
		return *m.DEPRECATEDSellerNetwork
	}
	return ""
}

func (m *BidRequest) GetDEPRECATEDPublisherSettingsListId() []byte {
	if m != nil {
		return m.DEPRECATEDPublisherSettingsListId
	}
	return nil
}

func (m *BidRequest) GetDEPRECATEDMatchingNetwork() []*BidRequest_MatchingNetwork {
	if m != nil {
		return m.DEPRECATEDMatchingNetwork
	}
	return nil
}

func (m *BidRequest) GetDEPRECATEDExperimentalDeadline() bool {
	if m != nil && m.DEPRECATEDExperimentalDeadline != nil {
		return *m.DEPRECATEDExperimentalDeadline
	}
	return Default_BidRequest_DEPRECATEDExperimentalDeadline
}

func (m *BidRequest) GetDEPRECATEDSiteListId() []int32 {
	if m != nil {
		return m.DEPRECATEDSiteListId
	}
	return nil
}

func (m *BidRequest) GetDEPRECATEDVerticalDictionaryVersion() int32 {
	if m != nil && m.DEPRECATEDVerticalDictionaryVersion != nil {
		return *m.DEPRECATEDVerticalDictionaryVersion
	}
	return 0
}

// A hyperlocal targeting location when available.
//
type BidRequest_Hyperlocal struct {
	// The mobile device can be at any point inside the geofence polygon defined
	// by a list of corners. Currently, the polygon is always a parallelogram
	// with 4 corners.
	Corners          []*BidRequest_Hyperlocal_Point `protobuf:"bytes,1,rep,name=corners" json:"corners,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *BidRequest_Hyperlocal) Reset()                    { *m = BidRequest_Hyperlocal{} }
func (m *BidRequest_Hyperlocal) String() string            { return proto.CompactTextString(m) }
func (*BidRequest_Hyperlocal) ProtoMessage()               {}
func (*BidRequest_Hyperlocal) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *BidRequest_Hyperlocal) GetCorners() []*BidRequest_Hyperlocal_Point {
	if m != nil {
		return m.Corners
	}
	return nil
}

// A location on the Earth's surface.
//
type BidRequest_Hyperlocal_Point struct {
	Latitude         *float32 `protobuf:"fixed32,1,opt,name=latitude" json:"latitude,omitempty"`
	Longitude        *float32 `protobuf:"fixed32,2,opt,name=longitude" json:"longitude,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *BidRequest_Hyperlocal_Point) Reset()         { *m = BidRequest_Hyperlocal_Point{} }
func (m *BidRequest_Hyperlocal_Point) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Hyperlocal_Point) ProtoMessage()    {}
func (*BidRequest_Hyperlocal_Point) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0, 0}
}

func (m *BidRequest_Hyperlocal_Point) GetLatitude() float32 {
	if m != nil && m.Latitude != nil {
		return *m.Latitude
	}
	return 0
}

func (m *BidRequest_Hyperlocal_Point) GetLongitude() float32 {
	if m != nil && m.Longitude != nil {
		return *m.Longitude
	}
	return 0
}

type BidRequest_HyperlocalSet struct {
	// This field currently contains at most one hyperlocal polygon.
	Hyperlocal []*BidRequest_Hyperlocal `protobuf:"bytes,1,rep,name=hyperlocal" json:"hyperlocal,omitempty"`
	// The approximate geometric center of the geofence area. It is calculated
	// exclusively based on the geometric shape of the geofence area and in no
	// way indicates the mobile device's actual location within the geofence
	// area. If multiple hyperlocal polygons are specified above then
	// center_point is the geometric center of all hyperlocal polygons.
	CenterPoint      *BidRequest_Hyperlocal_Point `protobuf:"bytes,2,opt,name=center_point" json:"center_point,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *BidRequest_HyperlocalSet) Reset()                    { *m = BidRequest_HyperlocalSet{} }
func (m *BidRequest_HyperlocalSet) String() string            { return proto.CompactTextString(m) }
func (*BidRequest_HyperlocalSet) ProtoMessage()               {}
func (*BidRequest_HyperlocalSet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

func (m *BidRequest_HyperlocalSet) GetHyperlocal() []*BidRequest_Hyperlocal {
	if m != nil {
		return m.Hyperlocal
	}
	return nil
}

func (m *BidRequest_HyperlocalSet) GetCenterPoint() *BidRequest_Hyperlocal_Point {
	if m != nil {
		return m.CenterPoint
	}
	return nil
}

// Demographic data provided by the publisher.
type BidRequest_UserDemographic struct {
	// Gender
	Gender *BidRequest_UserDemographic_Gender `protobuf:"varint,1,opt,name=gender,enum=BidRequest_UserDemographic_Gender,def=0" json:"gender,omitempty"`
	// Age interval
	AgeLow           *int32 `protobuf:"varint,2,opt,name=age_low,def=0" json:"age_low,omitempty"`
	AgeHigh          *int32 `protobuf:"varint,3,opt,name=age_high,def=999" json:"age_high,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BidRequest_UserDemographic) Reset()                    { *m = BidRequest_UserDemographic{} }
func (m *BidRequest_UserDemographic) String() string            { return proto.CompactTextString(m) }
func (*BidRequest_UserDemographic) ProtoMessage()               {}
func (*BidRequest_UserDemographic) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 2} }

const Default_BidRequest_UserDemographic_Gender BidRequest_UserDemographic_Gender = BidRequest_UserDemographic_UNKNOWN
const Default_BidRequest_UserDemographic_AgeLow int32 = 0
const Default_BidRequest_UserDemographic_AgeHigh int32 = 999

func (m *BidRequest_UserDemographic) GetGender() BidRequest_UserDemographic_Gender {
	if m != nil && m.Gender != nil {
		return *m.Gender
	}
	return Default_BidRequest_UserDemographic_Gender
}

func (m *BidRequest_UserDemographic) GetAgeLow() int32 {
	if m != nil && m.AgeLow != nil {
		return *m.AgeLow
	}
	return Default_BidRequest_UserDemographic_AgeLow
}

func (m *BidRequest_UserDemographic) GetAgeHigh() int32 {
	if m != nil && m.AgeHigh != nil {
		return *m.AgeHigh
	}
	return Default_BidRequest_UserDemographic_AgeHigh
}

// This field is not populated by default. We recommend that bidders instead
// store and look up list ids using either google_user_id or hosted_match_data
// as keys.
//
type BidRequest_UserList struct {
	// The user list id.
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// The time in seconds since the user was added to the list.
	AgeSeconds       *int32 `protobuf:"varint,2,opt,name=age_seconds" json:"age_seconds,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BidRequest_UserList) Reset()                    { *m = BidRequest_UserList{} }
func (m *BidRequest_UserList) String() string            { return proto.CompactTextString(m) }
func (*BidRequest_UserList) ProtoMessage()               {}
func (*BidRequest_UserList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 3} }

func (m *BidRequest_UserList) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *BidRequest_UserList) GetAgeSeconds() int32 {
	if m != nil && m.AgeSeconds != nil {
		return *m.AgeSeconds
	}
	return 0
}

// One or more detected verticals for the page as determined by Google.
//
type BidRequest_Vertical struct {
	// The vertical id. See the publisher-verticals.txt file in the technical
	// documentation for a list of ids.
	Id *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	// Weight for this vertical, in the (0.0, 1.0] range. More relevant
	// verticals have higher weights.
	Weight           *float32 `protobuf:"fixed32,2,req,name=weight" json:"weight,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *BidRequest_Vertical) Reset()                    { *m = BidRequest_Vertical{} }
func (m *BidRequest_Vertical) String() string            { return proto.CompactTextString(m) }
func (*BidRequest_Vertical) ProtoMessage()               {}
func (*BidRequest_Vertical) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 4} }

func (m *BidRequest_Vertical) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *BidRequest_Vertical) GetWeight() float32 {
	if m != nil && m.Weight != nil {
		return *m.Weight
	}
	return 0
}

// Information about the device.
type BidRequest_Device struct {
	DeviceType *BidRequest_Device_DeviceType `protobuf:"varint,1,opt,name=device_type,enum=BidRequest_Device_DeviceType,def=0" json:"device_type,omitempty"`
	// The platform of the device. Examples: android, iphone, palm
	Platform *string `protobuf:"bytes,2,opt,name=platform" json:"platform,omitempty"`
	// The brand of the device, e.g. Nokia, Samsung.
	Brand *string `protobuf:"bytes,3,opt,name=brand,def=" json:"brand,omitempty"`
	// The model of the device, e.g. N70, Galaxy.
	Model *string `protobuf:"bytes,4,opt,name=model,def=" json:"model,omitempty"`
	// The OS version; e.g. 2 for Android 2.1, or 3.3 for iOS 3.3.1.
	OsVersion *BidRequest_Device_OsVersion `protobuf:"bytes,5,opt,name=os_version" json:"os_version,omitempty"`
	// Unique identifier for the mobile carrier if the device is connected to
	// the internet via a carrier (as opposed to via WiFi). To look up carrier
	// name and country from carrier ID, please refer to:
	// https://developers.google.com/adwords/api/docs/appendix/mobilecarriers.
	CarrierId *int64 `protobuf:"varint,6,opt,name=carrier_id" json:"carrier_id,omitempty"`
	// The width of the device screen in pixels.
	ScreenWidth *int32 `protobuf:"varint,7,opt,name=screen_width,def=0" json:"screen_width,omitempty"`
	// The height of the device screen in pixels.
	ScreenHeight *int32 `protobuf:"varint,8,opt,name=screen_height,def=0" json:"screen_height,omitempty"`
	// Used for high-density devices (e.g. iOS retina displays).  A non-default
	// value indicates that the nominal screen size (with pixels as the unit)
	// does not describe the actual number of pixels in the screen. For example,
	// nominal width and height may be 320x640 for a screen that actually has
	// 640x1080 pixels, in which case screen_width=320, screen_height=640, and
	// screen_pixel_ratio_millis=2000, since each axis has twice as many pixels
	// as its dimensions would indicate.
	ScreenPixelRatioMillis *int32 `protobuf:"varint,9,opt,name=screen_pixel_ratio_millis,def=0" json:"screen_pixel_ratio_millis,omitempty"`
	// The screen orientation of the device when the ad request is sent.
	ScreenOrientation *BidRequest_Device_ScreenOrientation `protobuf:"varint,10,opt,name=screen_orientation,enum=BidRequest_Device_ScreenOrientation,def=0" json:"screen_orientation,omitempty"`
	// Apple iOS device model, e.g., "iphone 5s", "iphone 6+", "ipad 4".
	HardwareVersion  *string `protobuf:"bytes,11,opt,name=hardware_version" json:"hardware_version,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BidRequest_Device) Reset()                    { *m = BidRequest_Device{} }
func (m *BidRequest_Device) String() string            { return proto.CompactTextString(m) }
func (*BidRequest_Device) ProtoMessage()               {}
func (*BidRequest_Device) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 5} }

const Default_BidRequest_Device_DeviceType BidRequest_Device_DeviceType = BidRequest_Device_UNKNOWN_DEVICE
const Default_BidRequest_Device_ScreenWidth int32 = 0
const Default_BidRequest_Device_ScreenHeight int32 = 0
const Default_BidRequest_Device_ScreenPixelRatioMillis int32 = 0
const Default_BidRequest_Device_ScreenOrientation BidRequest_Device_ScreenOrientation = BidRequest_Device_UNKNOWN_ORIENTATION

func (m *BidRequest_Device) GetDeviceType() BidRequest_Device_DeviceType {
	if m != nil && m.DeviceType != nil {
		return *m.DeviceType
	}
	return Default_BidRequest_Device_DeviceType
}

func (m *BidRequest_Device) GetPlatform() string {
	if m != nil && m.Platform != nil {
		return *m.Platform
	}
	return ""
}

func (m *BidRequest_Device) GetBrand() string {
	if m != nil && m.Brand != nil {
		return *m.Brand
	}
	return ""
}

func (m *BidRequest_Device) GetModel() string {
	if m != nil && m.Model != nil {
		return *m.Model
	}
	return ""
}

func (m *BidRequest_Device) GetOsVersion() *BidRequest_Device_OsVersion {
	if m != nil {
		return m.OsVersion
	}
	return nil
}

func (m *BidRequest_Device) GetCarrierId() int64 {
	if m != nil && m.CarrierId != nil {
		return *m.CarrierId
	}
	return 0
}

func (m *BidRequest_Device) GetScreenWidth() int32 {
	if m != nil && m.ScreenWidth != nil {
		return *m.ScreenWidth
	}
	return Default_BidRequest_Device_ScreenWidth
}

func (m *BidRequest_Device) GetScreenHeight() int32 {
	if m != nil && m.ScreenHeight != nil {
		return *m.ScreenHeight
	}
	return Default_BidRequest_Device_ScreenHeight
}

func (m *BidRequest_Device) GetScreenPixelRatioMillis() int32 {
	if m != nil && m.ScreenPixelRatioMillis != nil {
		return *m.ScreenPixelRatioMillis
	}
	return Default_BidRequest_Device_ScreenPixelRatioMillis
}

func (m *BidRequest_Device) GetScreenOrientation() BidRequest_Device_ScreenOrientation {
	if m != nil && m.ScreenOrientation != nil {
		return *m.ScreenOrientation
	}
	return Default_BidRequest_Device_ScreenOrientation
}

func (m *BidRequest_Device) GetHardwareVersion() string {
	if m != nil && m.HardwareVersion != nil {
		return *m.HardwareVersion
	}
	return ""
}

// Contains the OS version of the platform. For instance, for Android 2,
// major=2, minor=0. For iPhone 3.3.1, major=3 and minor=3.
type BidRequest_Device_OsVersion struct {
	Major            *int32 `protobuf:"varint,1,opt,name=major" json:"major,omitempty"`
	Minor            *int32 `protobuf:"varint,2,opt,name=minor" json:"minor,omitempty"`
	Micro            *int32 `protobuf:"varint,3,opt,name=micro" json:"micro,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BidRequest_Device_OsVersion) Reset()         { *m = BidRequest_Device_OsVersion{} }
func (m *BidRequest_Device_OsVersion) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Device_OsVersion) ProtoMessage()    {}
func (*BidRequest_Device_OsVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 5, 0}
}

func (m *BidRequest_Device_OsVersion) GetMajor() int32 {
	if m != nil && m.Major != nil {
		return *m.Major
	}
	return 0
}

func (m *BidRequest_Device_OsVersion) GetMinor() int32 {
	if m != nil && m.Minor != nil {
		return *m.Minor
	}
	return 0
}

func (m *BidRequest_Device_OsVersion) GetMicro() int32 {
	if m != nil && m.Micro != nil {
		return *m.Micro
	}
	return 0
}

// Additional key-value attributes. Currently unused.
type BidRequest_KeyValue struct {
	Key              *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value            *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BidRequest_KeyValue) Reset()                    { *m = BidRequest_KeyValue{} }
func (m *BidRequest_KeyValue) String() string            { return proto.CompactTextString(m) }
func (*BidRequest_KeyValue) ProtoMessage()               {}
func (*BidRequest_KeyValue) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 6} }

func (m *BidRequest_KeyValue) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *BidRequest_KeyValue) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

// Information for ad queries coming from mobile devices. A mobile device is
// either a smartphone or a tablet. This is present for ad queries both from
// mobile devices browsing the web and from mobile apps.
type BidRequest_Mobile struct {
	// If true, then this request is from a mobile application. Will always be
	// true when app_id is set. May also be true for anonymous inventory, in
	// which case anonymous_id will be set.
	IsApp *bool `protobuf:"varint,7,opt,name=is_app,def=0" json:"is_app,omitempty"`
	// The identifier of the mobile app when this ad query comes from a mobile
	// app. If the app was downloaded from the Apple iTunes app store, then
	// this is the app-store id. For Android devices, this is the fully
	// qualified package name. Examples: 343200656, com.rovio.angrybirds
	AppId *string `protobuf:"bytes,6,opt,name=app_id" json:"app_id,omitempty"`
	// If true, then this is a mobile full screen ad request.
	IsInterstitialRequest *bool `protobuf:"varint,10,opt,name=is_interstitial_request,def=0" json:"is_interstitial_request,omitempty"`
	// This field contains the IDs of categories to which the current mobile app
	// belongs. This field will be empty if is_app is false. The mapping between
	// mobile apps and categories is defined by the Google Play Store for
	// Android apps, or the Apple iTunes Store for iOS apps. To look up category
	// name from category ID, please refer to
	// https://developers.google.com/adwords/api/docs/appendix/mobileappcategories
	AppCategoryIds []int32 `protobuf:"varint,11,rep,name=app_category_ids" json:"app_category_ids,omitempty"`
	// For a mobile web request, this field indicates whether the page is
	// optimized for mobile browsers on high-end mobile phones.
	IsMobileWebOptimized *bool `protobuf:"varint,17,opt,name=is_mobile_web_optimized,def=0" json:"is_mobile_web_optimized,omitempty"`
	// Apple's identifier for advertising (IDFA) as described at
	// https://support.google.com/adxbuyer/answer/3221407 or Android's
	// advertising identifier. When the encrypted_advertising_id is an IDFA, the
	// plaintext after decrypting the ciphertext is the IDFA (16 byte UUID)
	// returned by iOS's [ASIdentifierManager advertisingIdentifier]. For
	// encrypted_hashed_idfa, the plaintext is the 16 byte MD5 hash of the
	// IDFA. Only one of the two fields will be available, depending on the
	// version of the SDK making the request. Later SDKs provide unhashed
	// values. They are not set if there is one or more user_data_treatment
	// value in the BidRequest, see constrained_usage_encrypted_advertising_id
	// and constrained_usage_encrypted_hashed_idfa instead.
	EncryptedAdvertisingId []byte `protobuf:"bytes,20,opt,name=encrypted_advertising_id" json:"encrypted_advertising_id,omitempty"`
	// Unencrypted version of encrypted_advertising_id. This field is only set
	// when using an SSL connection. This field is a 16 byte UUID.
	AdvertisingId       []byte `protobuf:"bytes,27,opt,name=advertising_id" json:"advertising_id,omitempty"`
	EncryptedHashedIdfa []byte `protobuf:"bytes,21,opt,name=encrypted_hashed_idfa" json:"encrypted_hashed_idfa,omitempty"`
	// Unencrypted version of encrypted_hashed_idfa. This field is only set
	// when using an SSL connection. This field is a 16 byte MD5.
	HashedIdfa []byte `protobuf:"bytes,28,opt,name=hashed_idfa" json:"hashed_idfa,omitempty"`
	// Only set if the BidRequest contains one or more user_data_treatment
	// value. If constrained_usage_encrypted_advertising_id or
	// constrained_usage_encrypted_hashed_idfa is set, then the corresponding
	// non-constrained field is not set. You must be whitelisted for all
	// user_data_treatments in this request in order to receive these fields.
	ConstrainedUsageEncryptedAdvertisingId []byte `protobuf:"bytes,22,opt,name=constrained_usage_encrypted_advertising_id" json:"constrained_usage_encrypted_advertising_id,omitempty"`
	// Unencrypted version of constrained_usage_encrypted_advertising_id. This
	// field is only set when using an SSL connection. This field is a 16 byte
	// UUID.
	ConstrainedUsageAdvertisingId       []byte `protobuf:"bytes,29,opt,name=constrained_usage_advertising_id" json:"constrained_usage_advertising_id,omitempty"`
	ConstrainedUsageEncryptedHashedIdfa []byte `protobuf:"bytes,23,opt,name=constrained_usage_encrypted_hashed_idfa" json:"constrained_usage_encrypted_hashed_idfa,omitempty"`
	// Unencrypted version of constrained_usage_encrypted_hashed_idfa. This
	// field is only set when using an SSL connection. This field is a 16 byte
	// MD5.
	ConstrainedUsageHashedIdfa []byte `protobuf:"bytes,30,opt,name=constrained_usage_hashed_idfa" json:"constrained_usage_hashed_idfa,omitempty"`
	// App name for Android apps in Google Play store.
	AppName *string `protobuf:"bytes,24,opt,name=app_name" json:"app_name,omitempty"`
	// Average user rating for the app. The range of user rating is between 1.0
	// and 5.0. Currently only available for apps in Google Play store.
	AppRating *float32 `protobuf:"fixed32,25,opt,name=app_rating" json:"app_rating,omitempty"`
	// These are deprecated. Please ignore.
	DEPRECATEDAppName                *string                             `protobuf:"bytes,1,opt,name=DEPRECATED_app_name" json:"DEPRECATED_app_name,omitempty"`
	DEPRECATEDCompanyName            *string                             `protobuf:"bytes,2,opt,name=DEPRECATED_company_name" json:"DEPRECATED_company_name,omitempty"`
	DEPRECATEDPlatform               *string                             `protobuf:"bytes,3,opt,name=DEPRECATED_platform" json:"DEPRECATED_platform,omitempty"`
	DEPRECATEDCarrierName            *string                             `protobuf:"bytes,4,opt,name=DEPRECATED_carrier_name" json:"DEPRECATED_carrier_name,omitempty"`
	DEPRECATEDCarrierCountry         *string                             `protobuf:"bytes,5,opt,name=DEPRECATED_carrier_country" json:"DEPRECATED_carrier_country,omitempty"`
	DEPRECATEDMobileDeviceType       *BidRequest_Mobile_MobileDeviceType `protobuf:"varint,8,opt,name=DEPRECATED_mobile_device_type,enum=BidRequest_Mobile_MobileDeviceType,def=0" json:"DEPRECATED_mobile_device_type,omitempty"`
	DEPRECATEDScreenOrientation      *int32                              `protobuf:"varint,9,opt,name=DEPRECATED_screen_orientation,def=0" json:"DEPRECATED_screen_orientation,omitempty"`
	DEPRECATEDBrand                  *string                             `protobuf:"bytes,12,opt,name=DEPRECATED_brand" json:"DEPRECATED_brand,omitempty"`
	DEPRECATEDModel                  *string                             `protobuf:"bytes,13,opt,name=DEPRECATED_model" json:"DEPRECATED_model,omitempty"`
	DEPRECATEDOsVersion              *BidRequest_Mobile_DeviceOsVersion  `protobuf:"bytes,14,opt,name=DEPRECATED_os_version" json:"DEPRECATED_os_version,omitempty"`
	DEPRECATEDScreenWidth            *int32                              `protobuf:"varint,15,opt,name=DEPRECATED_screen_width" json:"DEPRECATED_screen_width,omitempty"`
	DEPRECATEDScreenHeight           *int32                              `protobuf:"varint,16,opt,name=DEPRECATED_screen_height" json:"DEPRECATED_screen_height,omitempty"`
	DEPRECATEDCarrierId              *int64                              `protobuf:"varint,18,opt,name=DEPRECATED_carrier_id" json:"DEPRECATED_carrier_id,omitempty"`
	DEPRECATEDDevicePixelRatioMillis *int32                              `protobuf:"varint,19,opt,name=DEPRECATED_device_pixel_ratio_millis,def=1000" json:"DEPRECATED_device_pixel_ratio_millis,omitempty"`
	XXX_unrecognized                 []byte                              `json:"-"`
}

func (m *BidRequest_Mobile) Reset()                    { *m = BidRequest_Mobile{} }
func (m *BidRequest_Mobile) String() string            { return proto.CompactTextString(m) }
func (*BidRequest_Mobile) ProtoMessage()               {}
func (*BidRequest_Mobile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 7} }

const Default_BidRequest_Mobile_IsApp bool = false
const Default_BidRequest_Mobile_IsInterstitialRequest bool = false
const Default_BidRequest_Mobile_IsMobileWebOptimized bool = false
const Default_BidRequest_Mobile_DEPRECATEDMobileDeviceType BidRequest_Mobile_MobileDeviceType = BidRequest_Mobile_UNKNOWN
const Default_BidRequest_Mobile_DEPRECATEDScreenOrientation int32 = 0
const Default_BidRequest_Mobile_DEPRECATEDDevicePixelRatioMillis int32 = 1000

func (m *BidRequest_Mobile) GetIsApp() bool {
	if m != nil && m.IsApp != nil {
		return *m.IsApp
	}
	return Default_BidRequest_Mobile_IsApp
}

func (m *BidRequest_Mobile) GetAppId() string {
	if m != nil && m.AppId != nil {
		return *m.AppId
	}
	return ""
}

func (m *BidRequest_Mobile) GetIsInterstitialRequest() bool {
	if m != nil && m.IsInterstitialRequest != nil {
		return *m.IsInterstitialRequest
	}
	return Default_BidRequest_Mobile_IsInterstitialRequest
}

func (m *BidRequest_Mobile) GetAppCategoryIds() []int32 {
	if m != nil {
		return m.AppCategoryIds
	}
	return nil
}

func (m *BidRequest_Mobile) GetIsMobileWebOptimized() bool {
	if m != nil && m.IsMobileWebOptimized != nil {
		return *m.IsMobileWebOptimized
	}
	return Default_BidRequest_Mobile_IsMobileWebOptimized
}

func (m *BidRequest_Mobile) GetEncryptedAdvertisingId() []byte {
	if m != nil {
		return m.EncryptedAdvertisingId
	}
	return nil
}

func (m *BidRequest_Mobile) GetAdvertisingId() []byte {
	if m != nil {
		return m.AdvertisingId
	}
	return nil
}

func (m *BidRequest_Mobile) GetEncryptedHashedIdfa() []byte {
	if m != nil {
		return m.EncryptedHashedIdfa
	}
	return nil
}

func (m *BidRequest_Mobile) GetHashedIdfa() []byte {
	if m != nil {
		return m.HashedIdfa
	}
	return nil
}

func (m *BidRequest_Mobile) GetConstrainedUsageEncryptedAdvertisingId() []byte {
	if m != nil {
		return m.ConstrainedUsageEncryptedAdvertisingId
	}
	return nil
}

func (m *BidRequest_Mobile) GetConstrainedUsageAdvertisingId() []byte {
	if m != nil {
		return m.ConstrainedUsageAdvertisingId
	}
	return nil
}

func (m *BidRequest_Mobile) GetConstrainedUsageEncryptedHashedIdfa() []byte {
	if m != nil {
		return m.ConstrainedUsageEncryptedHashedIdfa
	}
	return nil
}

func (m *BidRequest_Mobile) GetConstrainedUsageHashedIdfa() []byte {
	if m != nil {
		return m.ConstrainedUsageHashedIdfa
	}
	return nil
}

func (m *BidRequest_Mobile) GetAppName() string {
	if m != nil && m.AppName != nil {
		return *m.AppName
	}
	return ""
}

func (m *BidRequest_Mobile) GetAppRating() float32 {
	if m != nil && m.AppRating != nil {
		return *m.AppRating
	}
	return 0
}

func (m *BidRequest_Mobile) GetDEPRECATEDAppName() string {
	if m != nil && m.DEPRECATEDAppName != nil {
		return *m.DEPRECATEDAppName
	}
	return ""
}

func (m *BidRequest_Mobile) GetDEPRECATEDCompanyName() string {
	if m != nil && m.DEPRECATEDCompanyName != nil {
		return *m.DEPRECATEDCompanyName
	}
	return ""
}

func (m *BidRequest_Mobile) GetDEPRECATEDPlatform() string {
	if m != nil && m.DEPRECATEDPlatform != nil {
		return *m.DEPRECATEDPlatform
	}
	return ""
}

func (m *BidRequest_Mobile) GetDEPRECATEDCarrierName() string {
	if m != nil && m.DEPRECATEDCarrierName != nil {
		return *m.DEPRECATEDCarrierName
	}
	return ""
}

func (m *BidRequest_Mobile) GetDEPRECATEDCarrierCountry() string {
	if m != nil && m.DEPRECATEDCarrierCountry != nil {
		return *m.DEPRECATEDCarrierCountry
	}
	return ""
}

func (m *BidRequest_Mobile) GetDEPRECATEDMobileDeviceType() BidRequest_Mobile_MobileDeviceType {
	if m != nil && m.DEPRECATEDMobileDeviceType != nil {
		return *m.DEPRECATEDMobileDeviceType
	}
	return Default_BidRequest_Mobile_DEPRECATEDMobileDeviceType
}

func (m *BidRequest_Mobile) GetDEPRECATEDScreenOrientation() int32 {
	if m != nil && m.DEPRECATEDScreenOrientation != nil {
		return *m.DEPRECATEDScreenOrientation
	}
	return Default_BidRequest_Mobile_DEPRECATEDScreenOrientation
}

func (m *BidRequest_Mobile) GetDEPRECATEDBrand() string {
	if m != nil && m.DEPRECATEDBrand != nil {
		return *m.DEPRECATEDBrand
	}
	return ""
}

func (m *BidRequest_Mobile) GetDEPRECATEDModel() string {
	if m != nil && m.DEPRECATEDModel != nil {
		return *m.DEPRECATEDModel
	}
	return ""
}

func (m *BidRequest_Mobile) GetDEPRECATEDOsVersion() *BidRequest_Mobile_DeviceOsVersion {
	if m != nil {
		return m.DEPRECATEDOsVersion
	}
	return nil
}

func (m *BidRequest_Mobile) GetDEPRECATEDScreenWidth() int32 {
	if m != nil && m.DEPRECATEDScreenWidth != nil {
		return *m.DEPRECATEDScreenWidth
	}
	return 0
}

func (m *BidRequest_Mobile) GetDEPRECATEDScreenHeight() int32 {
	if m != nil && m.DEPRECATEDScreenHeight != nil {
		return *m.DEPRECATEDScreenHeight
	}
	return 0
}

func (m *BidRequest_Mobile) GetDEPRECATEDCarrierId() int64 {
	if m != nil && m.DEPRECATEDCarrierId != nil {
		return *m.DEPRECATEDCarrierId
	}
	return 0
}

func (m *BidRequest_Mobile) GetDEPRECATEDDevicePixelRatioMillis() int32 {
	if m != nil && m.DEPRECATEDDevicePixelRatioMillis != nil {
		return *m.DEPRECATEDDevicePixelRatioMillis
	}
	return Default_BidRequest_Mobile_DEPRECATEDDevicePixelRatioMillis
}

type BidRequest_Mobile_DeviceOsVersion struct {
	OsVersionMajor   *int32 `protobuf:"varint,1,opt,name=os_version_major" json:"os_version_major,omitempty"`
	OsVersionMinor   *int32 `protobuf:"varint,2,opt,name=os_version_minor" json:"os_version_minor,omitempty"`
	OsVersionMicro   *int32 `protobuf:"varint,3,opt,name=os_version_micro" json:"os_version_micro,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BidRequest_Mobile_DeviceOsVersion) Reset()         { *m = BidRequest_Mobile_DeviceOsVersion{} }
func (m *BidRequest_Mobile_DeviceOsVersion) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Mobile_DeviceOsVersion) ProtoMessage()    {}
func (*BidRequest_Mobile_DeviceOsVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 7, 0}
}

func (m *BidRequest_Mobile_DeviceOsVersion) GetOsVersionMajor() int32 {
	if m != nil && m.OsVersionMajor != nil {
		return *m.OsVersionMajor
	}
	return 0
}

func (m *BidRequest_Mobile_DeviceOsVersion) GetOsVersionMinor() int32 {
	if m != nil && m.OsVersionMinor != nil {
		return *m.OsVersionMinor
	}
	return 0
}

func (m *BidRequest_Mobile_DeviceOsVersion) GetOsVersionMicro() int32 {
	if m != nil && m.OsVersionMicro != nil {
		return *m.OsVersionMicro
	}
	return 0
}

// Information about the video if this is an in-video ad request.
//
type BidRequest_Video struct {
	Placement *BidRequest_Video_Placement `protobuf:"varint,16,opt,name=placement,enum=BidRequest_Video_Placement,def=0" json:"placement,omitempty"`
	// The URL of the page that the publisher gives Google to describe the video
	// content, with parameters removed.
	DescriptionUrl *string `protobuf:"bytes,10,opt,name=description_url" json:"description_url,omitempty"`
	// If true, the video is embedded on a page outside the publisher's domain.
	// When this is set, description_url points to a description of the video
	// (as it always does), and the url field in BidRequest is the page in which
	// the video is embedded. For example, a request for an in-stream ad in a
	// Vimeo video shared on Facebook has is_embedded_offsite set. The url field
	// is for a Facebook page and the description_url points to the video on
	// Vimeo.
	IsEmbeddedOffsite *bool                                 `protobuf:"varint,11,opt,name=is_embedded_offsite,def=0" json:"is_embedded_offsite,omitempty"`
	PlaybackMethod    *BidRequest_Video_VideoPlaybackMethod `protobuf:"varint,14,opt,name=playback_method,enum=BidRequest_Video_VideoPlaybackMethod,def=0" json:"playback_method,omitempty"`
	// Whether the inventory allows clicking on the video ad to take the user to
	// an advertiser site.  Some platforms, notably connected TVs, do not
	// support clicking on video ads, in which case this field is set to false.
	IsClickable *bool `protobuf:"varint,15,opt,name=is_clickable" json:"is_clickable,omitempty"`
	// The time in milliseconds from the start of the video when the ad will be
	// displayed. 0 means pre-roll and -1 means post-roll. The value is valid
	// only if this param is set. When not set, the display position is unknown.
	VideoadStartDelay *int32 `protobuf:"varint,1,opt,name=videoad_start_delay" json:"videoad_start_delay,omitempty"`
	// The maximum duration in milliseconds of the ad that you should return.
	// If this is not set or has value <= 0, any duration is allowed.
	MaxAdDuration *int32 `protobuf:"varint,2,opt,name=max_ad_duration" json:"max_ad_duration,omitempty"`
	// The minimum duration in milliseconds of the ad that you should return.
	// If this is not set or has value <= 0, there is no minimum duration.
	MinAdDuration *int32 `protobuf:"varint,8,opt,name=min_ad_duration" json:"min_ad_duration,omitempty"`
	// The maximum number of ads in an Adx video pod. A non-zero value indicates
	// that the current ad slot is a video pod that can show multiple video
	// ads. Actual number of video ads shown can be less than or equal to this
	// value but cannot exceed it.
	MaxAdsInPod      *int32                                    `protobuf:"varint,12,opt,name=max_ads_in_pod" json:"max_ads_in_pod,omitempty"`
	VideoAdSkippable *BidRequest_Video_SkippableBidRequestType `protobuf:"varint,4,opt,name=video_ad_skippable,enum=BidRequest_Video_SkippableBidRequestType,def=0" json:"video_ad_skippable,omitempty"`
	// The maximum duration in milliseconds for the ad you should return, if
	// this ad is skippable (this generally differs from the maximum duration
	// allowed for non-skippable ads). If this is not set or has value <= 0, any
	// duration is allowed.
	SkippableMaxAdDuration  *int32                              `protobuf:"varint,5,opt,name=skippable_max_ad_duration" json:"skippable_max_ad_duration,omitempty"`
	AllowedVideoFormats     []BidRequest_Video_VideoFormat      `protobuf:"varint,6,rep,name=allowed_video_formats,enum=BidRequest_Video_VideoFormat" json:"allowed_video_formats,omitempty"`
	CompanionSlot           []*BidRequest_Video_CompanionSlot   `protobuf:"bytes,7,rep,name=companion_slot" json:"companion_slot,omitempty"`
	EndCapSupport           *BidRequest_Video_EndCapSupport     `protobuf:"varint,13,opt,name=end_cap_support,enum=BidRequest_Video_EndCapSupport,def=0" json:"end_cap_support,omitempty"`
	ContentAttributes       *BidRequest_Video_ContentAttributes `protobuf:"bytes,9,opt,name=content_attributes" json:"content_attributes,omitempty"`
	DEPRECATEDInventoryType *BidRequest_Video_InventoryType     `protobuf:"varint,3,opt,name=DEPRECATED_inventory_type,enum=BidRequest_Video_InventoryType,def=0" json:"DEPRECATED_inventory_type,omitempty"`
	XXX_unrecognized        []byte                              `json:"-"`
}

func (m *BidRequest_Video) Reset()                    { *m = BidRequest_Video{} }
func (m *BidRequest_Video) String() string            { return proto.CompactTextString(m) }
func (*BidRequest_Video) ProtoMessage()               {}
func (*BidRequest_Video) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 8} }

const Default_BidRequest_Video_Placement BidRequest_Video_Placement = BidRequest_Video_UNKNOWN_PLACEMENT
const Default_BidRequest_Video_IsEmbeddedOffsite bool = false
const Default_BidRequest_Video_PlaybackMethod BidRequest_Video_VideoPlaybackMethod = BidRequest_Video_METHOD_UNKNOWN
const Default_BidRequest_Video_VideoAdSkippable BidRequest_Video_SkippableBidRequestType = BidRequest_Video_ALLOW_SKIPPABLE
const Default_BidRequest_Video_EndCapSupport BidRequest_Video_EndCapSupport = BidRequest_Video_END_CAP_NOT_ENABLED
const Default_BidRequest_Video_DEPRECATEDInventoryType BidRequest_Video_InventoryType = BidRequest_Video_WEB_VIDEO

func (m *BidRequest_Video) GetPlacement() BidRequest_Video_Placement {
	if m != nil && m.Placement != nil {
		return *m.Placement
	}
	return Default_BidRequest_Video_Placement
}

func (m *BidRequest_Video) GetDescriptionUrl() string {
	if m != nil && m.DescriptionUrl != nil {
		return *m.DescriptionUrl
	}
	return ""
}

func (m *BidRequest_Video) GetIsEmbeddedOffsite() bool {
	if m != nil && m.IsEmbeddedOffsite != nil {
		return *m.IsEmbeddedOffsite
	}
	return Default_BidRequest_Video_IsEmbeddedOffsite
}

func (m *BidRequest_Video) GetPlaybackMethod() BidRequest_Video_VideoPlaybackMethod {
	if m != nil && m.PlaybackMethod != nil {
		return *m.PlaybackMethod
	}
	return Default_BidRequest_Video_PlaybackMethod
}

func (m *BidRequest_Video) GetIsClickable() bool {
	if m != nil && m.IsClickable != nil {
		return *m.IsClickable
	}
	return false
}

func (m *BidRequest_Video) GetVideoadStartDelay() int32 {
	if m != nil && m.VideoadStartDelay != nil {
		return *m.VideoadStartDelay
	}
	return 0
}

func (m *BidRequest_Video) GetMaxAdDuration() int32 {
	if m != nil && m.MaxAdDuration != nil {
		return *m.MaxAdDuration
	}
	return 0
}

func (m *BidRequest_Video) GetMinAdDuration() int32 {
	if m != nil && m.MinAdDuration != nil {
		return *m.MinAdDuration
	}
	return 0
}

func (m *BidRequest_Video) GetMaxAdsInPod() int32 {
	if m != nil && m.MaxAdsInPod != nil {
		return *m.MaxAdsInPod
	}
	return 0
}

func (m *BidRequest_Video) GetVideoAdSkippable() BidRequest_Video_SkippableBidRequestType {
	if m != nil && m.VideoAdSkippable != nil {
		return *m.VideoAdSkippable
	}
	return Default_BidRequest_Video_VideoAdSkippable
}

func (m *BidRequest_Video) GetSkippableMaxAdDuration() int32 {
	if m != nil && m.SkippableMaxAdDuration != nil {
		return *m.SkippableMaxAdDuration
	}
	return 0
}

func (m *BidRequest_Video) GetAllowedVideoFormats() []BidRequest_Video_VideoFormat {
	if m != nil {
		return m.AllowedVideoFormats
	}
	return nil
}

func (m *BidRequest_Video) GetCompanionSlot() []*BidRequest_Video_CompanionSlot {
	if m != nil {
		return m.CompanionSlot
	}
	return nil
}

func (m *BidRequest_Video) GetEndCapSupport() BidRequest_Video_EndCapSupport {
	if m != nil && m.EndCapSupport != nil {
		return *m.EndCapSupport
	}
	return Default_BidRequest_Video_EndCapSupport
}

func (m *BidRequest_Video) GetContentAttributes() *BidRequest_Video_ContentAttributes {
	if m != nil {
		return m.ContentAttributes
	}
	return nil
}

func (m *BidRequest_Video) GetDEPRECATEDInventoryType() BidRequest_Video_InventoryType {
	if m != nil && m.DEPRECATEDInventoryType != nil {
		return *m.DEPRECATEDInventoryType
	}
	return Default_BidRequest_Video_DEPRECATEDInventoryType
}

// Information about the companion ad slots that can be shown with the
// video. While this is a repeated field there will only be one value in
// most cases. If there are no companion ads available this field will not
// be set.
//
type BidRequest_Video_CompanionSlot struct {
	// These fields represent the available heights and widths in this slot.
	// There will always be the same number heights and widths fields.
	Height           []int32                                         `protobuf:"varint,1,rep,packed,name=height" json:"height,omitempty"`
	Width            []int32                                         `protobuf:"varint,2,rep,packed,name=width" json:"width,omitempty"`
	CreativeFormat   []BidRequest_Video_CompanionSlot_CreativeFormat `protobuf:"varint,3,rep,name=creative_format,enum=BidRequest_Video_CompanionSlot_CreativeFormat" json:"creative_format,omitempty"`
	XXX_unrecognized []byte                                          `json:"-"`
}

func (m *BidRequest_Video_CompanionSlot) Reset()         { *m = BidRequest_Video_CompanionSlot{} }
func (m *BidRequest_Video_CompanionSlot) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Video_CompanionSlot) ProtoMessage()    {}
func (*BidRequest_Video_CompanionSlot) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 8, 0}
}

func (m *BidRequest_Video_CompanionSlot) GetHeight() []int32 {
	if m != nil {
		return m.Height
	}
	return nil
}

func (m *BidRequest_Video_CompanionSlot) GetWidth() []int32 {
	if m != nil {
		return m.Width
	}
	return nil
}

func (m *BidRequest_Video_CompanionSlot) GetCreativeFormat() []BidRequest_Video_CompanionSlot_CreativeFormat {
	if m != nil {
		return m.CreativeFormat
	}
	return nil
}

// Attributes of the video that the user is viewing, not the video ad.
// These fields are based on the availability of the video metadata from the
// video publisher and may not always be populated.
//
type BidRequest_Video_ContentAttributes struct {
	// The title of the video.
	Title *string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	// The duration of the video, in seconds.
	DurationSeconds *int32 `protobuf:"varint,2,opt,name=duration_seconds" json:"duration_seconds,omitempty"`
	// A list of keywords describing the video, extracted from the content
	// management system of the video publisher. There will be no more than 10
	// keywords in this list.
	Keywords         []string `protobuf:"bytes,3,rep,name=keywords" json:"keywords,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *BidRequest_Video_ContentAttributes) Reset()         { *m = BidRequest_Video_ContentAttributes{} }
func (m *BidRequest_Video_ContentAttributes) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Video_ContentAttributes) ProtoMessage()    {}
func (*BidRequest_Video_ContentAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 8, 1}
}

func (m *BidRequest_Video_ContentAttributes) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *BidRequest_Video_ContentAttributes) GetDurationSeconds() int32 {
	if m != nil && m.DurationSeconds != nil {
		return *m.DurationSeconds
	}
	return 0
}

func (m *BidRequest_Video_ContentAttributes) GetKeywords() []string {
	if m != nil {
		return m.Keywords
	}
	return nil
}

// -----------------------------------------------------------
// Information about the adslots on the page.
type BidRequest_AdSlot struct {
	// An arbitrarily assigned slot id that is unique on a given page and
	// usually starts counting from 1. You use this to identify which slot to
	// bid on in the BidResponse.
	Id *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	// A stable identifier for the combination of publisher, ad slot, and page.
	AdBlockKey *uint64 `protobuf:"varint,14,opt,name=ad_block_key" json:"ad_block_key,omitempty"`
	// Set of channels of which this ad slot is a member. A channel is a set of
	// ad slots on a site. You can target a channel (like "the sports section",
	// or "all top banners") to get more fine-grained control over where your ad
	// shows. Channel names are provided by the publisher.
	TargetableChannel []string `protobuf:"bytes,10,rep,name=targetable_channel" json:"targetable_channel,omitempty"`
	// The width and height in pixels of the allowed ad sizes. Most requests
	// allow only a single size, but some allow more than one. Widths and
	// heights are at the same index. For example, if the width values are
	// [728, 300, 468] and the height values are [90, 250, 60], then the allowed
	// formats are 728x90, 300x250, and 468x60.
	//
	// For VAST video ad requests a single width/height pair specifies the
	// Google-detected video player size.  If Google cannot detect the player
	// size the publisher-provided player size, if available, is used.  For
	// VAST video ads, this size is informational; there is no restriction on
	// the size of the video ad that you can return.
	//
	// For mobile interstitial ads (including ones where video ads are eligible)
	// the first width height pair is the screen size (this is also the video
	// player size for VAST video ads).  Subsequent pairs are recommended
	// interstitial ad sizes that satisfy the interstitial size restrictions,
	// i.e. no bigger than the screen size and no smaller than 50% of width and
	// 40% height.
	Width  []int32 `protobuf:"varint,2,rep,name=width" json:"width,omitempty"`
	Height []int32 `protobuf:"varint,3,rep,name=height" json:"height,omitempty"`
	// The disallowed attribute ids for the ads that can show in this slot. See
	// the publisher-excludable-creative-attributes.txt file in the technical
	// documentation for a list of ids.
	ExcludedAttribute []int32 `protobuf:"varint,4,rep,packed,name=excluded_attribute" json:"excluded_attribute,omitempty"`
	// The allowed vendor types. See the vendors.txt file in the technical
	// documentation for a list of ids. When the seller_network is GDN, the
	// vendor ids listed in gdn-vendors.txt in the supporting technical
	// documentation are also allowed. This field does not apply to deals with
	// block overrides (see https://support.google.com/adxbuyer/answer/6114194).
	AllowedVendorType []int32 `protobuf:"varint,6,rep,packed,name=allowed_vendor_type" json:"allowed_vendor_type,omitempty"`
	// The disallowed sensitive ad categories. See the
	// ad-sensitive-categories.txt file in the technical documentation for a
	// list of ids. You should enforce these exclusions if you have the ability
	// to classify ads into the listed categories. This field does not apply to
	// deals with block overrides (see
	// https://support.google.com/adxbuyer/answer/6114194).
	ExcludedSensitiveCategory []int32 `protobuf:"varint,7,rep,packed,name=excluded_sensitive_category" json:"excluded_sensitive_category,omitempty"`
	// The allowed restricted ad categories for private and open auctions. See
	// the ad-restricted-categories.txt file in the technical documentation for
	// a list of ids. These only apply for private and open auction bids. See
	// the allowed_restricted_category_for_deals field for preferred deals or
	// programmatic guarantees. If you bid with an ad in a restricted category,
	// you MUST ALWAYS declare the category in the bid response regardless of
	// the values in this field.
	AllowedRestrictedCategory []int32 `protobuf:"varint,16,rep,packed,name=allowed_restricted_category" json:"allowed_restricted_category,omitempty"`
	// The allowed restricted ad categories for preferred deals or programmatic
	// guarantees. See the ad-restricted-categories.txt file in the technical
	// documentation for a list of ids. These only apply for preferred deals or
	// programmatic guarantees. See the allowed_restricted_category field for
	// private and open auctions. In some cases, restricted categories are only
	// allowed on preferred deals or programmatic guarantees, so this field
	// lists all categories in allowed_restricted_category, and additionally,
	// restricted categories that are only allowed for preferred deals or
	// programmatic guarantees. If you bid with an ad in a restricted category,
	// you MUST ALWAYS declare the category in the bid response regardless of
	// the values in this field.
	AllowedRestrictedCategoryForDeals []int32 `protobuf:"varint,22,rep,packed,name=allowed_restricted_category_for_deals" json:"allowed_restricted_category_for_deals,omitempty"`
	// The disallowed ad product categories. See the ad-product-categories.txt
	// file in the technical documentation for a list of ids. You should enforce
	// these exclusions if you have the ability to classify ads into the listed
	// categories. This field does not apply to deals with block overrides (see
	// https://support.google.com/adxbuyer/answer/6114194).
	ExcludedProductCategory []int32                             `protobuf:"varint,13,rep,packed,name=excluded_product_category" json:"excluded_product_category,omitempty"`
	MatchingAdData          []*BidRequest_AdSlot_MatchingAdData `protobuf:"bytes,9,rep,name=matching_ad_data" json:"matching_ad_data,omitempty"`
	// The publisher settings list ids that apply to this slot.
	// See the RTB Publisher Settings guide at
	// https://developers.google.com/ad-exchange/rtb/pub-settings-guide
	// for details.
	PublisherSettingsListId []uint64                          `protobuf:"fixed64,15,rep,name=publisher_settings_list_id" json:"publisher_settings_list_id,omitempty"`
	SlotVisibility          *BidRequest_AdSlot_SlotVisibility `protobuf:"varint,12,opt,name=slot_visibility,enum=BidRequest_AdSlot_SlotVisibility,def=0" json:"slot_visibility,omitempty"`
	// Historical viewability percentage for the ad slot. This is an estimate of
	// the likelihood that this slot will be viewable by the end user, based on
	// how often it has been viewable in the past. Expressed as a percentage in
	// the range of [0, 100] and rounded down to the next multiple of 10.  The
	// default value -1 indicates that historical viewability data is not
	// available.
	Viewability *int32 `protobuf:"varint,21,opt,name=viewability,def=-1" json:"viewability,omitempty"`
	// Historical click-through rate for ads served in the ad slot. This is
	// expressed as a fraction in the range [0.0, 1.0]. The default value of
	// -1.0 indicates that historical click-through rate data is not available.
	ClickThroughRate *float32                              `protobuf:"fixed32,25,opt,name=click_through_rate,def=-1" json:"click_through_rate,omitempty"`
	IframingState    *BidRequest_AdSlot_IFramingState      `protobuf:"varint,19,opt,name=iframing_state,enum=BidRequest_AdSlot_IFramingState,def=0" json:"iframing_state,omitempty"`
	IframingDepth    *BidRequest_AdSlot_IFramingDepth      `protobuf:"varint,20,opt,name=iframing_depth,enum=BidRequest_AdSlot_IFramingDepth,def=0" json:"iframing_depth,omitempty"`
	NativeAdTemplate []*BidRequest_AdSlot_NativeAdTemplate `protobuf:"bytes,51,rep,name=native_ad_template" json:"native_ad_template,omitempty"`
	MediationStatus  *BidRequest_AdSlot_MediationStatus    `protobuf:"varint,52,opt,name=mediation_status,enum=BidRequest_AdSlot_MediationStatus,def=0" json:"mediation_status,omitempty"`
	AutoRefresh      *BidRequest_AdSlot_AutoRefresh        `protobuf:"bytes,23,opt,name=auto_refresh" json:"auto_refresh,omitempty"`
	Stickiness       *BidRequest_AdSlot_Stickiness         `protobuf:"varint,24,opt,name=stickiness,enum=BidRequest_AdSlot_Stickiness,def=0" json:"stickiness,omitempty"`
	Renderer         *BidRequest_AdSlot_Renderer           `protobuf:"varint,26,opt,name=renderer,enum=BidRequest_AdSlot_Renderer,def=0" json:"renderer,omitempty"`
	// These are deprecated. Please ignore.
	DEPRECATEDAllowedAttribute        []int32  `protobuf:"varint,5,rep,name=DEPRECATED_allowed_attribute" json:"DEPRECATED_allowed_attribute,omitempty"`
	DEPRECATEDPublisherSettingsListId [][]byte `protobuf:"bytes,11,rep,name=DEPRECATED_publisher_settings_list_id" json:"DEPRECATED_publisher_settings_list_id,omitempty"`
	DEPRECATEDExcludedClickThroughUrl []string `protobuf:"bytes,8,rep,name=DEPRECATED_excluded_click_through_url" json:"DEPRECATED_excluded_click_through_url,omitempty"`
	XXX_unrecognized                  []byte   `json:"-"`
}

func (m *BidRequest_AdSlot) Reset()                    { *m = BidRequest_AdSlot{} }
func (m *BidRequest_AdSlot) String() string            { return proto.CompactTextString(m) }
func (*BidRequest_AdSlot) ProtoMessage()               {}
func (*BidRequest_AdSlot) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 9} }

const Default_BidRequest_AdSlot_SlotVisibility BidRequest_AdSlot_SlotVisibility = BidRequest_AdSlot_NO_DETECTION
const Default_BidRequest_AdSlot_Viewability int32 = -1
const Default_BidRequest_AdSlot_ClickThroughRate float32 = -1
const Default_BidRequest_AdSlot_IframingState BidRequest_AdSlot_IFramingState = BidRequest_AdSlot_UNKNOWN_IFRAME_STATE
const Default_BidRequest_AdSlot_IframingDepth BidRequest_AdSlot_IFramingDepth = BidRequest_AdSlot_UNKNOWN_IFRAME_DEPTH
const Default_BidRequest_AdSlot_MediationStatus BidRequest_AdSlot_MediationStatus = BidRequest_AdSlot_UNKNOWN
const Default_BidRequest_AdSlot_Stickiness BidRequest_AdSlot_Stickiness = BidRequest_AdSlot_UNKNOWN_STICKINESS
const Default_BidRequest_AdSlot_Renderer BidRequest_AdSlot_Renderer = BidRequest_AdSlot_UNKNOWN_RENDERER

func (m *BidRequest_AdSlot) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *BidRequest_AdSlot) GetAdBlockKey() uint64 {
	if m != nil && m.AdBlockKey != nil {
		return *m.AdBlockKey
	}
	return 0
}

func (m *BidRequest_AdSlot) GetTargetableChannel() []string {
	if m != nil {
		return m.TargetableChannel
	}
	return nil
}

func (m *BidRequest_AdSlot) GetWidth() []int32 {
	if m != nil {
		return m.Width
	}
	return nil
}

func (m *BidRequest_AdSlot) GetHeight() []int32 {
	if m != nil {
		return m.Height
	}
	return nil
}

func (m *BidRequest_AdSlot) GetExcludedAttribute() []int32 {
	if m != nil {
		return m.ExcludedAttribute
	}
	return nil
}

func (m *BidRequest_AdSlot) GetAllowedVendorType() []int32 {
	if m != nil {
		return m.AllowedVendorType
	}
	return nil
}

func (m *BidRequest_AdSlot) GetExcludedSensitiveCategory() []int32 {
	if m != nil {
		return m.ExcludedSensitiveCategory
	}
	return nil
}

func (m *BidRequest_AdSlot) GetAllowedRestrictedCategory() []int32 {
	if m != nil {
		return m.AllowedRestrictedCategory
	}
	return nil
}

func (m *BidRequest_AdSlot) GetAllowedRestrictedCategoryForDeals() []int32 {
	if m != nil {
		return m.AllowedRestrictedCategoryForDeals
	}
	return nil
}

func (m *BidRequest_AdSlot) GetExcludedProductCategory() []int32 {
	if m != nil {
		return m.ExcludedProductCategory
	}
	return nil
}

func (m *BidRequest_AdSlot) GetMatchingAdData() []*BidRequest_AdSlot_MatchingAdData {
	if m != nil {
		return m.MatchingAdData
	}
	return nil
}

func (m *BidRequest_AdSlot) GetPublisherSettingsListId() []uint64 {
	if m != nil {
		return m.PublisherSettingsListId
	}
	return nil
}

func (m *BidRequest_AdSlot) GetSlotVisibility() BidRequest_AdSlot_SlotVisibility {
	if m != nil && m.SlotVisibility != nil {
		return *m.SlotVisibility
	}
	return Default_BidRequest_AdSlot_SlotVisibility
}

func (m *BidRequest_AdSlot) GetViewability() int32 {
	if m != nil && m.Viewability != nil {
		return *m.Viewability
	}
	return Default_BidRequest_AdSlot_Viewability
}

func (m *BidRequest_AdSlot) GetClickThroughRate() float32 {
	if m != nil && m.ClickThroughRate != nil {
		return *m.ClickThroughRate
	}
	return Default_BidRequest_AdSlot_ClickThroughRate
}

func (m *BidRequest_AdSlot) GetIframingState() BidRequest_AdSlot_IFramingState {
	if m != nil && m.IframingState != nil {
		return *m.IframingState
	}
	return Default_BidRequest_AdSlot_IframingState
}

func (m *BidRequest_AdSlot) GetIframingDepth() BidRequest_AdSlot_IFramingDepth {
	if m != nil && m.IframingDepth != nil {
		return *m.IframingDepth
	}
	return Default_BidRequest_AdSlot_IframingDepth
}

func (m *BidRequest_AdSlot) GetNativeAdTemplate() []*BidRequest_AdSlot_NativeAdTemplate {
	if m != nil {
		return m.NativeAdTemplate
	}
	return nil
}

func (m *BidRequest_AdSlot) GetMediationStatus() BidRequest_AdSlot_MediationStatus {
	if m != nil && m.MediationStatus != nil {
		return *m.MediationStatus
	}
	return Default_BidRequest_AdSlot_MediationStatus
}

func (m *BidRequest_AdSlot) GetAutoRefresh() *BidRequest_AdSlot_AutoRefresh {
	if m != nil {
		return m.AutoRefresh
	}
	return nil
}

func (m *BidRequest_AdSlot) GetStickiness() BidRequest_AdSlot_Stickiness {
	if m != nil && m.Stickiness != nil {
		return *m.Stickiness
	}
	return Default_BidRequest_AdSlot_Stickiness
}

func (m *BidRequest_AdSlot) GetRenderer() BidRequest_AdSlot_Renderer {
	if m != nil && m.Renderer != nil {
		return *m.Renderer
	}
	return Default_BidRequest_AdSlot_Renderer
}

func (m *BidRequest_AdSlot) GetDEPRECATEDAllowedAttribute() []int32 {
	if m != nil {
		return m.DEPRECATEDAllowedAttribute
	}
	return nil
}

func (m *BidRequest_AdSlot) GetDEPRECATEDPublisherSettingsListId() [][]byte {
	if m != nil {
		return m.DEPRECATEDPublisherSettingsListId
	}
	return nil
}

func (m *BidRequest_AdSlot) GetDEPRECATEDExcludedClickThroughUrl() []string {
	if m != nil {
		return m.DEPRECATEDExcludedClickThroughUrl
	}
	return nil
}

// Information about the pre-targeting configs that matched.
//
type BidRequest_AdSlot_MatchingAdData struct {
	// The billing ids corresponding to the pretargeting configs that matched.
	BillingId []int64 `protobuf:"varint,2,rep,name=billing_id" json:"billing_id,omitempty"`
	// The minimum CPM value that you can bid to not be filtered before the
	// auction. This may be a global minimum, or it may be a minimum set by
	// the publisher. The value is in micros of your account currency.
	MinimumCpmMicros *int64 `protobuf:"varint,5,opt,name=minimum_cpm_micros" json:"minimum_cpm_micros,omitempty"`
	// Publisher open auction pricing rules in priority order, from highest to
	// lowest.
	PricingRule []*BidRequest_AdSlot_MatchingAdData_BuyerPricingRule `protobuf:"bytes,7,rep,name=pricing_rule" json:"pricing_rule,omitempty"`
	DirectDeal  []*BidRequest_AdSlot_MatchingAdData_DirectDeal       `protobuf:"bytes,6,rep,name=direct_deal" json:"direct_deal,omitempty"`
	// These are deprecated. Please ignore.
	DEPRECATEDCampaignId         *int64 `protobuf:"varint,1,opt,name=DEPRECATED_campaign_id" json:"DEPRECATED_campaign_id,omitempty"`
	DEPRECATEDPerBuyerMinimumCpm *bool  `protobuf:"varint,3,opt,name=DEPRECATED_per_buyer_minimum_cpm" json:"DEPRECATED_per_buyer_minimum_cpm,omitempty"`
	DEPRECATEDFixedCpmMicros     *int64 `protobuf:"varint,4,opt,name=DEPRECATED_fixed_cpm_micros" json:"DEPRECATED_fixed_cpm_micros,omitempty"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *BidRequest_AdSlot_MatchingAdData) Reset()         { *m = BidRequest_AdSlot_MatchingAdData{} }
func (m *BidRequest_AdSlot_MatchingAdData) String() string { return proto.CompactTextString(m) }
func (*BidRequest_AdSlot_MatchingAdData) ProtoMessage()    {}
func (*BidRequest_AdSlot_MatchingAdData) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 9, 0}
}

func (m *BidRequest_AdSlot_MatchingAdData) GetBillingId() []int64 {
	if m != nil {
		return m.BillingId
	}
	return nil
}

func (m *BidRequest_AdSlot_MatchingAdData) GetMinimumCpmMicros() int64 {
	if m != nil && m.MinimumCpmMicros != nil {
		return *m.MinimumCpmMicros
	}
	return 0
}

func (m *BidRequest_AdSlot_MatchingAdData) GetPricingRule() []*BidRequest_AdSlot_MatchingAdData_BuyerPricingRule {
	if m != nil {
		return m.PricingRule
	}
	return nil
}

func (m *BidRequest_AdSlot_MatchingAdData) GetDirectDeal() []*BidRequest_AdSlot_MatchingAdData_DirectDeal {
	if m != nil {
		return m.DirectDeal
	}
	return nil
}

func (m *BidRequest_AdSlot_MatchingAdData) GetDEPRECATEDCampaignId() int64 {
	if m != nil && m.DEPRECATEDCampaignId != nil {
		return *m.DEPRECATEDCampaignId
	}
	return 0
}

func (m *BidRequest_AdSlot_MatchingAdData) GetDEPRECATEDPerBuyerMinimumCpm() bool {
	if m != nil && m.DEPRECATEDPerBuyerMinimumCpm != nil {
		return *m.DEPRECATEDPerBuyerMinimumCpm
	}
	return false
}

func (m *BidRequest_AdSlot_MatchingAdData) GetDEPRECATEDFixedCpmMicros() int64 {
	if m != nil && m.DEPRECATEDFixedCpmMicros != nil {
		return *m.DEPRECATEDFixedCpmMicros
	}
	return 0
}

// Publisher open auction pricing rules applicable to a particular buyer.
type BidRequest_AdSlot_MatchingAdData_BuyerPricingRule struct {
	// Only one of the included_advertisers and excluded_advertisers fields
	// can be set in a rule. See advertisers.txt file in the technical
	// documentation for a list of ids.
	IncludedAdvertisers []int64 `protobuf:"varint,1,rep,name=included_advertisers" json:"included_advertisers,omitempty"`
	ExcludedAdvertisers []int64 `protobuf:"varint,2,rep,name=excluded_advertisers" json:"excluded_advertisers,omitempty"`
	// Only one of the included_agencies and excluded_agencies fields can be
	// set in a rule. See agencies.txt file in the technical documentation
	// for a list of ids.
	IncludedAgencies []int64 `protobuf:"varint,3,rep,name=included_agencies" json:"included_agencies,omitempty"`
	ExcludedAgencies []int64 `protobuf:"varint,4,rep,name=excluded_agencies" json:"excluded_agencies,omitempty"`
	// Only one of the blocked and minimum_cpm_micros can be set in a rule.
	// If set to true, indicates that the specified advertisers/agencies are
	// blocked from bidding.
	Blocked *bool `protobuf:"varint,5,opt,name=blocked" json:"blocked,omitempty"`
	// Minimum CPM value that you can bid to not be filtered before the
	// auction. The value is in micros of the bidder account currency.
	MinimumCpmMicros *int64 `protobuf:"varint,6,opt,name=minimum_cpm_micros" json:"minimum_cpm_micros,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BidRequest_AdSlot_MatchingAdData_BuyerPricingRule) Reset() {
	*m = BidRequest_AdSlot_MatchingAdData_BuyerPricingRule{}
}
func (m *BidRequest_AdSlot_MatchingAdData_BuyerPricingRule) String() string {
	return proto.CompactTextString(m)
}
func (*BidRequest_AdSlot_MatchingAdData_BuyerPricingRule) ProtoMessage() {}
func (*BidRequest_AdSlot_MatchingAdData_BuyerPricingRule) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 9, 0, 0}
}

func (m *BidRequest_AdSlot_MatchingAdData_BuyerPricingRule) GetIncludedAdvertisers() []int64 {
	if m != nil {
		return m.IncludedAdvertisers
	}
	return nil
}

func (m *BidRequest_AdSlot_MatchingAdData_BuyerPricingRule) GetExcludedAdvertisers() []int64 {
	if m != nil {
		return m.ExcludedAdvertisers
	}
	return nil
}

func (m *BidRequest_AdSlot_MatchingAdData_BuyerPricingRule) GetIncludedAgencies() []int64 {
	if m != nil {
		return m.IncludedAgencies
	}
	return nil
}

func (m *BidRequest_AdSlot_MatchingAdData_BuyerPricingRule) GetExcludedAgencies() []int64 {
	if m != nil {
		return m.ExcludedAgencies
	}
	return nil
}

func (m *BidRequest_AdSlot_MatchingAdData_BuyerPricingRule) GetBlocked() bool {
	if m != nil && m.Blocked != nil {
		return *m.Blocked
	}
	return false
}

func (m *BidRequest_AdSlot_MatchingAdData_BuyerPricingRule) GetMinimumCpmMicros() int64 {
	if m != nil && m.MinimumCpmMicros != nil {
		return *m.MinimumCpmMicros
	}
	return 0
}

// Information about any deals that matched for this inventory.
//
type BidRequest_AdSlot_MatchingAdData_DirectDeal struct {
	// An id identifying the deal.
	DirectDealId *int64 `protobuf:"varint,1,opt,name=direct_deal_id" json:"direct_deal_id,omitempty"`
	// You must bid at least fixed_cpm_micros (in micros of your account
	// currency) in order to paticipate in the deal. If you win, you will be
	// charged fixed_cpm_micros. This does not apply when
	// deal_type=PRIVATE_AUCTION. For private auctions, you must bid at
	// least fixed_cpm_micros and you pay the second price. Bidding higher
	// CPM than fixed_cpm_micros will increase your chance to win when
	// deal_type=PRIVATE_AUCTION, however it will not increase your chance
	// to win in other types of deals.
	FixedCpmMicros *int64                                                `protobuf:"varint,2,opt,name=fixed_cpm_micros" json:"fixed_cpm_micros,omitempty"`
	DealType       *BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType `protobuf:"varint,3,opt,name=deal_type,enum=BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType,def=0" json:"deal_type,omitempty"`
	// Whether the publisher has exempted this deal from configured blocks.
	// This setting does not override AdX policies or Ad Review Center
	// decisions.
	PublisherBlocksOverridden *bool  `protobuf:"varint,4,opt,name=publisher_blocks_overridden,def=0" json:"publisher_blocks_overridden,omitempty"`
	XXX_unrecognized          []byte `json:"-"`
}

func (m *BidRequest_AdSlot_MatchingAdData_DirectDeal) Reset() {
	*m = BidRequest_AdSlot_MatchingAdData_DirectDeal{}
}
func (m *BidRequest_AdSlot_MatchingAdData_DirectDeal) String() string {
	return proto.CompactTextString(m)
}
func (*BidRequest_AdSlot_MatchingAdData_DirectDeal) ProtoMessage() {}
func (*BidRequest_AdSlot_MatchingAdData_DirectDeal) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 9, 0, 1}
}

const Default_BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType = BidRequest_AdSlot_MatchingAdData_DirectDeal_UNKNOWN_DEAL_TYPE
const Default_BidRequest_AdSlot_MatchingAdData_DirectDeal_PublisherBlocksOverridden bool = false

func (m *BidRequest_AdSlot_MatchingAdData_DirectDeal) GetDirectDealId() int64 {
	if m != nil && m.DirectDealId != nil {
		return *m.DirectDealId
	}
	return 0
}

func (m *BidRequest_AdSlot_MatchingAdData_DirectDeal) GetFixedCpmMicros() int64 {
	if m != nil && m.FixedCpmMicros != nil {
		return *m.FixedCpmMicros
	}
	return 0
}

func (m *BidRequest_AdSlot_MatchingAdData_DirectDeal) GetDealType() BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType {
	if m != nil && m.DealType != nil {
		return *m.DealType
	}
	return Default_BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType
}

func (m *BidRequest_AdSlot_MatchingAdData_DirectDeal) GetPublisherBlocksOverridden() bool {
	if m != nil && m.PublisherBlocksOverridden != nil {
		return *m.PublisherBlocksOverridden
	}
	return Default_BidRequest_AdSlot_MatchingAdData_DirectDeal_PublisherBlocksOverridden
}

// A native ad consists of pieces that are rendered by the publisher. A
// publisher may support multiple distinct native ad templates. If any
// native templates exist, you must set the native_ad field in the response,
// and must not set html_snippet or video_url.
//
type BidRequest_AdSlot_NativeAdTemplate struct {
	// Bitfield describing which fields are required by the publisher. Bid
	// responses with no value for these fields will be rejected. Click and
	// view tracking urls are always implicitly required.
	RequiredFields *int64 `protobuf:"varint,1,opt,name=required_fields" json:"required_fields,omitempty"`
	// Bitfield describing which fields are recommended by the publisher. All
	// recommended fields are supported, but not all recommended fields are
	// required.
	RecommendedFields *int64 `protobuf:"varint,2,opt,name=recommended_fields" json:"recommended_fields,omitempty"`
	// max_safe_length indicates the maximum number of Unicode characters that
	// are guaranteed to be shown without truncation. Longer strings may or
	// may not be truncated by the publisher during rendering.
	HeadlineMaxSafeLength     *int32 `protobuf:"varint,3,opt,name=headline_max_safe_length" json:"headline_max_safe_length,omitempty"`
	BodyMaxSafeLength         *int32 `protobuf:"varint,4,opt,name=body_max_safe_length" json:"body_max_safe_length,omitempty"`
	CallToActionMaxSafeLength *int32 `protobuf:"varint,5,opt,name=call_to_action_max_safe_length" json:"call_to_action_max_safe_length,omitempty"`
	AdvertiserMaxSafeLength   *int32 `protobuf:"varint,6,opt,name=advertiser_max_safe_length" json:"advertiser_max_safe_length,omitempty"`
	StoreMaxSafeLength        *int32 `protobuf:"varint,14,opt,name=store_max_safe_length" json:"store_max_safe_length,omitempty"`
	PriceMaxSafeLength        *int32 `protobuf:"varint,15,opt,name=price_max_safe_length" json:"price_max_safe_length,omitempty"`
	// Image widths and heights are specified in pixels. You may provide a
	// larger image in the response.
	ImageWidth       *int32 `protobuf:"varint,7,opt,name=image_width" json:"image_width,omitempty"`
	ImageHeight      *int32 `protobuf:"varint,8,opt,name=image_height" json:"image_height,omitempty"`
	LogoWidth        *int32 `protobuf:"varint,9,opt,name=logo_width" json:"logo_width,omitempty"`
	LogoHeight       *int32 `protobuf:"varint,10,opt,name=logo_height" json:"logo_height,omitempty"`
	AppIconWidth     *int32 `protobuf:"varint,11,opt,name=app_icon_width" json:"app_icon_width,omitempty"`
	AppIconHeight    *int32 `protobuf:"varint,12,opt,name=app_icon_height" json:"app_icon_height,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BidRequest_AdSlot_NativeAdTemplate) Reset()         { *m = BidRequest_AdSlot_NativeAdTemplate{} }
func (m *BidRequest_AdSlot_NativeAdTemplate) String() string { return proto.CompactTextString(m) }
func (*BidRequest_AdSlot_NativeAdTemplate) ProtoMessage()    {}
func (*BidRequest_AdSlot_NativeAdTemplate) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 9, 1}
}

func (m *BidRequest_AdSlot_NativeAdTemplate) GetRequiredFields() int64 {
	if m != nil && m.RequiredFields != nil {
		return *m.RequiredFields
	}
	return 0
}

func (m *BidRequest_AdSlot_NativeAdTemplate) GetRecommendedFields() int64 {
	if m != nil && m.RecommendedFields != nil {
		return *m.RecommendedFields
	}
	return 0
}

func (m *BidRequest_AdSlot_NativeAdTemplate) GetHeadlineMaxSafeLength() int32 {
	if m != nil && m.HeadlineMaxSafeLength != nil {
		return *m.HeadlineMaxSafeLength
	}
	return 0
}

func (m *BidRequest_AdSlot_NativeAdTemplate) GetBodyMaxSafeLength() int32 {
	if m != nil && m.BodyMaxSafeLength != nil {
		return *m.BodyMaxSafeLength
	}
	return 0
}

func (m *BidRequest_AdSlot_NativeAdTemplate) GetCallToActionMaxSafeLength() int32 {
	if m != nil && m.CallToActionMaxSafeLength != nil {
		return *m.CallToActionMaxSafeLength
	}
	return 0
}

func (m *BidRequest_AdSlot_NativeAdTemplate) GetAdvertiserMaxSafeLength() int32 {
	if m != nil && m.AdvertiserMaxSafeLength != nil {
		return *m.AdvertiserMaxSafeLength
	}
	return 0
}

func (m *BidRequest_AdSlot_NativeAdTemplate) GetStoreMaxSafeLength() int32 {
	if m != nil && m.StoreMaxSafeLength != nil {
		return *m.StoreMaxSafeLength
	}
	return 0
}

func (m *BidRequest_AdSlot_NativeAdTemplate) GetPriceMaxSafeLength() int32 {
	if m != nil && m.PriceMaxSafeLength != nil {
		return *m.PriceMaxSafeLength
	}
	return 0
}

func (m *BidRequest_AdSlot_NativeAdTemplate) GetImageWidth() int32 {
	if m != nil && m.ImageWidth != nil {
		return *m.ImageWidth
	}
	return 0
}

func (m *BidRequest_AdSlot_NativeAdTemplate) GetImageHeight() int32 {
	if m != nil && m.ImageHeight != nil {
		return *m.ImageHeight
	}
	return 0
}

func (m *BidRequest_AdSlot_NativeAdTemplate) GetLogoWidth() int32 {
	if m != nil && m.LogoWidth != nil {
		return *m.LogoWidth
	}
	return 0
}

func (m *BidRequest_AdSlot_NativeAdTemplate) GetLogoHeight() int32 {
	if m != nil && m.LogoHeight != nil {
		return *m.LogoHeight
	}
	return 0
}

func (m *BidRequest_AdSlot_NativeAdTemplate) GetAppIconWidth() int32 {
	if m != nil && m.AppIconWidth != nil {
		return *m.AppIconWidth
	}
	return 0
}

func (m *BidRequest_AdSlot_NativeAdTemplate) GetAppIconHeight() int32 {
	if m != nil && m.AppIconHeight != nil {
		return *m.AppIconHeight
	}
	return 0
}

// Auto refresh settings.
type BidRequest_AdSlot_AutoRefresh struct {
	// The auto-refresh settings that the publisher has on this
	// inventory. This is repeated because publishers may
	// do multiple types of auto refresh on one piece of inventory.
	RefreshSettings []*BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings `protobuf:"bytes,1,rep,name=refresh_settings" json:"refresh_settings,omitempty"`
	// The number of times this ad slot had been refreshed since last page
	// load.
	RefreshCount     *int32 `protobuf:"varint,2,opt,name=refresh_count,def=0" json:"refresh_count,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BidRequest_AdSlot_AutoRefresh) Reset()         { *m = BidRequest_AdSlot_AutoRefresh{} }
func (m *BidRequest_AdSlot_AutoRefresh) String() string { return proto.CompactTextString(m) }
func (*BidRequest_AdSlot_AutoRefresh) ProtoMessage()    {}
func (*BidRequest_AdSlot_AutoRefresh) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 9, 2}
}

const Default_BidRequest_AdSlot_AutoRefresh_RefreshCount int32 = 0

func (m *BidRequest_AdSlot_AutoRefresh) GetRefreshSettings() []*BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings {
	if m != nil {
		return m.RefreshSettings
	}
	return nil
}

func (m *BidRequest_AdSlot_AutoRefresh) GetRefreshCount() int32 {
	if m != nil && m.RefreshCount != nil {
		return *m.RefreshCount
	}
	return Default_BidRequest_AdSlot_AutoRefresh_RefreshCount
}

type BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings struct {
	// The type of the declared auto refresh.
	RefreshType *BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType `protobuf:"varint,1,opt,name=refresh_type,enum=BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType,def=0" json:"refresh_type,omitempty"`
	// The minimum refresh interval. This applies to all refresh types.
	MinRefreshIntervalSeconds *int32 `protobuf:"varint,2,opt,name=min_refresh_interval_seconds" json:"min_refresh_interval_seconds,omitempty"`
	XXX_unrecognized          []byte `json:"-"`
}

func (m *BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings) Reset() {
	*m = BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings{}
}
func (m *BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings) String() string {
	return proto.CompactTextString(m)
}
func (*BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings) ProtoMessage() {}
func (*BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 9, 2, 0}
}

const Default_BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_RefreshType BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType = BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_UNKNOWN_AUTO_REFRESH_TYPE

func (m *BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings) GetRefreshType() BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType {
	if m != nil && m.RefreshType != nil {
		return *m.RefreshType
	}
	return Default_BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_RefreshType
}

func (m *BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings) GetMinRefreshIntervalSeconds() int32 {
	if m != nil && m.MinRefreshIntervalSeconds != nil {
		return *m.MinRefreshIntervalSeconds
	}
	return 0
}

// Feedback on bids submitted in previous responses. This is only set if
// real-time feedback is enabled for your bidder. Please contact your account
// manager if you wish to enable real-time feedback.
//
type BidRequest_BidResponseFeedback struct {
	// The unique id from BidRequest.id
	RequestId []byte `protobuf:"bytes,1,opt,name=request_id" json:"request_id,omitempty"`
	// The index of the creative within the BidResponse if there was more than
	// one. The index starts at zero for the first creative. This is usually the
	// index of the BidResponse.Ad.
	CreativeIndex *int32 `protobuf:"varint,2,opt,name=creative_index" json:"creative_index,omitempty"`
	// The status code for the ad. See creative-status-codes.txt in the
	// technical documentation for a list of ids.
	CreativeStatusCode *int32 `protobuf:"varint,3,opt,name=creative_status_code" json:"creative_status_code,omitempty"`
	// The second price cpm in micros of your account currency if your bid won
	// the auction, or the cpm that must be exceeded to win the auction if your
	// bid was outbid. This is only set if your bid participated in the
	// auction. It is not set if the bid was filtered prior to the auction. It
	// is also witheld if the publisher or winning bidder has opted out of price
	// feedback, or if your account has opted out of sharing winning prices with
	// other bidders.
	CpmMicros        *int64 `protobuf:"varint,4,opt,name=cpm_micros" json:"cpm_micros,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BidRequest_BidResponseFeedback) Reset()         { *m = BidRequest_BidResponseFeedback{} }
func (m *BidRequest_BidResponseFeedback) String() string { return proto.CompactTextString(m) }
func (*BidRequest_BidResponseFeedback) ProtoMessage()    {}
func (*BidRequest_BidResponseFeedback) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 10}
}

func (m *BidRequest_BidResponseFeedback) GetRequestId() []byte {
	if m != nil {
		return m.RequestId
	}
	return nil
}

func (m *BidRequest_BidResponseFeedback) GetCreativeIndex() int32 {
	if m != nil && m.CreativeIndex != nil {
		return *m.CreativeIndex
	}
	return 0
}

func (m *BidRequest_BidResponseFeedback) GetCreativeStatusCode() int32 {
	if m != nil && m.CreativeStatusCode != nil {
		return *m.CreativeStatusCode
	}
	return 0
}

func (m *BidRequest_BidResponseFeedback) GetCpmMicros() int64 {
	if m != nil && m.CpmMicros != nil {
		return *m.CpmMicros
	}
	return 0
}

type BidRequest_MatchingNetwork struct {
	DEPRECATEDNetworkId    *string `protobuf:"bytes,1,opt,name=DEPRECATED_network_id" json:"DEPRECATED_network_id,omitempty"`
	DEPRECATEDGoogleUserId *string `protobuf:"bytes,2,opt,name=DEPRECATED_google_user_id" json:"DEPRECATED_google_user_id,omitempty"`
	XXX_unrecognized       []byte  `json:"-"`
}

func (m *BidRequest_MatchingNetwork) Reset()                    { *m = BidRequest_MatchingNetwork{} }
func (m *BidRequest_MatchingNetwork) String() string            { return proto.CompactTextString(m) }
func (*BidRequest_MatchingNetwork) ProtoMessage()               {}
func (*BidRequest_MatchingNetwork) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 11} }

func (m *BidRequest_MatchingNetwork) GetDEPRECATEDNetworkId() string {
	if m != nil && m.DEPRECATEDNetworkId != nil {
		return *m.DEPRECATEDNetworkId
	}
	return ""
}

func (m *BidRequest_MatchingNetwork) GetDEPRECATEDGoogleUserId() string {
	if m != nil && m.DEPRECATEDGoogleUserId != nil {
		return *m.DEPRECATEDGoogleUserId
	}
	return ""
}

// This is the message that you return in response to a BidRequest. You may
// specify zero or more ads. For each ad, you should provide a list of ad slots
// on which the ad can run. Ad slots are identifed by AdSlot.id from the
// BidRequest. Each ad can win at most one ad slot. If you do not wish to bid,
// submit a response with no ads and with only the processing_time_ms set.
//
type BidResponse struct {
	Ad []*BidResponse_Ad `protobuf:"bytes,2,rep,name=ad" json:"ad,omitempty"`
	// If is_test was set in the BidRequest, then you may return debug information
	// as plain text in this field. Please do not set this field under normal
	// conditions, or set it to values longer than 100 characters. You should only
	// use this field when asked to do so as part of troubleshooting particular
	// problems.
	DebugString *string `protobuf:"bytes,5,opt,name=debug_string" json:"debug_string,omitempty"`
	// Please set this to the processing time in milliseconds from when you
	// received the request to when you returned the response.
	ProcessingTimeMs *int32 `protobuf:"varint,4,opt,name=processing_time_ms" json:"processing_time_ms,omitempty"`
	// This is deprecated. Please do not set.
	DEPRECATEDProtocolVersion *int32 `protobuf:"varint,1,opt,name=DEPRECATED_protocol_version" json:"DEPRECATED_protocol_version,omitempty"`
	XXX_unrecognized          []byte `json:"-"`
}

func (m *BidResponse) Reset()                    { *m = BidResponse{} }
func (m *BidResponse) String() string            { return proto.CompactTextString(m) }
func (*BidResponse) ProtoMessage()               {}
func (*BidResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *BidResponse) GetAd() []*BidResponse_Ad {
	if m != nil {
		return m.Ad
	}
	return nil
}

func (m *BidResponse) GetDebugString() string {
	if m != nil && m.DebugString != nil {
		return *m.DebugString
	}
	return ""
}

func (m *BidResponse) GetProcessingTimeMs() int32 {
	if m != nil && m.ProcessingTimeMs != nil {
		return *m.ProcessingTimeMs
	}
	return 0
}

func (m *BidResponse) GetDEPRECATEDProtocolVersion() int32 {
	if m != nil && m.DEPRECATEDProtocolVersion != nil {
		return *m.DEPRECATEDProtocolVersion
	}
	return 0
}

type BidResponse_Ad struct {
	// A unique identifier chosen by you for the creative in this response.
	// This must always be set, must be limited to at most 64 bytes, and must be
	// a valid UTF8 string. Every buyer_creative_id you use must always be
	// associated with the same creative. This field is used to communicate
	// approval statuses when issues are found. Do not specify the same id for
	// different creatives, or all creatives will be disapproved if a problem
	// with a single creative is found. Do not specify different ids for the
	// same creative in different responses or no creatives will be served since
	// approval status is assigned on a per-id basis.
	BuyerCreativeId *string `protobuf:"bytes,10,opt,name=buyer_creative_id" json:"buyer_creative_id,omitempty"`
	// The HTML snippet that will be placed on the web page to display the ad.
	// Please use BidResponse.Ad.AdSlot.billing_id to indicate which billing id
	// this snippet is attributed to. Only one of the following should be set:
	// html_snippet, video_url.
	HtmlSnippet *string `protobuf:"bytes,1,opt,name=html_snippet" json:"html_snippet,omitempty"`
	// The URL to fetch a video ad. The URL should return an XML response that
	// conforms to the VAST 2.0 standard. Please use
	// BidResponse.Ad.AdSlot.billing_id to indicate which billing id to
	// attribute this ad to. Only one of the following should be set:
	// html_snippet, video_url. Only set this field if the BidRequest is for an
	// in-video ad (BidRequest.video is present).
	VideoUrl *string                  `protobuf:"bytes,9,opt,name=video_url" json:"video_url,omitempty"`
	NativeAd *BidResponse_Ad_NativeAd `protobuf:"bytes,18,opt,name=native_ad" json:"native_ad,omitempty"`
	// The set of destination URLs for the snippet or native ad. This should
	// include the URLs that the user will go to if they click on the displayed
	// ad, and any URLs that are visible in the rendered ad. It should not
	// include intermediate calls to the adserver that are unrelated to the
	// final landing page. This data is used for post-filtering of
	// publisher-blocked URLs among other things. A BidResponse that returns a
	// snippet or video ad but declares no click_through_url will be discarded.
	// Only set this field if html_snippet or video_url or native_ad are set.
	ClickThroughUrl []string `protobuf:"bytes,4,rep,name=click_through_url" json:"click_through_url,omitempty"`
	// All vendor types for the ads that may be shown from this snippet. You
	// should only declare vendor ids listed in the vendors.txt file in the
	// technical documentation. We will check to ensure that the vendors you
	// declare are in the allowed_vendor_type list sent in the BidRequest for
	// AdX publishers, or in gdn-vendors.txt for GDN publishers.
	VendorType []int32 `protobuf:"varint,5,rep,name=vendor_type" json:"vendor_type,omitempty"`
	// All attributes for the ads that may be shown from this snippet. See
	// buyer-declarable-creative-attributes.txt in the technical documentation
	// for a list of ids. We will check to ensure none of these attributes are
	// in the excluded_attribute list in the BidRequest.
	Attribute []int32 `protobuf:"varint,6,rep,name=attribute" json:"attribute,omitempty"`
	// All sensitive categories for the ads that may be shown from this snippet.
	// See ad-sensitive-categories.txt in the technical documentation for a list
	// of ids. We will check to ensure none of these categories were in the
	// excluded_sensitive_category list in the BidRequest.
	Category []int32 `protobuf:"varint,7,rep,name=category" json:"category,omitempty"`
	// All restricted categories for the ads that may be shown from this
	// snippet. See ad-restricted-categories.txt in the technical documentation
	// for a list of ids. We will check to ensure these categories were listed
	// in the allowed_restricted_category list in the BidRequest. If you are
	// bidding with ads in restricted categories you MUST ALWAYS declare them
	// here.
	RestrictedCategory []int32 `protobuf:"varint,17,rep,name=restricted_category" json:"restricted_category,omitempty"`
	// All names of the ad's advertisers.
	AdvertiserName []string `protobuf:"bytes,11,rep,name=advertiser_name" json:"advertiser_name,omitempty"`
	// The width and the height in pixels of the ad. Setting these is optional.
	// However, these must be set if the bid BidRequest.AdSlot has more than one
	// width and height or if BidRequest.Mobile.is_interstitial_request is true.
	Width  *int32 `protobuf:"varint,14,opt,name=width" json:"width,omitempty"`
	Height *int32 `protobuf:"varint,15,opt,name=height" json:"height,omitempty"`
	// The Agency associated with this ad. See agencies.txt file in the
	// technical documentation for a list of ids. If this ad has no associated
	// agency then the value NONE (agency_id: 1) should be used rather than
	// leaving this field unset.
	AgencyId *int64                   `protobuf:"varint,16,opt,name=agency_id" json:"agency_id,omitempty"`
	Adslot   []*BidResponse_Ad_AdSlot `protobuf:"bytes,3,rep,name=adslot" json:"adslot,omitempty"`
	// The URLs to call when the impression is rendered.  This is supported for
	// all inventory types and all formats except for VAST video.
	ImpressionTrackingUrl []string `protobuf:"bytes,19,rep,name=impression_tracking_url" json:"impression_tracking_url,omitempty"`
	// These are deprecated. Please do not set.
	DEPRECATEDCreativeId        *int64                              `protobuf:"varint,8,opt,name=DEPRECATED_creative_id" json:"DEPRECATED_creative_id,omitempty"`
	DEPRECATEDClickThroughUrl   *string                             `protobuf:"bytes,2,opt,name=DEPRECATED_click_through_url" json:"DEPRECATED_click_through_url,omitempty"`
	DEPRECATEDSnippetTemplate   *string                             `protobuf:"bytes,12,opt,name=DEPRECATED_snippet_template" json:"DEPRECATED_snippet_template,omitempty"`
	DEPRECATEDTemplateParameter []*BidResponse_Ad_TemplateParameter `protobuf:"bytes,13,rep,name=DEPRECATED_template_parameter" json:"DEPRECATED_template_parameter,omitempty"`
	XXX_unrecognized            []byte                              `json:"-"`
}

func (m *BidResponse_Ad) Reset()                    { *m = BidResponse_Ad{} }
func (m *BidResponse_Ad) String() string            { return proto.CompactTextString(m) }
func (*BidResponse_Ad) ProtoMessage()               {}
func (*BidResponse_Ad) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *BidResponse_Ad) GetBuyerCreativeId() string {
	if m != nil && m.BuyerCreativeId != nil {
		return *m.BuyerCreativeId
	}
	return ""
}

func (m *BidResponse_Ad) GetHtmlSnippet() string {
	if m != nil && m.HtmlSnippet != nil {
		return *m.HtmlSnippet
	}
	return ""
}

func (m *BidResponse_Ad) GetVideoUrl() string {
	if m != nil && m.VideoUrl != nil {
		return *m.VideoUrl
	}
	return ""
}

func (m *BidResponse_Ad) GetNativeAd() *BidResponse_Ad_NativeAd {
	if m != nil {
		return m.NativeAd
	}
	return nil
}

func (m *BidResponse_Ad) GetClickThroughUrl() []string {
	if m != nil {
		return m.ClickThroughUrl
	}
	return nil
}

func (m *BidResponse_Ad) GetVendorType() []int32 {
	if m != nil {
		return m.VendorType
	}
	return nil
}

func (m *BidResponse_Ad) GetAttribute() []int32 {
	if m != nil {
		return m.Attribute
	}
	return nil
}

func (m *BidResponse_Ad) GetCategory() []int32 {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *BidResponse_Ad) GetRestrictedCategory() []int32 {
	if m != nil {
		return m.RestrictedCategory
	}
	return nil
}

func (m *BidResponse_Ad) GetAdvertiserName() []string {
	if m != nil {
		return m.AdvertiserName
	}
	return nil
}

func (m *BidResponse_Ad) GetWidth() int32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *BidResponse_Ad) GetHeight() int32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

func (m *BidResponse_Ad) GetAgencyId() int64 {
	if m != nil && m.AgencyId != nil {
		return *m.AgencyId
	}
	return 0
}

func (m *BidResponse_Ad) GetAdslot() []*BidResponse_Ad_AdSlot {
	if m != nil {
		return m.Adslot
	}
	return nil
}

func (m *BidResponse_Ad) GetImpressionTrackingUrl() []string {
	if m != nil {
		return m.ImpressionTrackingUrl
	}
	return nil
}

func (m *BidResponse_Ad) GetDEPRECATEDCreativeId() int64 {
	if m != nil && m.DEPRECATEDCreativeId != nil {
		return *m.DEPRECATEDCreativeId
	}
	return 0
}

func (m *BidResponse_Ad) GetDEPRECATEDClickThroughUrl() string {
	if m != nil && m.DEPRECATEDClickThroughUrl != nil {
		return *m.DEPRECATEDClickThroughUrl
	}
	return ""
}

func (m *BidResponse_Ad) GetDEPRECATEDSnippetTemplate() string {
	if m != nil && m.DEPRECATEDSnippetTemplate != nil {
		return *m.DEPRECATEDSnippetTemplate
	}
	return ""
}

func (m *BidResponse_Ad) GetDEPRECATEDTemplateParameter() []*BidResponse_Ad_TemplateParameter {
	if m != nil {
		return m.DEPRECATEDTemplateParameter
	}
	return nil
}

// The content of a native ad. Native ads consist of multiple building
// blocks, which are rendered by the publisher. Only one of the following
// should be set: html_snippet, video_url, or native_ad.
// Only set this field if the BidRequest is for a native ad
// (BidRequest.adslot.native is present).
//
type BidResponse_Ad_NativeAd struct {
	// A short title for the ad.
	Headline *string `protobuf:"bytes,1,opt,name=headline" json:"headline,omitempty"`
	// A long description of the ad.
	Body *string `protobuf:"bytes,2,opt,name=body" json:"body,omitempty"`
	// A label for the button that the user is supposed to click
	CallToAction *string `protobuf:"bytes,3,opt,name=call_to_action" json:"call_to_action,omitempty"`
	// The name of the advertiser or sponsor, to be displayed in the ad
	// creative.
	Advertiser *string `protobuf:"bytes,4,opt,name=advertiser" json:"advertiser,omitempty"`
	// A large image.
	Image *BidResponse_Ad_NativeAd_Image `protobuf:"bytes,5,opt,name=image" json:"image,omitempty"`
	// A smaller image, for the advertiser's logo.
	Logo *BidResponse_Ad_NativeAd_Image `protobuf:"bytes,6,opt,name=logo" json:"logo,omitempty"`
	// The app icon, for app download ads.
	AppIcon *BidResponse_Ad_NativeAd_Image `protobuf:"bytes,7,opt,name=app_icon" json:"app_icon,omitempty"`
	// The app rating in the app store. Must be in the range [0-5].
	StarRating *float64 `protobuf:"fixed64,8,opt,name=star_rating" json:"star_rating,omitempty"`
	// The URL to use for click tracking. The SDK pings click tracking url on
	// a background thread. When resolving the url, HTTP 30x redirects are
	// followed. The SDK ignores the contents of the response.
	ClickTrackingUrl *string `protobuf:"bytes,11,opt,name=click_tracking_url" json:"click_tracking_url,omitempty"`
	// The price of the promoted app including the currency info.
	Price *string `protobuf:"bytes,10,opt,name=price" json:"price,omitempty"`
	// The URL to the app store to purchase/download the promoted app.
	Store *string `protobuf:"bytes,12,opt,name=store" json:"store,omitempty"`
	// This field is deprecated.  Please use
	// BidResponse.Ad.impression_tracking_url instead.
	DEPRECATEDImpressionTrackingUrl []string `protobuf:"bytes,9,rep,name=DEPRECATED_impression_tracking_url" json:"DEPRECATED_impression_tracking_url,omitempty"`
	XXX_unrecognized                []byte   `json:"-"`
}

func (m *BidResponse_Ad_NativeAd) Reset()                    { *m = BidResponse_Ad_NativeAd{} }
func (m *BidResponse_Ad_NativeAd) String() string            { return proto.CompactTextString(m) }
func (*BidResponse_Ad_NativeAd) ProtoMessage()               {}
func (*BidResponse_Ad_NativeAd) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0, 0} }

func (m *BidResponse_Ad_NativeAd) GetHeadline() string {
	if m != nil && m.Headline != nil {
		return *m.Headline
	}
	return ""
}

func (m *BidResponse_Ad_NativeAd) GetBody() string {
	if m != nil && m.Body != nil {
		return *m.Body
	}
	return ""
}

func (m *BidResponse_Ad_NativeAd) GetCallToAction() string {
	if m != nil && m.CallToAction != nil {
		return *m.CallToAction
	}
	return ""
}

func (m *BidResponse_Ad_NativeAd) GetAdvertiser() string {
	if m != nil && m.Advertiser != nil {
		return *m.Advertiser
	}
	return ""
}

func (m *BidResponse_Ad_NativeAd) GetImage() *BidResponse_Ad_NativeAd_Image {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *BidResponse_Ad_NativeAd) GetLogo() *BidResponse_Ad_NativeAd_Image {
	if m != nil {
		return m.Logo
	}
	return nil
}

func (m *BidResponse_Ad_NativeAd) GetAppIcon() *BidResponse_Ad_NativeAd_Image {
	if m != nil {
		return m.AppIcon
	}
	return nil
}

func (m *BidResponse_Ad_NativeAd) GetStarRating() float64 {
	if m != nil && m.StarRating != nil {
		return *m.StarRating
	}
	return 0
}

func (m *BidResponse_Ad_NativeAd) GetClickTrackingUrl() string {
	if m != nil && m.ClickTrackingUrl != nil {
		return *m.ClickTrackingUrl
	}
	return ""
}

func (m *BidResponse_Ad_NativeAd) GetPrice() string {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return ""
}

func (m *BidResponse_Ad_NativeAd) GetStore() string {
	if m != nil && m.Store != nil {
		return *m.Store
	}
	return ""
}

func (m *BidResponse_Ad_NativeAd) GetDEPRECATEDImpressionTrackingUrl() []string {
	if m != nil {
		return m.DEPRECATEDImpressionTrackingUrl
	}
	return nil
}

type BidResponse_Ad_NativeAd_Image struct {
	Url *string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	// Image width and height are specified in pixels. You may provide a
	// larger image than was requested, so long as the aspect ratio is
	// preserved.
	Width            *int32 `protobuf:"varint,2,opt,name=width" json:"width,omitempty"`
	Height           *int32 `protobuf:"varint,3,opt,name=height" json:"height,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BidResponse_Ad_NativeAd_Image) Reset()         { *m = BidResponse_Ad_NativeAd_Image{} }
func (m *BidResponse_Ad_NativeAd_Image) String() string { return proto.CompactTextString(m) }
func (*BidResponse_Ad_NativeAd_Image) ProtoMessage()    {}
func (*BidResponse_Ad_NativeAd_Image) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 0, 0, 0}
}

func (m *BidResponse_Ad_NativeAd_Image) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *BidResponse_Ad_NativeAd_Image) GetWidth() int32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *BidResponse_Ad_NativeAd_Image) GetHeight() int32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

type BidResponse_Ad_AdSlot struct {
	// The slot id from the BidRequest that the ad may appear in.
	Id *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	// The maximum CPM you want to be charged if you win the auction for this
	// ad slot, expressed in micros of your account currency. For example, to
	// bid a CPM of 1.29 USD, set max_cpm_micros = 1290000. Winning bids are
	// rounded up to billable units. For example, in USD, bids are rounded up
	// to the next multiple of 10,000 micros (one cent).
	MaxCpmMicros *int64 `protobuf:"varint,2,req,name=max_cpm_micros" json:"max_cpm_micros,omitempty"`
	// The minimum CPM you want to be charged if you win the auction for this
	// ad slot. This may represent a second price if you choose max_cpm as the
	// highest of several bids, or some form of reserve price if you wish to
	// override the reserve price set by the publisher. The bid must be less
	// than or equal to max_cpm_micros or it will be ignored. This field is
	// optional and does not need to be set.
	MinCpmMicros *int64 `protobuf:"varint,3,opt,name=min_cpm_micros" json:"min_cpm_micros,omitempty"`
	// Billing id to attribute this impression to. The value must be in the
	// set of billing ids for this slot that were sent in the
	// BidRequest.AdSlot.matching_ad_data.billing_id. This must always be set
	// if the BidRequest has more than one
	// BidRequest.AdSlot.matching_ad_data.billing_id.
	BillingId *int64 `protobuf:"varint,4,opt,name=billing_id" json:"billing_id,omitempty"`
	// The deal id that you want this bid to participate in. Leave unset
	// or set it to "1" if a deal is available but you want to
	// ignore the deal and participate in the open auction.
	DealId           *int64 `protobuf:"varint,5,opt,name=deal_id,def=0" json:"deal_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BidResponse_Ad_AdSlot) Reset()                    { *m = BidResponse_Ad_AdSlot{} }
func (m *BidResponse_Ad_AdSlot) String() string            { return proto.CompactTextString(m) }
func (*BidResponse_Ad_AdSlot) ProtoMessage()               {}
func (*BidResponse_Ad_AdSlot) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0, 1} }

const Default_BidResponse_Ad_AdSlot_DealId int64 = 0

func (m *BidResponse_Ad_AdSlot) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *BidResponse_Ad_AdSlot) GetMaxCpmMicros() int64 {
	if m != nil && m.MaxCpmMicros != nil {
		return *m.MaxCpmMicros
	}
	return 0
}

func (m *BidResponse_Ad_AdSlot) GetMinCpmMicros() int64 {
	if m != nil && m.MinCpmMicros != nil {
		return *m.MinCpmMicros
	}
	return 0
}

func (m *BidResponse_Ad_AdSlot) GetBillingId() int64 {
	if m != nil && m.BillingId != nil {
		return *m.BillingId
	}
	return 0
}

func (m *BidResponse_Ad_AdSlot) GetDealId() int64 {
	if m != nil && m.DealId != nil {
		return *m.DealId
	}
	return Default_BidResponse_Ad_AdSlot_DealId
}

type BidResponse_Ad_TemplateParameter struct {
	ParameterValue        *string `protobuf:"bytes,1,opt,name=parameter_value" json:"parameter_value,omitempty"`
	BlankAdParameterValue *string `protobuf:"bytes,8,opt,name=blank_ad_parameter_value" json:"blank_ad_parameter_value,omitempty"`
	BuyerCreativeId       *string `protobuf:"bytes,2,opt,name=buyer_creative_id" json:"buyer_creative_id,omitempty"`
	ClickThroughUrl       *string `protobuf:"bytes,3,opt,name=click_through_url" json:"click_through_url,omitempty"`
	Left                  *int32  `protobuf:"varint,4,opt,name=left" json:"left,omitempty"`
	Right                 *int32  `protobuf:"varint,5,opt,name=right" json:"right,omitempty"`
	Top                   *int32  `protobuf:"varint,6,opt,name=top" json:"top,omitempty"`
	Bottom                *int32  `protobuf:"varint,7,opt,name=bottom" json:"bottom,omitempty"`
	BackupIndex           *int32  `protobuf:"varint,9,opt,name=backup_index" json:"backup_index,omitempty"`
	XXX_unrecognized      []byte  `json:"-"`
}

func (m *BidResponse_Ad_TemplateParameter) Reset()         { *m = BidResponse_Ad_TemplateParameter{} }
func (m *BidResponse_Ad_TemplateParameter) String() string { return proto.CompactTextString(m) }
func (*BidResponse_Ad_TemplateParameter) ProtoMessage()    {}
func (*BidResponse_Ad_TemplateParameter) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 0, 2}
}

func (m *BidResponse_Ad_TemplateParameter) GetParameterValue() string {
	if m != nil && m.ParameterValue != nil {
		return *m.ParameterValue
	}
	return ""
}

func (m *BidResponse_Ad_TemplateParameter) GetBlankAdParameterValue() string {
	if m != nil && m.BlankAdParameterValue != nil {
		return *m.BlankAdParameterValue
	}
	return ""
}

func (m *BidResponse_Ad_TemplateParameter) GetBuyerCreativeId() string {
	if m != nil && m.BuyerCreativeId != nil {
		return *m.BuyerCreativeId
	}
	return ""
}

func (m *BidResponse_Ad_TemplateParameter) GetClickThroughUrl() string {
	if m != nil && m.ClickThroughUrl != nil {
		return *m.ClickThroughUrl
	}
	return ""
}

func (m *BidResponse_Ad_TemplateParameter) GetLeft() int32 {
	if m != nil && m.Left != nil {
		return *m.Left
	}
	return 0
}

func (m *BidResponse_Ad_TemplateParameter) GetRight() int32 {
	if m != nil && m.Right != nil {
		return *m.Right
	}
	return 0
}

func (m *BidResponse_Ad_TemplateParameter) GetTop() int32 {
	if m != nil && m.Top != nil {
		return *m.Top
	}
	return 0
}

func (m *BidResponse_Ad_TemplateParameter) GetBottom() int32 {
	if m != nil && m.Bottom != nil {
		return *m.Bottom
	}
	return 0
}

func (m *BidResponse_Ad_TemplateParameter) GetBackupIndex() int32 {
	if m != nil && m.BackupIndex != nil {
		return *m.BackupIndex
	}
	return 0
}

func init() {
	proto.RegisterType((*BidRequest)(nil), "BidRequest")
	proto.RegisterType((*BidRequest_Hyperlocal)(nil), "BidRequest.Hyperlocal")
	proto.RegisterType((*BidRequest_Hyperlocal_Point)(nil), "BidRequest.Hyperlocal.Point")
	proto.RegisterType((*BidRequest_HyperlocalSet)(nil), "BidRequest.HyperlocalSet")
	proto.RegisterType((*BidRequest_UserDemographic)(nil), "BidRequest.UserDemographic")
	proto.RegisterType((*BidRequest_UserList)(nil), "BidRequest.UserList")
	proto.RegisterType((*BidRequest_Vertical)(nil), "BidRequest.Vertical")
	proto.RegisterType((*BidRequest_Device)(nil), "BidRequest.Device")
	proto.RegisterType((*BidRequest_Device_OsVersion)(nil), "BidRequest.Device.OsVersion")
	proto.RegisterType((*BidRequest_KeyValue)(nil), "BidRequest.KeyValue")
	proto.RegisterType((*BidRequest_Mobile)(nil), "BidRequest.Mobile")
	proto.RegisterType((*BidRequest_Mobile_DeviceOsVersion)(nil), "BidRequest.Mobile.DeviceOsVersion")
	proto.RegisterType((*BidRequest_Video)(nil), "BidRequest.Video")
	proto.RegisterType((*BidRequest_Video_CompanionSlot)(nil), "BidRequest.Video.CompanionSlot")
	proto.RegisterType((*BidRequest_Video_ContentAttributes)(nil), "BidRequest.Video.ContentAttributes")
	proto.RegisterType((*BidRequest_AdSlot)(nil), "BidRequest.AdSlot")
	proto.RegisterType((*BidRequest_AdSlot_MatchingAdData)(nil), "BidRequest.AdSlot.MatchingAdData")
	proto.RegisterType((*BidRequest_AdSlot_MatchingAdData_BuyerPricingRule)(nil), "BidRequest.AdSlot.MatchingAdData.BuyerPricingRule")
	proto.RegisterType((*BidRequest_AdSlot_MatchingAdData_DirectDeal)(nil), "BidRequest.AdSlot.MatchingAdData.DirectDeal")
	proto.RegisterType((*BidRequest_AdSlot_NativeAdTemplate)(nil), "BidRequest.AdSlot.NativeAdTemplate")
	proto.RegisterType((*BidRequest_AdSlot_AutoRefresh)(nil), "BidRequest.AdSlot.AutoRefresh")
	proto.RegisterType((*BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings)(nil), "BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings")
	proto.RegisterType((*BidRequest_BidResponseFeedback)(nil), "BidRequest.BidResponseFeedback")
	proto.RegisterType((*BidRequest_MatchingNetwork)(nil), "BidRequest.MatchingNetwork")
	proto.RegisterType((*BidResponse)(nil), "BidResponse")
	proto.RegisterType((*BidResponse_Ad)(nil), "BidResponse.Ad")
	proto.RegisterType((*BidResponse_Ad_NativeAd)(nil), "BidResponse.Ad.NativeAd")
	proto.RegisterType((*BidResponse_Ad_NativeAd_Image)(nil), "BidResponse.Ad.NativeAd.Image")
	proto.RegisterType((*BidResponse_Ad_AdSlot)(nil), "BidResponse.Ad.AdSlot")
	proto.RegisterType((*BidResponse_Ad_TemplateParameter)(nil), "BidResponse.Ad.TemplateParameter")
	proto.RegisterEnum("BidRequest_UserDataTreatment", BidRequest_UserDataTreatment_name, BidRequest_UserDataTreatment_value)
	proto.RegisterEnum("BidRequest_PublisherType", BidRequest_PublisherType_name, BidRequest_PublisherType_value)
	proto.RegisterEnum("BidRequest_UserDemographic_Gender", BidRequest_UserDemographic_Gender_name, BidRequest_UserDemographic_Gender_value)
	proto.RegisterEnum("BidRequest_Device_DeviceType", BidRequest_Device_DeviceType_name, BidRequest_Device_DeviceType_value)
	proto.RegisterEnum("BidRequest_Device_ScreenOrientation", BidRequest_Device_ScreenOrientation_name, BidRequest_Device_ScreenOrientation_value)
	proto.RegisterEnum("BidRequest_Mobile_MobileDeviceType", BidRequest_Mobile_MobileDeviceType_name, BidRequest_Mobile_MobileDeviceType_value)
	proto.RegisterEnum("BidRequest_Mobile_ScreenOrientation", BidRequest_Mobile_ScreenOrientation_name, BidRequest_Mobile_ScreenOrientation_value)
	proto.RegisterEnum("BidRequest_Video_Placement", BidRequest_Video_Placement_name, BidRequest_Video_Placement_value)
	proto.RegisterEnum("BidRequest_Video_VideoPlaybackMethod", BidRequest_Video_VideoPlaybackMethod_name, BidRequest_Video_VideoPlaybackMethod_value)
	proto.RegisterEnum("BidRequest_Video_SkippableBidRequestType", BidRequest_Video_SkippableBidRequestType_name, BidRequest_Video_SkippableBidRequestType_value)
	proto.RegisterEnum("BidRequest_Video_VideoFormat", BidRequest_Video_VideoFormat_name, BidRequest_Video_VideoFormat_value)
	proto.RegisterEnum("BidRequest_Video_EndCapSupport", BidRequest_Video_EndCapSupport_name, BidRequest_Video_EndCapSupport_value)
	proto.RegisterEnum("BidRequest_Video_InventoryType", BidRequest_Video_InventoryType_name, BidRequest_Video_InventoryType_value)
	proto.RegisterEnum("BidRequest_Video_CompanionSlot_CreativeFormat", BidRequest_Video_CompanionSlot_CreativeFormat_name, BidRequest_Video_CompanionSlot_CreativeFormat_value)
	proto.RegisterEnum("BidRequest_AdSlot_SlotVisibility", BidRequest_AdSlot_SlotVisibility_name, BidRequest_AdSlot_SlotVisibility_value)
	proto.RegisterEnum("BidRequest_AdSlot_IFramingState", BidRequest_AdSlot_IFramingState_name, BidRequest_AdSlot_IFramingState_value)
	proto.RegisterEnum("BidRequest_AdSlot_IFramingDepth", BidRequest_AdSlot_IFramingDepth_name, BidRequest_AdSlot_IFramingDepth_value)
	proto.RegisterEnum("BidRequest_AdSlot_MediationStatus", BidRequest_AdSlot_MediationStatus_name, BidRequest_AdSlot_MediationStatus_value)
	proto.RegisterEnum("BidRequest_AdSlot_Stickiness", BidRequest_AdSlot_Stickiness_name, BidRequest_AdSlot_Stickiness_value)
	proto.RegisterEnum("BidRequest_AdSlot_Renderer", BidRequest_AdSlot_Renderer_name, BidRequest_AdSlot_Renderer_value)
	proto.RegisterEnum("BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType", BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType_name, BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType_value)
	proto.RegisterEnum("BidRequest_AdSlot_NativeAdTemplate_Fields", BidRequest_AdSlot_NativeAdTemplate_Fields_name, BidRequest_AdSlot_NativeAdTemplate_Fields_value)
	proto.RegisterEnum("BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType", BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType_name, BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType_value)
}

var fileDescriptor0 = []byte{
	// 4579 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x7a, 0x4b, 0x73, 0x1b, 0xd7,
	0x72, 0xbf, 0x01, 0x10, 0x14, 0xd0, 0xe0, 0x03, 0x1c, 0xea, 0x31, 0x02, 0xf5, 0xa0, 0x61, 0x49,
	0x96, 0x65, 0x8b, 0x96, 0x68, 0xfb, 0xff, 0xbf, 0xa6, 0x53, 0x37, 0x06, 0x81, 0x21, 0x09, 0x0b,
	0x04, 0x10, 0x00, 0xa4, 0xaf, 0x92, 0xc5, 0xd4, 0x10, 0x73, 0x48, 0x4e, 0x04, 0x60, 0x90, 0x99,
	0x01, 0x25, 0x7a, 0xe5, 0xe5, 0xad, 0x54, 0x65, 0xe1, 0x4a, 0xa5, 0xf2, 0x0d, 0x52, 0xa9, 0x64,
	0x95, 0xef, 0x91, 0x65, 0xbe, 0x4a, 0xf6, 0xe9, 0xee, 0x33, 0x4f, 0x0c, 0x24, 0x5d, 0x6f, 0x24,
	0xf0, 0x9c, 0x3e, 0xaf, 0xee, 0xd3, 0xbf, 0xfe, 0x75, 0x9f, 0x81, 0x55, 0xc3, 0x7c, 0xf7, 0xfc,
	0xea, 0x0f, 0xbb, 0x3b, 0x53, 0xc7, 0xf6, 0xec, 0xea, 0xbf, 0xb6, 0x00, 0xf6, 0x2d, 0xb3, 0x27,
	0xfe, 0x61, 0x26, 0x5c, 0x4f, 0x01, 0xc8, 0x5a, 0xa6, 0x9a, 0xdd, 0xce, 0x3e, 0x5d, 0xe1, 0xdf,
	0x53, 0x75, 0x69, 0x3b, 0x83, 0xbf, 0xf7, 0x60, 0x73, 0xe6, 0x0a, 0x47, 0x37, 0x0d, 0xcf, 0xd0,
	0x3d, 0x47, 0x18, 0xde, 0x58, 0x4c, 0x3c, 0xf5, 0xe5, 0x76, 0xee, 0xe9, 0xda, 0xee, 0xfd, 0x9d,
	0x68, 0x86, 0x9d, 0x13, 0x14, 0x6b, 0xa0, 0xd4, 0x20, 0x10, 0x52, 0x6e, 0xc3, 0xda, 0x85, 0x6d,
	0x5f, 0x8c, 0x84, 0xce, 0x53, 0xe0, 0xfc, 0xb7, 0x70, 0xce, 0xa2, 0xf2, 0x14, 0xb6, 0x87, 0xf6,
	0xc4, 0xf5, 0x1c, 0xc3, 0x9a, 0x08, 0x13, 0x3b, 0x8d, 0x0b, 0xa1, 0xcf, 0x49, 0x7e, 0xcd, 0x92,
	0x38, 0xc3, 0xd0, 0xb6, 0xdf, 0x58, 0x42, 0xbf, 0x12, 0x8e, 0x6b, 0xd9, 0x13, 0xf5, 0x26, 0xb6,
	0xaf, 0x2a, 0x15, 0x50, 0xfc, 0x76, 0x1a, 0xea, 0x0a, 0x9c, 0xce, 0x74, 0xd5, 0x87, 0xd8, 0x97,
	0x57, 0xee, 0xc2, 0xc6, 0xa5, 0xed, 0x7a, 0x38, 0xf1, 0xd8, 0xf0, 0x86, 0x97, 0xbc, 0x73, 0xf5,
	0x31, 0x1f, 0xe6, 0x4b, 0xf8, 0x2c, 0xbd, 0x70, 0x5a, 0xf8, 0x05, 0x0b, 0xa3, 0x1a, 0x78, 0x33,
	0x28, 0x83, 0x07, 0x5e, 0xe6, 0xfd, 0xdc, 0x81, 0xf5, 0x0b, 0x61, 0xeb, 0x43, 0xc7, 0xf2, 0x84,
	0x63, 0x19, 0xb4, 0xd1, 0xcf, 0x79, 0xd1, 0x4d, 0x28, 0x4d, 0x71, 0x1e, 0x63, 0xa4, 0x0f, 0x6d,
	0x53, 0xa8, 0x9f, 0xb2, 0x34, 0xee, 0x32, 0xd6, 0xa8, 0x4f, 0x1d, 0x71, 0x6e, 0xbd, 0x53, 0xab,
	0xdc, 0xb7, 0x0d, 0xaa, 0x98, 0x0c, 0x9d, 0xeb, 0x29, 0xad, 0x7d, 0x79, 0x3d, 0x15, 0xce, 0xc8,
	0x1e, 0xa2, 0xa4, 0x2b, 0x3c, 0xf5, 0x29, 0xaf, 0xff, 0x12, 0xd6, 0xe6, 0xda, 0xbf, 0xc3, 0xf6,
	0xd2, 0xee, 0xdd, 0xb8, 0xd2, 0x8f, 0x42, 0x89, 0xbe, 0xf0, 0x68, 0x7b, 0x9e, 0x35, 0x16, 0xbf,
	0xd8, 0x13, 0xa1, 0xdb, 0xe7, 0xe7, 0x34, 0xe6, 0xae, 0xaf, 0x93, 0x55, 0x3e, 0x0b, 0x6a, 0xd1,
	0xb3, 0x50, 0x58, 0x7d, 0x80, 0xf6, 0xcb, 0xef, 0x67, 0xcb, 0x19, 0xe5, 0x3b, 0x28, 0x4b, 0x03,
	0x8b, 0xb1, 0x7d, 0xe1, 0x18, 0xd3, 0x4b, 0x6b, 0xa8, 0xee, 0xf2, 0x42, 0x5b, 0x29, 0xeb, 0x46,
	0x22, 0xca, 0xe7, 0x50, 0xe4, 0x61, 0x23, 0xcb, 0xf5, 0xd4, 0x6d, 0x9c, 0xad, 0xb4, 0x7b, 0x73,
	0x5e, 0xbe, 0x85, 0x7d, 0x64, 0x0e, 0x57, 0x8c, 0x46, 0x28, 0x3a, 0x11, 0xde, 0x5b, 0xdb, 0x79,
	0x43, 0x4a, 0xfb, 0x82, 0x77, 0x85, 0x1a, 0x9e, 0x1a, 0x8e, 0x37, 0x91, 0x16, 0xff, 0x16, 0xdb,
	0x96, 0x95, 0x12, 0xe4, 0x66, 0xce, 0x48, 0x2d, 0xb1, 0x92, 0x6e, 0xc2, 0x8a, 0x31, 0xb1, 0x27,
	0xd7, 0x63, 0x7b, 0xe6, 0x92, 0xc8, 0x26, 0xb7, 0xe2, 0x8c, 0xa6, 0xf0, 0xc4, 0x90, 0x34, 0x37,
	0x32, 0x26, 0x17, 0x33, 0xb4, 0x90, 0xba, 0x82, 0x5b, 0x28, 0x2a, 0x5f, 0xc7, 0xba, 0xc2, 0xb3,
	0xae, 0xa6, 0x77, 0x77, 0xea, 0xf7, 0x29, 0x55, 0xb8, 0x1d, 0x0e, 0xc0, 0xab, 0xe1, 0xa1, 0xa9,
	0x71, 0xce, 0x33, 0x31, 0x52, 0x2b, 0xa1, 0x86, 0xaa, 0xb0, 0x6c, 0x8a, 0x2b, 0x6b, 0x28, 0xd4,
	0xff, 0xc7, 0x7a, 0x51, 0xe2, 0x33, 0x35, 0xb8, 0x87, 0xd4, 0xf1, 0x46, 0x5c, 0xeb, 0x57, 0xc6,
	0x68, 0x26, 0xd4, 0x27, 0xe9, 0x05, 0x5f, 0x89, 0xeb, 0x53, 0xea, 0xa3, 0xc9, 0xc6, 0xf6, 0x99,
	0x35, 0x12, 0xea, 0xbd, 0xf4, 0x64, 0xc7, 0xdc, 0x83, 0x77, 0x23, 0x7f, 0x65, 0x99, 0xc2, 0x56,
	0xef, 0xb3, 0xc8, 0x46, 0x62, 0xe7, 0xd4, 0x81, 0xb3, 0x54, 0xa6, 0xb3, 0x33, 0xd4, 0xfd, 0x25,
	0xea, 0x0e, 0xcd, 0xec, 0x59, 0x93, 0x0b, 0x97, 0x6d, 0x41, 0x6a, 0x7a, 0xc6, 0x9a, 0x6c, 0xc2,
	0x5a, 0x24, 0xe3, 0xe1, 0x3d, 0x51, 0xbf, 0xc1, 0xf6, 0xb5, 0xe4, 0xfd, 0xe9, 0x06, 0x12, 0x03,
	0x14, 0xd8, 0xbb, 0x7d, 0xd2, 0x7e, 0xd5, 0xee, 0xfc, 0xdc, 0xd6, 0xbb, 0x27, 0xfb, 0xad, 0x66,
	0xff, 0x48, 0xeb, 0xe9, 0x83, 0xd7, 0x5d, 0x8d, 0x36, 0x6d, 0x98, 0xee, 0xc8, 0xf6, 0xd4, 0x35,
	0x3e, 0x5a, 0x62, 0xd3, 0x35, 0xb3, 0x8f, 0x3d, 0xca, 0x1f, 0xe1, 0xd6, 0x99, 0x65, 0xea, 0x8e,
	0x70, 0xa7, 0xe8, 0x62, 0x42, 0x3f, 0x17, 0xc2, 0x3c, 0x33, 0x86, 0x6f, 0xd4, 0xaf, 0x78, 0xc8,
	0xc3, 0xf8, 0x10, 0xfe, 0x29, 0xe5, 0x0e, 0x7c, 0x31, 0x74, 0xf5, 0x1b, 0x96, 0xab, 0x7b, 0xd8,
	0xad, 0xae, 0xe3, 0x3e, 0x0b, 0x7b, 0xf9, 0x73, 0x63, 0xe4, 0x0a, 0xbf, 0x7d, 0x8a, 0x07, 0x54,
	0x37, 0xe2, 0xed, 0x5f, 0x40, 0x85, 0xda, 0x1d, 0x61, 0x5a, 0x6c, 0x3d, 0xcf, 0xd6, 0xcf, 0x84,
	0x6e, 0x5d, 0x4c, 0x6c, 0x6c, 0x52, 0x9f, 0xc7, 0x45, 0x3f, 0x83, 0xad, 0x86, 0xd6, 0xed, 0x69,
	0xf5, 0xda, 0x40, 0x6b, 0xe8, 0x0c, 0x7f, 0x43, 0x7b, 0x14, 0x42, 0x4a, 0x86, 0x2f, 0xe3, 0x63,
	0xb8, 0x1f, 0x13, 0x1a, 0x8e, 0xac, 0xe1, 0x1b, 0xc4, 0x3b, 0xdc, 0x19, 0xae, 0xac, 0xd3, 0x95,
	0xcc, 0x05, 0x97, 0x2f, 0x2e, 0xc6, 0x20, 0xa4, 0xe6, 0xb1, 0x6b, 0x89, 0xdc, 0x3d, 0xd1, 0x35,
	0x9b, 0x78, 0xce, 0xb5, 0x7a, 0x63, 0xc1, 0x30, 0x47, 0x5c, 0xd0, 0xc2, 0x85, 0x00, 0x53, 0xe2,
	0xc3, 0x2c, 0xef, 0x5a, 0x2d, 0x72, 0x87, 0x0a, 0xe5, 0x58, 0xc7, 0x58, 0x78, 0x8e, 0xad, 0x02,
	0xef, 0x15, 0xc1, 0x23, 0xd6, 0x73, 0x69, 0xa0, 0x01, 0xcd, 0x60, 0x2f, 0x65, 0x06, 0x8f, 0xe7,
	0xf0, 0x38, 0x26, 0x21, 0xde, 0x0d, 0x47, 0x33, 0x93, 0x64, 0xe4, 0xb1, 0x2e, 0x1d, 0x7b, 0x76,
	0x71, 0xc9, 0xa7, 0x52, 0xd8, 0x6f, 0x3e, 0x85, 0xbb, 0x31, 0xf1, 0xa4, 0xbf, 0xaa, 0xb7, 0x79,
	0x37, 0xc9, 0x19, 0x3f, 0x70, 0xfb, 0xee, 0xf0, 0x06, 0x7e, 0x4c, 0xe8, 0x9c, 0xc1, 0x95, 0x14,
	0x19, 0xcc, 0xb9, 0xc5, 0x97, 0x22, 0x81, 0x30, 0xc7, 0xbe, 0x4c, 0x5b, 0x8a, 0xa0, 0x2f, 0x6f,
	0x27, 0x8e, 0x80, 0x40, 0x67, 0x51, 0x58, 0x41, 0x30, 0x34, 0x85, 0x61, 0x8e, 0x10, 0xc2, 0xd5,
	0xcf, 0xe2, 0x66, 0x7e, 0x08, 0x77, 0xe2, 0x87, 0x40, 0x88, 0x0e, 0xf7, 0xf4, 0x88, 0x9c, 0x59,
	0xd9, 0x81, 0x27, 0x31, 0x81, 0x00, 0x1f, 0x74, 0xba, 0x40, 0x68, 0x0e, 0xc3, 0xb9, 0x0e, 0xaf,
	0x84, 0x4a, 0x6a, 0xae, 0x58, 0x00, 0x11, 0xbe, 0xa2, 0x02, 0x6e, 0x0c, 0x6d, 0x07, 0xc1, 0xca,
	0xc5, 0x1b, 0x43, 0xbb, 0xbf, 0xb7, 0x18, 0x88, 0x77, 0xba, 0xb6, 0x35, 0xf1, 0x2a, 0x5f, 0x41,
	0x9e, 0x7f, 0x28, 0x65, 0x28, 0x8c, 0x0c, 0xcf, 0xf2, 0xd0, 0x00, 0x7c, 0xd5, 0xb2, 0xca, 0x06,
	0x14, 0x47, 0xf6, 0xe4, 0x42, 0x36, 0x65, 0xa9, 0xa9, 0x62, 0xc3, 0x6a, 0x12, 0xca, 0x9f, 0x01,
	0x44, 0xe8, 0xef, 0x2f, 0x78, 0x7b, 0xf1, 0x82, 0xca, 0x2e, 0xac, 0x0c, 0x51, 0x31, 0x68, 0x8c,
	0x29, 0xad, 0xc8, 0x53, 0x7e, 0x6c, 0x7b, 0xff, 0x96, 0x81, 0xf5, 0x79, 0x4c, 0xff, 0x01, 0x96,
	0x31, 0xd6, 0x99, 0xc2, 0xe1, 0x7d, 0xae, 0xed, 0x56, 0x3f, 0x10, 0x00, 0x76, 0x0e, 0x59, 0x72,
	0xef, 0x86, 0x0f, 0x19, 0x08, 0xe6, 0x37, 0x28, 0x9a, 0x8e, 0xec, 0xb7, 0xbc, 0x7e, 0x7e, 0x2f,
	0xf3, 0x42, 0xb9, 0x05, 0x05, 0x8e, 0xb0, 0xd6, 0xc5, 0x25, 0xbb, 0x4f, 0x7e, 0x2f, 0xf7, 0xfd,
	0xf7, 0xdf, 0x57, 0xbf, 0x84, 0x65, 0x39, 0x1a, 0xd1, 0x3e, 0x18, 0x5f, 0xfe, 0x44, 0x29, 0xc0,
	0xd2, 0x71, 0xad, 0xa5, 0x21, 0xe2, 0x02, 0x2c, 0x1f, 0x68, 0xfc, 0x3b, 0x5b, 0xf9, 0x12, 0x0a,
	0x61, 0x2c, 0x91, 0x24, 0x85, 0x36, 0x97, 0xa3, 0x88, 0x1b, 0x8f, 0xfd, 0xbc, 0x66, 0xe5, 0x09,
	0x14, 0x42, 0x68, 0x0f, 0x84, 0xb3, 0x68, 0xf9, 0x35, 0x58, 0x7e, 0x2b, 0x70, 0x17, 0x1e, 0x33,
	0x9c, 0x6c, 0xe5, 0xb7, 0x3c, 0x2c, 0xfb, 0xc8, 0xbd, 0x0f, 0x25, 0x89, 0xee, 0x12, 0x23, 0xe5,
	0xc9, 0xef, 0xa7, 0x21, 0xde, 0xff, 0x8f, 0x71, 0x72, 0x2d, 0xc0, 0xc9, 0x86, 0x76, 0xda, 0xac,
	0x6b, 0x64, 0xe2, 0x29, 0xda, 0xf8, 0xdc, 0x76, 0xc6, 0xbc, 0x91, 0xa2, 0xb2, 0x0e, 0xf9, 0x33,
	0xc7, 0x98, 0x98, 0x12, 0x35, 0xf6, 0x3e, 0xa1, 0x86, 0x31, 0x92, 0x80, 0x11, 0xd3, 0x2a, 0x6a,
	0x78, 0x01, 0x60, 0xbb, 0xe1, 0x85, 0xcb, 0xa7, 0x4d, 0xe6, 0x2f, 0xdb, 0x71, 0x4f, 0xa5, 0x0c,
	0x85, 0xcb, 0xa1, 0xe1, 0x38, 0x96, 0x0c, 0x97, 0xcb, 0xac, 0x85, 0x3b, 0xb0, 0xe2, 0x0e, 0x1d,
	0x21, 0x26, 0xfa, 0x5b, 0xcb, 0xf4, 0x2e, 0x19, 0x6d, 0x58, 0xf5, 0x2a, 0xac, 0xfa, 0x1d, 0x97,
	0xf2, 0xe0, 0x85, 0xa0, 0xe7, 0x11, 0xdc, 0xf5, 0x7b, 0xa6, 0xd6, 0x3b, 0x31, 0xd2, 0x1d, 0xbc,
	0x9c, 0xb6, 0x3e, 0xb6, 0x46, 0xe8, 0x2c, 0x8c, 0x3c, 0x2c, 0x75, 0x02, 0x8a, 0x2f, 0x65, 0xe3,
	0x8a, 0xe8, 0x75, 0xe4, 0x22, 0x0c, 0x3f, 0x6b, 0xbb, 0x8f, 0x16, 0x6c, 0xb3, 0xcf, 0xc2, 0x9d,
	0x48, 0x76, 0x6f, 0x33, 0x50, 0x52, 0xa7, 0xd7, 0xd4, 0xda, 0x83, 0xda, 0xa0, 0xd9, 0x69, 0x13,
	0xa6, 0x5d, 0x1a, 0x8e, 0xf9, 0xd6, 0x70, 0x22, 0x4a, 0xc7, 0xb1, 0xbe, 0xf2, 0x07, 0x28, 0x46,
	0x47, 0x5d, 0x45, 0x6d, 0x19, 0x7f, 0x6f, 0x3b, 0x3e, 0x36, 0xd3, 0x9f, 0x16, 0x02, 0xbb, 0xb4,
	0xb2, 0xfc, 0x73, 0x88, 0x68, 0xc8, 0x77, 0xaa, 0xfa, 0x0b, 0x40, 0x64, 0x1b, 0xd4, 0xd2, 0x9c,
	0x75, 0xf0, 0x66, 0x6d, 0xa0, 0x77, 0x35, 0x0f, 0x8f, 0xb4, 0x76, 0x43, 0xef, 0x1e, 0x75, 0xda,
	0xfe, 0x15, 0x1b, 0xd4, 0xf6, 0x5b, 0xda, 0xa0, 0x9c, 0xc5, 0x6b, 0xba, 0xd1, 0xd5, 0x7a, 0xfd,
	0x4e, 0xbb, 0xd6, 0xd2, 0xeb, 0x9d, 0xe3, 0xee, 0xc9, 0x40, 0xeb, 0x95, 0x73, 0x68, 0xd5, 0x95,
	0x7a, 0xa7, 0xdd, 0xd6, 0xea, 0x84, 0x16, 0x83, 0xd3, 0xf2, 0x12, 0xb5, 0x1c, 0xd6, 0x8e, 0x35,
	0x14, 0x6a, 0xf7, 0x3b, 0x78, 0x3b, 0xf3, 0xd5, 0x26, 0x6c, 0xa4, 0x4e, 0x8e, 0x46, 0x59, 0x74,
	0x76, 0xdc, 0xc7, 0x0a, 0x14, 0xba, 0x9d, 0xde, 0xa0, 0x57, 0x6b, 0x0e, 0x70, 0x0b, 0xab, 0x50,
	0x6c, 0xd5, 0xda, 0x8d, 0x7e, 0xbd, 0xd6, 0xa5, 0x8b, 0x8e, 0x77, 0x37, 0x64, 0x09, 0xc8, 0x82,
	0x90, 0x4e, 0xf0, 0xe9, 0x8b, 0x74, 0x5c, 0xc9, 0x2b, 0xf8, 0x6a, 0x55, 0xfe, 0x1d, 0xb7, 0xee,
	0x13, 0x85, 0x5b, 0xb0, 0x8c, 0x31, 0xd0, 0x98, 0x4e, 0xd9, 0xee, 0x21, 0x10, 0xe2, 0x6d, 0xc7,
	0xb6, 0xe0, 0x92, 0x14, 0x95, 0x27, 0x70, 0x07, 0xc5, 0x2c, 0x42, 0x08, 0x17, 0x81, 0xc8, 0x42,
	0xcc, 0x73, 0xa4, 0xf5, 0xd8, 0xa0, 0xe1, 0x38, 0x34, 0x0e, 0x8d, 0x1b, 0x1a, 0x9e, 0xb8, 0xb0,
	0x11, 0x0d, 0x2d, 0xf4, 0xab, 0x12, 0x23, 0xa7, 0x9c, 0x41, 0x12, 0x17, 0xfd, 0xad, 0x38, 0xd3,
	0xed, 0x29, 0x12, 0x4d, 0xeb, 0x17, 0x8c, 0xb4, 0x89, 0xa0, 0x9c, 0x60, 0xb5, 0x86, 0xc9, 0x10,
	0xeb, 0x12, 0xee, 0xe3, 0x5e, 0x6e, 0x72, 0x5c, 0x40, 0x46, 0x3f, 0xd7, 0xbe, 0xc5, 0xed, 0xf7,
	0xe1, 0x56, 0x8c, 0x0f, 0xcb, 0x88, 0x66, 0x99, 0xe7, 0x06, 0xa7, 0x0c, 0x2b, 0xe4, 0xed, 0xf1,
	0xc6, 0x7b, 0xdc, 0xb8, 0x0b, 0xcf, 0xd2, 0x74, 0xfe, 0xbd, 0xeb, 0xdf, 0xe6, 0x31, 0x0b, 0x73,
	0x8f, 0x39, 0xc9, 0xfb, 0x2c, 0xf9, 0x35, 0x7c, 0xfe, 0xa1, 0xd9, 0xe3, 0xdb, 0x91, 0x21, 0x0f,
	0x19, 0xc4, 0x82, 0xec, 0x22, 0x26, 0xf6, 0x80, 0xc5, 0x10, 0x2c, 0x48, 0xcb, 0x13, 0x63, 0x2c,
	0x38, 0xce, 0x14, 0xc9, 0xb1, 0xa9, 0x85, 0x1c, 0x11, 0x59, 0xce, 0x5d, 0x8e, 0x11, 0x5b, 0xb0,
	0x19, 0x8b, 0x55, 0xe1, 0x00, 0x79, 0x23, 0x92, 0x91, 0x6e, 0x68, 0x8f, 0xa7, 0xc6, 0xe4, 0x5a,
	0x0a, 0x48, 0xf8, 0x49, 0x8e, 0x0e, 0xb1, 0x29, 0xb7, 0x68, 0xb4, 0x0f, 0x29, 0x3c, 0x9a, 0xc1,
	0x89, 0xd8, 0xe5, 0x02, 0x81, 0x80, 0xd0, 0xe4, 0x59, 0xa6, 0x9f, 0xa0, 0x4b, 0xfe, 0xcd, 0x88,
	0x03, 0x69, 0x81, 0xa1, 0xe2, 0xb3, 0x34, 0xbd, 0xf5, 0xff, 0x8b, 0xc1, 0x69, 0x18, 0x43, 0x9e,
	0x26, 0x26, 0x5d, 0x80, 0x3f, 0xc5, 0x08, 0xde, 0xe2, 0xdc, 0x48, 0x42, 0xed, 0xca, 0x22, 0xd6,
	0xc4, 0x98, 0xbb, 0xca, 0x3d, 0x35, 0xb8, 0x15, 0xeb, 0x89, 0x81, 0xef, 0x1a, 0x83, 0x6f, 0x75,
	0xc1, 0x56, 0xe5, 0x26, 0x23, 0x5c, 0x9a, 0xa3, 0x18, 0x71, 0xe4, 0x5d, 0x5f, 0xc0, 0xcc, 0x92,
	0x08, 0x5c, 0x66, 0x89, 0xfb, 0x89, 0x5d, 0xc4, 0x00, 0x5d, 0x61, 0x40, 0xdf, 0x85, 0x47, 0xb1,
	0x6e, 0x5f, 0xa1, 0x0b, 0x80, 0x7a, 0x93, 0x35, 0xb1, 0xf4, 0xf2, 0xc5, 0x8b, 0x17, 0x15, 0x1d,
	0x19, 0xe4, 0xdc, 0x46, 0x51, 0x0b, 0xd1, 0x01, 0xf5, 0x38, 0x96, 0xce, 0xf5, 0xc4, 0x60, 0x75,
	0xbe, 0x27, 0x42, 0xd8, 0x3f, 0x42, 0x79, 0xde, 0x68, 0xc9, 0xd0, 0xfd, 0x61, 0x80, 0xad, 0x5e,
	0x2d, 0x42, 0xc9, 0x07, 0x50, 0xe9, 0xd7, 0x7b, 0x9a, 0x96, 0x00, 0x49, 0x3d, 0x9a, 0xf3, 0x21,
	0x6c, 0x2d, 0xe8, 0x8f, 0xe1, 0xe7, 0x36, 0xdc, 0x5b, 0x20, 0x10, 0x87, 0xd4, 0xff, 0x5d, 0x81,
	0xbc, 0x4c, 0x98, 0x6a, 0x50, 0x44, 0x2f, 0x18, 0x0a, 0x2e, 0x5e, 0x94, 0xf9, 0x6a, 0x6e, 0xa5,
	0xd2, 0xaa, 0x9d, 0x6e, 0x20, 0xb2, 0xb7, 0x11, 0x66, 0x42, 0xad, 0x5a, 0x5d, 0x3b, 0xc6, 0xd9,
	0x89, 0xa7, 0x9b, 0x02, 0x2d, 0x6a, 0x4d, 0x69, 0xfb, 0x4c, 0x9e, 0xc1, 0x77, 0x97, 0x4d, 0x04,
	0x47, 0x31, 0x3e, 0x13, 0x26, 0x71, 0x6c, 0x4a, 0xbc, 0x91, 0x7b, 0x72, 0x58, 0x0b, 0x81, 0xb1,
	0x0d, 0xeb, 0xb8, 0xfe, 0x35, 0x65, 0x3a, 0xc4, 0xe4, 0x2f, 0x6d, 0x93, 0x6f, 0xdd, 0xda, 0xee,
	0xe3, 0xf4, 0x2e, 0xf8, 0xdf, 0xae, 0x2f, 0x7d, 0xcc, 0xc2, 0x7b, 0x6b, 0xc7, 0xda, 0xe0, 0xa8,
	0xd3, 0x08, 0xd4, 0x43, 0x99, 0x31, 0xae, 0xc9, 0x74, 0xde, 0x38, 0xc3, 0x64, 0x92, 0x53, 0x26,
	0x72, 0x7b, 0x4e, 0x1c, 0x0d, 0x53, 0x77, 0x3d, 0xcc, 0xac, 0xf1, 0xfe, 0xe0, 0x34, 0xbe, 0xe1,
	0x71, 0xff, 0x63, 0xe3, 0x1d, 0x62, 0x9d, 0x6e, 0xce, 0x1c, 0xe9, 0x4e, 0xd9, 0xb0, 0xc3, 0x9a,
	0x24, 0x3a, 0x98, 0x2c, 0x10, 0x56, 0xcb, 0x11, 0x14, 0x3c, 0x90, 0x5b, 0x4a, 0x17, 0xcb, 0x2b,
	0xa7, 0xa0, 0xf0, 0x32, 0x34, 0xc4, 0x7d, 0x63, 0x4d, 0xa7, 0xbc, 0x85, 0x25, 0x3e, 0xcf, 0x17,
	0xe9, 0xf3, 0xf4, 0x03, 0x91, 0xa8, 0x87, 0xdd, 0x7e, 0xbd, 0xd6, 0x6a, 0x75, 0x7e, 0xd6, 0xfb,
	0xaf, 0x9a, 0xdd, 0x2e, 0xdd, 0x14, 0xca, 0x42, 0xc2, 0xe9, 0xf4, 0xf9, 0xbd, 0xe6, 0x79, 0xe9,
	0xbf, 0x82, 0x5b, 0xc6, 0x08, 0x39, 0x26, 0xe5, 0xf7, 0xbc, 0x05, 0xc2, 0x35, 0xc3, 0x73, 0x31,
	0xd2, 0xa5, 0x0a, 0x52, 0x31, 0x6d, 0x1e, 0xb0, 0x94, 0xf2, 0xff, 0xa9, 0x9c, 0x44, 0x60, 0x49,
	0x06, 0xe4, 0x7c, 0xf6, 0x46, 0x3a, 0x39, 0x95, 0xc3, 0xea, 0x81, 0x1c, 0x27, 0xb7, 0xc7, 0xb0,
	0x8e, 0x84, 0x15, 0xbd, 0x75, 0xaa, 0xbb, 0xb3, 0xe9, 0xd4, 0x76, 0x3c, 0xc6, 0x94, 0xb5, 0x45,
	0x23, 0xb5, 0x89, 0x59, 0x37, 0xa6, 0x7d, 0x29, 0xb6, 0xb7, 0x49, 0x3e, 0x81, 0xd7, 0x51, 0x6f,
	0x77, 0x06, 0xba, 0xd6, 0xa6, 0x73, 0x36, 0x94, 0xbf, 0xa6, 0xf2, 0x95, 0x2c, 0x36, 0x18, 0x9e,
	0xe7, 0x58, 0x67, 0x33, 0xcc, 0x7b, 0x19, 0xdc, 0x4a, 0x49, 0xc4, 0x0c, 0xf6, 0xc2, 0xb2, 0xb5,
	0x50, 0x14, 0xf7, 0x13, 0xcf, 0xd7, 0xac, 0xc9, 0x15, 0x76, 0x53, 0xc4, 0x66, 0xe4, 0xcd, 0xbd,
	0x6f, 0x67, 0xcd, 0x40, 0x8e, 0xd5, 0x5f, 0xfc, 0x59, 0xdb, 0xd7, 0x4f, 0x9b, 0x0d, 0xad, 0x53,
	0xf9, 0xef, 0x0c, 0xac, 0x26, 0x0f, 0xac, 0xc0, 0xb2, 0x8f, 0x5a, 0x99, 0xb0, 0x0e, 0xb2, 0x01,
	0x79, 0x09, 0x75, 0xd9, 0xb0, 0xe9, 0x10, 0xd6, 0x87, 0x54, 0xee, 0xb3, 0xae, 0x84, 0x6f, 0x09,
	0x5c, 0x9d, 0x0c, 0xb1, 0xf3, 0x11, 0x8d, 0xee, 0xd4, 0xfd, 0x61, 0xd2, 0x32, 0xd5, 0x57, 0xb0,
	0x96, 0x6c, 0x21, 0x1e, 0xd7, 0x3c, 0xae, 0x1d, 0x22, 0xd9, 0xea, 0x69, 0xe8, 0xd9, 0xa7, 0xc4,
	0xe3, 0xb0, 0xed, 0xa0, 0x55, 0xeb, 0x1f, 0x45, 0x6d, 0x19, 0x86, 0x9e, 0xc1, 0x71, 0x2b, 0x6a,
	0xca, 0x56, 0xda, 0xb0, 0x91, 0x56, 0x19, 0xb2, 0x28, 0xe4, 0x3e, 0xa3, 0x20, 0x84, 0x22, 0xd8,
	0x05, 0x57, 0x2b, 0x99, 0x43, 0x50, 0x7c, 0x46, 0xee, 0x85, 0x29, 0x28, 0xb6, 0xd0, 0x61, 0x8a,
	0xd5, 0x7d, 0x28, 0x86, 0xc8, 0x40, 0x64, 0x31, 0x85, 0x0d, 0x92, 0xda, 0x35, 0xdb, 0xfd, 0x01,
	0x6e, 0xe2, 0x18, 0x37, 0x85, 0x44, 0xb1, 0xd9, 0x46, 0x16, 0xd9, 0x1f, 0x34, 0x07, 0xcd, 0x5a,
	0x0b, 0x21, 0x70, 0x0c, 0x9b, 0x0b, 0xfc, 0x9a, 0x4e, 0x94, 0xf4, 0x6c, 0x9c, 0xea, 0x36, 0x28,
	0xb5, 0x93, 0x41, 0x87, 0xa6, 0x7f, 0xad, 0xf7, 0x3b, 0x27, 0x78, 0x81, 0x90, 0x3d, 0x66, 0x88,
	0x56, 0xa6, 0xda, 0x0f, 0x0e, 0xca, 0x94, 0x4f, 0xae, 0xd6, 0x5b, 0xcd, 0xfa, 0x2b, 0xdd, 0xef,
	0x2c, 0xe7, 0xaa, 0x7f, 0x0b, 0x77, 0xde, 0xe3, 0x76, 0x48, 0xa5, 0xe6, 0x1d, 0x0f, 0xd7, 0xc4,
	0x53, 0xf5, 0xb4, 0xbf, 0x39, 0x69, 0xf6, 0xb4, 0x58, 0x73, 0x86, 0x64, 0xf7, 0x5b, 0x1d, 0x9c,
	0x39, 0x6a, 0xcc, 0x56, 0x5f, 0x43, 0x29, 0xee, 0x54, 0x48, 0x63, 0xf9, 0x16, 0xe9, 0x07, 0xad,
	0x53, 0x9c, 0x29, 0xfc, 0xf3, 0xb8, 0xfb, 0xad, 0x24, 0xb9, 0xaf, 0x07, 0xfa, 0x51, 0xa7, 0x8f,
	0x17, 0x15, 0xb7, 0xba, 0x8e, 0x63, 0xbb, 0xb5, 0x66, 0x43, 0x67, 0x3b, 0x22, 0xc9, 0x46, 0xbd,
	0xc9, 0x86, 0x9f, 0xfa, 0xe5, 0xa5, 0xea, 0x1b, 0x58, 0x4d, 0xb8, 0x0f, 0x9d, 0x79, 0x81, 0x03,
	0xe1, 0x32, 0x37, 0xa1, 0x1c, 0x74, 0x74, 0xba, 0x04, 0xfc, 0xa8, 0xe5, 0x0c, 0x1d, 0x23, 0x68,
	0x3d, 0xe8, 0xf4, 0xf6, 0x9b, 0x8d, 0x86, 0xd6, 0xc6, 0x55, 0x63, 0xc2, 0xfe, 0x29, 0x1b, 0xa8,
	0xa3, 0x3f, 0xc1, 0x6a, 0xc2, 0x23, 0x68, 0xaf, 0xa1, 0x4f, 0xe0, 0x12, 0x45, 0xc8, 0x13, 0xdb,
	0xef, 0x4b, 0xd5, 0x1f, 0x77, 0xf6, 0x9b, 0x2d, 0x4d, 0x4f, 0x9a, 0x95, 0x66, 0xf6, 0x3b, 0x6a,
	0xdd, 0xae, 0x3f, 0x32, 0x57, 0xf9, 0xcf, 0x0a, 0x2c, 0xfb, 0x65, 0xb1, 0x78, 0x16, 0x4a, 0xe5,
	0x4c, 0x53, 0x3f, 0xc3, 0x34, 0xfc, 0x8d, 0x4e, 0xf4, 0x7e, 0x2d, 0x28, 0x1b, 0x21, 0x56, 0x5f,
	0x08, 0x8f, 0x61, 0x6f, 0x78, 0x69, 0x4c, 0x26, 0x82, 0x42, 0x4b, 0x4e, 0x52, 0xff, 0x98, 0xcb,
	0x11, 0xb1, 0xf7, 0xbd, 0x32, 0xc7, 0x7f, 0x3f, 0x00, 0x25, 0x2c, 0xed, 0x84, 0x40, 0x82, 0x40,
	0x1c, 0xb8, 0xe7, 0x43, 0xd8, 0x0c, 0xd1, 0x12, 0xf1, 0xcb, 0xf6, 0xeb, 0x80, 0xcb, 0xa1, 0xc0,
	0xe7, 0xb0, 0x15, 0x4e, 0xe0, 0x8a, 0x09, 0xc6, 0x2d, 0xf2, 0xe4, 0x20, 0x01, 0x60, 0x74, 0x0c,
	0x05, 0x83, 0x99, 0x1c, 0xbc, 0x48, 0x8e, 0xac, 0xb9, 0x85, 0x82, 0xe5, 0x50, 0xf0, 0x25, 0x3c,
	0xfe, 0x80, 0x20, 0x81, 0x04, 0x55, 0x6f, 0x46, 0x2e, 0xd2, 0xf1, 0x60, 0xc8, 0x63, 0xb8, 0x1b,
	0x6e, 0x62, 0xea, 0xd8, 0xe6, 0x6c, 0xe8, 0x45, 0x33, 0xaf, 0x86, 0x62, 0x3f, 0x40, 0x39, 0x2c,
	0x23, 0x51, 0x60, 0xa0, 0x4a, 0x7d, 0x91, 0xe1, 0xfb, 0xd3, 0x74, 0x39, 0x32, 0xac, 0x26, 0xd5,
	0x4c, 0x7a, 0x93, 0xf8, 0x48, 0xc1, 0x74, 0x1d, 0xa7, 0x59, 0x56, 0x8e, 0x60, 0x9d, 0x62, 0x02,
	0x06, 0x16, 0xd7, 0x42, 0xb2, 0x43, 0x85, 0xb8, 0x15, 0x86, 0xd2, 0x45, 0xf3, 0xd3, 0x3f, 0xa7,
	0xa1, 0xe0, 0xde, 0x4a, 0xbb, 0x83, 0xe9, 0xe6, 0x00, 0x73, 0x45, 0xca, 0x72, 0xef, 0x40, 0xe9,
	0xca, 0x12, 0x6f, 0x0d, 0x7f, 0x96, 0x5b, 0xcc, 0xd5, 0xb2, 0xcf, 0x5f, 0x92, 0xc1, 0x92, 0x25,
	0x38, 0x44, 0x20, 0x21, 0x19, 0x3f, 0xf7, 0xb7, 0x61, 0xcd, 0x3a, 0x77, 0x8c, 0x31, 0x9d, 0x11,
	0x23, 0x38, 0xf6, 0x6d, 0xf2, 0x0e, 0xb6, 0x17, 0xec, 0xa0, 0x79, 0x20, 0x05, 0xfb, 0x24, 0xb7,
	0x77, 0x33, 0x00, 0xa5, 0xe6, 0x41, 0x8f, 0x52, 0xd4, 0x3e, 0xd2, 0x21, 0x2d, 0x31, 0x9f, 0x29,
	0xa6, 0x78, 0x91, 0x6e, 0x7e, 0x74, 0xbe, 0x06, 0xc9, 0xa5, 0xe6, 0xc3, 0x70, 0x33, 0x38, 0xa2,
	0xc0, 0x35, 0x91, 0x68, 0x8f, 0x16, 0xf0, 0xc4, 0x98, 0x32, 0x0b, 0xaa, 0x2b, 0xe7, 0xe6, 0x03,
	0x97, 0x3f, 0x67, 0x9b, 0x85, 0x6b, 0xe6, 0xc0, 0x17, 0x55, 0x34, 0x34, 0xa2, 0x30, 0x2d, 0x1f,
	0x77, 0x71, 0xe7, 0x33, 0x97, 0x0b, 0xff, 0x73, 0xc5, 0xa6, 0xc0, 0x88, 0x81, 0x68, 0x9f, 0x25,
	0xa3, 0x44, 0xe1, 0x5b, 0xf4, 0xa4, 0x99, 0x67, 0xe3, 0x15, 0x3b, 0xc7, 0x5b, 0x76, 0xc9, 0x09,
	0x58, 0x69, 0xf7, 0xc1, 0x82, 0x29, 0x6a, 0x28, 0xd6, 0x93, 0x52, 0xb8, 0x38, 0x60, 0xfe, 0x4b,
	0x15, 0x5d, 0xe1, 0xba, 0x9c, 0x7b, 0xcd, 0x31, 0x86, 0xc0, 0xb6, 0xa1, 0xd0, 0x9e, 0x12, 0xa8,
	0x01, 0x5d, 0xbe, 0xfe, 0xaa, 0xd9, 0xd6, 0xfa, 0x7d, 0x54, 0x42, 0xc1, 0xe1, 0xf2, 0x95, 0x70,
	0xd4, 0x4a, 0x9a, 0x4a, 0xfa, 0x93, 0xf4, 0x7c, 0x91, 0xbd, 0x72, 0x30, 0x45, 0x0f, 0x31, 0x48,
	0xeb, 0x69, 0x3d, 0xe5, 0x11, 0xdc, 0x8b, 0xe7, 0x76, 0xbe, 0xbb, 0x44, 0x0e, 0x9c, 0x67, 0xe7,
	0xfe, 0x8b, 0x0b, 0xae, 0x94, 0xa2, 0xff, 0x8e, 0x8a, 0x6f, 0x81, 0x90, 0xa5, 0xf2, 0x8f, 0xcb,
	0x18, 0x79, 0x92, 0x3e, 0x72, 0x1b, 0xe0, 0x8c, 0x92, 0x0b, 0x99, 0x04, 0x13, 0xe2, 0xe4, 0xd0,
	0xf1, 0x3e, 0x21, 0x80, 0xc2, 0x7b, 0x61, 0x8d, 0x67, 0x63, 0x7d, 0x38, 0x1d, 0xcb, 0xc4, 0xc0,
	0x65, 0x3e, 0x96, 0x43, 0x9f, 0x59, 0x99, 0xa2, 0x8f, 0xd3, 0x18, 0x67, 0x86, 0xc1, 0x55, 0xf2,
	0xa9, 0xdd, 0x8f, 0x3a, 0xe4, 0xce, 0xfe, 0xec, 0x5a, 0x38, 0x5d, 0x39, 0xb4, 0x87, 0x23, 0x91,
	0xa1, 0x97, 0x4c, 0xcb, 0x11, 0x43, 0x8f, 0xf1, 0x81, 0x31, 0xaa, 0xb4, 0xfb, 0xd5, 0xc7, 0x27,
	0x6a, 0xf0, 0xa0, 0x06, 0x8e, 0x41, 0xef, 0xba, 0x9d, 0x48, 0xad, 0x90, 0x6f, 0x58, 0x17, 0x13,
	0x3d, 0x2c, 0x19, 0x3e, 0x4d, 0x54, 0x94, 0xa7, 0xa8, 0xcb, 0x33, 0xda, 0x85, 0x1e, 0x3b, 0x1d,
	0x93, 0xa7, 0xc2, 0xdc, 0x8b, 0xc1, 0x39, 0xa6, 0x5f, 0x66, 0xfc, 0xec, 0x44, 0x75, 0x73, 0x95,
	0xff, 0xca, 0x40, 0x39, 0x75, 0x8c, 0x7b, 0x70, 0xd3, 0x9a, 0x04, 0x90, 0xec, 0x97, 0x15, 0x82,
	0x92, 0x71, 0x8e, 0x7a, 0x23, 0xc0, 0x8e, 0xf5, 0xb2, 0xb2, 0xe9, 0x91, 0x20, 0x1a, 0x7b, 0x21,
	0x26, 0x43, 0x4b, 0x48, 0x0a, 0xc2, 0x5d, 0xd1, 0xc0, 0xa0, 0x6b, 0x89, 0xbb, 0xd6, 0xe1, 0x06,
	0x87, 0x14, 0x61, 0xb2, 0x4d, 0x0a, 0xef, 0xb1, 0x17, 0xd7, 0x0b, 0x2b, 0xff, 0x9c, 0x05, 0x88,
	0x69, 0x0c, 0x19, 0x7e, 0x4c, 0xe9, 0x91, 0xa6, 0x90, 0x1d, 0xa5, 0x0e, 0x9d, 0xe5, 0x9e, 0xbf,
	0x83, 0x22, 0x8b, 0xc6, 0x98, 0xe6, 0x77, 0xbf, 0xc7, 0x48, 0x3b, 0xf4, 0x0f, 0xf3, 0xcf, 0x8d,
	0xa8, 0x4c, 0x57, 0x6b, 0xc9, 0x77, 0xa6, 0x67, 0xb0, 0x15, 0xdd, 0x73, 0x3e, 0x94, 0xab, 0xdb,
	0xa8, 0x25, 0xc7, 0xc2, 0xcc, 0x6a, 0xc2, 0x6a, 0x0f, 0x32, 0xaa, 0xea, 0x4f, 0x50, 0x08, 0xa6,
	0x8a, 0x73, 0xb2, 0x70, 0x32, 0x49, 0x17, 0xd1, 0x86, 0x07, 0x5a, 0x0f, 0xe3, 0x3d, 0x77, 0x48,
	0x46, 0xd3, 0xed, 0x35, 0x4f, 0xd1, 0xae, 0x7a, 0xed, 0x84, 0xd1, 0x1a, 0x09, 0xe3, 0x7f, 0x2c,
	0x41, 0x39, 0x05, 0x55, 0x98, 0x16, 0x51, 0x95, 0x0c, 0x77, 0x6e, 0xe2, 0x0d, 0x10, 0x23, 0xd3,
	0xf5, 0x95, 0x83, 0xfa, 0xc5, 0xd3, 0xd8, 0xe3, 0x31, 0x79, 0x78, 0xd8, 0x27, 0xd5, 0x83, 0xf9,
	0xff, 0xa5, 0xff, 0x38, 0xc1, 0x19, 0x8c, 0x6b, 0x9c, 0x0b, 0x7d, 0x24, 0x26, 0x17, 0x9e, 0x5f,
	0x01, 0xa7, 0x2b, 0x70, 0x66, 0x9b, 0xd7, 0xa9, 0xde, 0x25, 0xee, 0x7d, 0x02, 0x0f, 0x86, 0x08,
	0x08, 0xf4, 0x9a, 0x65, 0xf0, 0xab, 0x44, 0x4a, 0x4e, 0xe6, 0x41, 0x18, 0xcf, 0xa2, 0xfb, 0x93,
	0x92, 0x59, 0x0e, 0x2a, 0x0d, 0x2e, 0x72, 0x9b, 0xf4, 0x46, 0xd6, 0x82, 0x6e, 0x72, 0xdd, 0x74,
	0xf7, 0x7a, 0xf0, 0xa2, 0x6d, 0x8d, 0xa9, 0x82, 0x15, 0x2b, 0x2c, 0x73, 0xda, 0xc9, 0x8d, 0xf1,
	0xa2, 0x32, 0xd5, 0xaf, 0x46, 0xf6, 0x85, 0xed, 0x4b, 0x16, 0x83, 0xe1, 0xdc, 0xe6, 0x0b, 0x42,
	0x90, 0x50, 0x72, 0x61, 0x12, 0xe9, 0xb6, 0x2f, 0x5c, 0x0a, 0x32, 0xd0, 0xb0, 0xdd, 0x1f, 0xc0,
	0x99, 0x66, 0xf5, 0xb7, 0x0c, 0x2c, 0x1f, 0xb0, 0x7e, 0x89, 0x28, 0x1e, 0x69, 0xb5, 0x46, 0xab,
	0xc9, 0xd5, 0x85, 0x02, 0x2c, 0xed, 0x77, 0x1a, 0xaf, 0x91, 0x81, 0xa1, 0x91, 0xeb, 0xc8, 0x67,
	0x89, 0xfb, 0xd6, 0xa4, 0x3d, 0x97, 0x90, 0x27, 0x41, 0xad, 0x71, 0xaa, 0xf5, 0x06, 0xcd, 0xbe,
	0xd6, 0x2b, 0x17, 0x88, 0xc9, 0x71, 0x2e, 0x51, 0x2e, 0xd3, 0xc0, 0x56, 0xe7, 0xb0, 0x53, 0xde,
	0xa6, 0x09, 0x89, 0xb3, 0x35, 0xeb, 0x38, 0xe4, 0x47, 0x64, 0xec, 0x25, 0x0c, 0x99, 0x3d, 0xbd,
	0x87, 0x49, 0x44, 0xfb, 0xb0, 0xfc, 0x2b, 0x15, 0x30, 0xf2, 0x78, 0x53, 0xea, 0x5a, 0xf9, 0xd7,
	0x2c, 0xfd, 0xee, 0x0f, 0x3a, 0x3d, 0xfc, 0xbd, 0x54, 0xf9, 0x35, 0x07, 0xa5, 0x78, 0x54, 0x69,
	0x41, 0xd9, 0x0f, 0x43, 0x21, 0x34, 0xfb, 0xef, 0x35, 0xbb, 0x1f, 0x8e, 0x47, 0xf1, 0xdf, 0x7d,
	0x7f, 0x24, 0xd5, 0xed, 0x83, 0xd9, 0xb8, 0xe0, 0x16, 0x3e, 0xa6, 0x54, 0xfe, 0x9c, 0x45, 0xfe,
	0xbf, 0x60, 0x84, 0x0b, 0x2b, 0xc1, 0x88, 0xd8, 0x0b, 0xc6, 0xfe, 0xef, 0x5f, 0x3b, 0xde, 0xc6,
	0x1e, 0x7a, 0x37, 0x70, 0x2a, 0x4e, 0x3b, 0xd0, 0x93, 0x7a, 0x1a, 0xe6, 0x5e, 0xec, 0xa9, 0x18,
	0xc2, 0xa8, 0x66, 0x10, 0x2c, 0xcc, 0xb5, 0xe5, 0x2b, 0xfe, 0x4c, 0x21, 0x96, 0x4a, 0x55, 0x4f,
	0x31, 0xd5, 0x48, 0xce, 0x89, 0xb7, 0xee, 0xfd, 0xb3, 0x96, 0xe9, 0x99, 0xa4, 0x74, 0x82, 0x36,
	0x0b, 0x4c, 0x99, 0x21, 0xd3, 0x69, 0xa7, 0x94, 0x62, 0x65, 0xc9, 0x74, 0x83, 0xe6, 0xb1, 0x86,
	0xcc, 0xfd, 0x27, 0x58, 0x4b, 0xf2, 0x2f, 0x4a, 0xb8, 0xe2, 0x0c, 0x4c, 0x3a, 0x7f, 0x6d, 0xbf,
	0x73, 0xaa, 0xe9, 0x83, 0x23, 0x0d, 0x93, 0x81, 0x56, 0x03, 0x27, 0xc3, 0xb6, 0x7d, 0x8d, 0x52,
	0x9f, 0xb0, 0x2d, 0x5b, 0xb5, 0x30, 0x0b, 0x88, 0x33, 0x29, 0xb4, 0xc0, 0x42, 0x2e, 0x25, 0x53,
	0x1b, 0x5c, 0x44, 0x36, 0xe2, 0x6c, 0x98, 0xa7, 0xf5, 0x99, 0x1a, 0x75, 0x8e, 0x6b, 0xcd, 0x40,
	0x18, 0xf7, 0x89, 0xc9, 0x42, 0xbd, 0xd7, 0xe9, 0xf7, 0xe7, 0x3a, 0x72, 0x55, 0x23, 0x5a, 0x8a,
	0x49, 0xd6, 0x82, 0xa5, 0x98, 0x66, 0xc9, 0x82, 0x1a, 0xe5, 0x3b, 0xd1, 0xe8, 0x0c, 0x5d, 0xea,
	0x4e, 0x5b, 0x8b, 0x96, 0x41, 0x24, 0x3b, 0x3e, 0x69, 0x0d, 0x9a, 0xdd, 0x96, 0x16, 0x2d, 0xf1,
	0x23, 0x36, 0x26, 0x49, 0x53, 0xb2, 0x50, 0x87, 0x1a, 0x68, 0x60, 0xfa, 0x53, 0x1f, 0x70, 0x22,
	0xa4, 0xf5, 0xa9, 0x8e, 0x86, 0x8e, 0x70, 0xac, 0x35, 0x9a, 0x35, 0xce, 0xd0, 0xaa, 0xdf, 0x00,
	0x44, 0xfc, 0x87, 0xce, 0x98, 0x66, 0x40, 0x52, 0x15, 0xcd, 0xbe, 0x6c, 0x7a, 0x5d, 0xce, 0x54,
	0x7f, 0x80, 0x42, 0xc0, 0x77, 0x28, 0x25, 0x9a, 0x67, 0x3c, 0x38, 0x00, 0x60, 0xf9, 0xb0, 0xd3,
	0x39, 0xe4, 0xac, 0x12, 0x07, 0x87, 0x1f, 0x18, 0x20, 0xfa, 0xba, 0xb0, 0xb9, 0xe8, 0x83, 0x00,
	0x1c, 0xe2, 0xbf, 0x52, 0x04, 0x71, 0x89, 0x5f, 0x0f, 0xc2, 0x7a, 0x83, 0x85, 0xeb, 0xbd, 0xf3,
	0x73, 0x76, 0x04, 0xd5, 0xb0, 0x5d, 0xb2, 0x4a, 0xf9, 0x1d, 0x4e, 0x2e, 0xc0, 0xa7, 0x54, 0xf0,
	0xee, 0xa3, 0xa2, 0xe6, 0x1e, 0x9c, 0x93, 0x95, 0xd9, 0xd8, 0xd7, 0x2a, 0xb2, 0x62, 0x90, 0x7c,
	0x23, 0x9f, 0xfb, 0x5c, 0x89, 0xcb, 0xee, 0xd5, 0xef, 0x31, 0x0e, 0xa5, 0xbe, 0x82, 0x7a, 0x04,
	0xdb, 0x83, 0xda, 0x21, 0xe5, 0xa3, 0x7a, 0xfd, 0xa8, 0xd9, 0xc2, 0x48, 0xc4, 0x06, 0xa0, 0x37,
	0x25, 0x2a, 0x59, 0xc8, 0xfa, 0x41, 0xf5, 0xcf, 0x19, 0x58, 0x4d, 0x7c, 0x8c, 0x81, 0x61, 0xe6,
	0x3d, 0x9f, 0x63, 0xa0, 0x36, 0x71, 0xce, 0x5a, 0xe3, 0x4f, 0xb1, 0x76, 0x94, 0xc2, 0x09, 0x6b,
	0x54, 0x12, 0xe8, 0x6a, 0x3d, 0x36, 0x65, 0x86, 0x7c, 0x2d, 0x29, 0xd5, 0xa3, 0xfd, 0xf7, 0x71,
	0x41, 0xce, 0xc5, 0xd1, 0xb6, 0xd2, 0x24, 0x89, 0xf6, 0x5c, 0xf5, 0xb7, 0x12, 0x94, 0x62, 0x06,
	0x51, 0xb6, 0x20, 0x6b, 0x48, 0x3e, 0x58, 0xda, 0x5d, 0x8f, 0x7f, 0xbb, 0x81, 0xb8, 0x42, 0x11,
	0xc1, 0x14, 0x67, 0x33, 0x4a, 0x57, 0x1c, 0x7a, 0xbd, 0xc8, 0x87, 0x5f, 0x3e, 0x39, 0xf6, 0x10,
	0x6f, 0x10, 0x31, 0x43, 0xfa, 0x26, 0x49, 0x1f, 0xbb, 0x7e, 0x88, 0xfb, 0x4b, 0xbe, 0xc6, 0xa8,
	0xfc, 0x13, 0xe6, 0xcd, 0x38, 0x3b, 0xd2, 0x1e, 0x49, 0xd1, 0x22, 0xab, 0x9b, 0x7e, 0xd5, 0x15,
	0x17, 0xbe, 0xf4, 0xc6, 0x88, 0x38, 0x13, 0x6b, 0x3a, 0x15, 0x9e, 0x6f, 0xa4, 0x0d, 0x28, 0xca,
	0xba, 0x20, 0x31, 0x5d, 0xf9, 0x19, 0xc5, 0x97, 0x50, 0x0c, 0x73, 0x16, 0x2e, 0xb2, 0x97, 0x76,
	0xd5, 0xb9, 0x53, 0x84, 0x79, 0x0a, 0x2d, 0x98, 0x66, 0xcc, 0x4b, 0x9c, 0x8b, 0x63, 0x44, 0x8b,
	0x27, 0xd1, 0x92, 0xa4, 0xe3, 0x7a, 0x11, 0x6f, 0xe7, 0xbc, 0x9a, 0xea, 0x47, 0xc9, 0x04, 0x9a,
	0xca, 0xb2, 0x8b, 0x92, 0xe6, 0x0d, 0xee, 0xa4, 0xd8, 0x17, 0x45, 0x72, 0x7e, 0x85, 0x29, 0x25,
	0x73, 0x7f, 0x19, 0xae, 0xa3, 0xdc, 0x5f, 0xc6, 0x67, 0x5a, 0x99, 0x88, 0x20, 0x3d, 0xd3, 0x71,
	0x45, 0x3b, 0x87, 0xe4, 0x21, 0xf8, 0x4c, 0x27, 0x17, 0xff, 0x5e, 0x20, 0x3a, 0xa6, 0x5f, 0x93,
	0x78, 0x08, 0x77, 0xac, 0xf1, 0xd4, 0x21, 0xeb, 0x60, 0xc0, 0x4d, 0x7c, 0xe4, 0xb2, 0xc9, 0x4b,
	0xcf, 0x11, 0xe9, 0x98, 0xee, 0x0b, 0xbc, 0x50, 0x32, 0x81, 0x49, 0x2b, 0x4c, 0x3e, 0x42, 0x25,
	0x0d, 0xed, 0xdb, 0x29, 0xca, 0x1a, 0xe5, 0x73, 0xcd, 0x51, 0xe2, 0xc9, 0x27, 0xe8, 0xd4, 0xa7,
	0x06, 0xe2, 0xa4, 0xc0, 0xa0, 0xe2, 0x7f, 0xbd, 0xf5, 0xe9, 0xfc, 0x51, 0x02, 0x9a, 0xd6, 0x0d,
	0x04, 0x2b, 0xff, 0x92, 0x83, 0x42, 0x68, 0x47, 0x34, 0x42, 0xc0, 0xc3, 0xfc, 0x9b, 0xb1, 0x02,
	0x4b, 0xc4, 0xbb, 0xfc, 0xbd, 0x11, 0x90, 0x24, 0x78, 0x96, 0xff, 0x36, 0x46, 0x4f, 0x71, 0xa1,
	0x35, 0xfc, 0xe7, 0xb0, 0xe7, 0x90, 0x67, 0xd2, 0xe3, 0x3f, 0xd2, 0x3f, 0x78, 0xdf, 0xe5, 0xd9,
	0x69, 0x92, 0x94, 0xf2, 0x15, 0x2c, 0x11, 0xf3, 0x61, 0x12, 0xf6, 0x71, 0xe9, 0x17, 0xf2, 0x35,
	0x90, 0xa8, 0x0f, 0x73, 0xac, 0x8f, 0x8f, 0xc0, 0x7b, 0x48, 0xc5, 0xfd, 0xe0, 0xb9, 0x90, 0x2c,
	0x92, 0xe1, 0x0f, 0x22, 0xd3, 0x9f, 0x2c, 0x95, 0x82, 0xf7, 0x63, 0x26, 0x7a, 0xbe, 0xe3, 0xe0,
	0x9f, 0x4c, 0x0b, 0x7d, 0x03, 0x3c, 0x83, 0x6a, 0xbc, 0x94, 0xfc, 0x9e, 0x7b, 0x51, 0xe4, 0xa4,
	0xf1, 0x1b, 0xe4, 0x51, 0xbc, 0x07, 0xff, 0x2b, 0xbd, 0xf0, 0x7d, 0x3a, 0x28, 0x52, 0x65, 0xe6,
	0x8a, 0x54, 0xe4, 0xca, 0xa3, 0x85, 0xb5, 0x30, 0xff, 0x6d, 0x21, 0x91, 0x5f, 0x64, 0xf1, 0x6a,
	0x51, 0x3b, 0x12, 0x8b, 0x58, 0x7b, 0x8e, 0xaf, 0x9c, 0x92, 0x48, 0x4e, 0x97, 0xfc, 0xb6, 0x1b,
	0x41, 0xda, 0xc2, 0xd9, 0x28, 0xb1, 0xa4, 0xff, 0xc9, 0xc0, 0x46, 0xea, 0x6e, 0x90, 0x93, 0x85,
	0x37, 0xca, 0xff, 0x48, 0x2f, 0x13, 0x7c, 0x86, 0x79, 0x36, 0x32, 0x26, 0x6f, 0xa8, 0x9e, 0x31,
	0x2f, 0x51, 0x08, 0xbe, 0xdc, 0x4a, 0x43, 0x50, 0x36, 0xe8, 0x4a, 0xdf, 0xfd, 0x5c, 0x70, 0xdb,
	0x46, 0xe2, 0xdc, 0xf3, 0x21, 0x0f, 0x35, 0xe4, 0xb0, 0x46, 0x24, 0x79, 0x47, 0xed, 0x79, 0xf6,
	0xd4, 0x67, 0xe9, 0xa8, 0xae, 0x33, 0xdb, 0xf3, 0xec, 0x71, 0x44, 0xb1, 0x29, 0xfc, 0xcd, 0xa6,
	0x7e, 0x80, 0x63, 0x3a, 0xfd, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x1d, 0x8f, 0x55, 0x0b, 0xbd,
	0x2b, 0x00, 0x00,
}
